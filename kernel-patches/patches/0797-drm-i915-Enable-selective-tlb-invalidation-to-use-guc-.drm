From 92a49101b5ae5b29a82c8cd5b9f5c171033fc6ee Mon Sep 17 00:00:00 2001
From: "Chew, Tong Liang" <tong.liang.chew@intel.com>
Date: Tue, 20 Sep 2022 16:13:38 +0800
Subject: [PATCH 797/800] drm/i915: Enable selective tlb invalidation to use
 guc ct

This supports selective and full tlb invalidations. When GuC is enabled
    the tlb invalidations use guc ct otherwise use mmio interface.

Signed-off-by: Chew, Tong Liang <tong.liang.chew@intel.com>
---
 drivers/gpu/drm/i915/gt/intel_gt.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/gt/intel_gt.c b/drivers/gpu/drm/i915/gt/intel_gt.c
index eeeb78c6a63e..e69084c06f47 100644
--- a/drivers/gpu/drm/i915/gt/intel_gt.c
+++ b/drivers/gpu/drm/i915/gt/intel_gt.c
@@ -37,6 +37,7 @@
 #include "intel_pm.h"
 #include "iov/intel_iov.h"
 #include "shmem_utils.h"
+#include "uc/intel_guc.h"
 
 void intel_gt_common_init_early(struct intel_gt *gt)
 {
@@ -1115,11 +1116,15 @@ void intel_gt_invalidate_tlb(struct intel_gt *gt, u32 seqno)
 		return;
 
 	with_intel_gt_pm_if_awake(gt, wakeref) {
+		struct intel_guc *guc = &gt->uc.guc;
 		mutex_lock(&gt->tlb.invalidate_lock);
 		if (tlb_seqno_passed(gt, seqno))
 			goto unlock;
 
-		mmio_invalidate_full(gt);
+		if (INTEL_GUC_SUPPORTS_TLB_INVALIDATION(guc)) {
+			intel_guc_invalidate_tlb_guc(guc, INTEL_GUC_TLB_INVAL_MODE_HEAVY);
+		} else
+			mmio_invalidate_full(gt);
 
 		write_seqcount_invalidate(&gt->tlb.seqno);
 unlock:
-- 
2.25.1

