From 064d5df85439f98d67acb441e94a0a1bd331a1ec Mon Sep 17 00:00:00 2001
From: Jakub Dlugolecki <jakub.dlugolecki@intel.com>
Date: Wed, 26 May 2021 05:24:11 -0700
Subject: [PATCH 5/5] EDAC/i10nm: Retrieve and print error injection registers

Print error injection registers to distinguish natural or injected errors.

[ Qiuxu: Modify the subject and commit message to reflect what the patch does.
         Fix the 'len' passed to snprintf().
         Format the patch in kernel coding style. ]

Signed-off-by: Jakub Dlugolecki <jakub.dlugolecki@intel.com>
Signed-off-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
---
 drivers/edac/i10nm_base.c | 51 +++++++++++++++++++++++++++++++++++++--
 1 file changed, 49 insertions(+), 2 deletions(-)

diff --git a/drivers/edac/i10nm_base.c b/drivers/edac/i10nm_base.c
index 83345bfac246..b230061e85ad 100644
--- a/drivers/edac/i10nm_base.c
+++ b/drivers/edac/i10nm_base.c
@@ -80,6 +80,36 @@ static u32 offsets_scrub_spr[]  = {0x22c60, 0x22c54, 0x22f08, 0x22c58, 0x22c28,
 static u32 offsets_demand_icx[] = {0x22e54, 0x22e60, 0x22e64, 0x22e58, 0x22e5c, 0x20ee0};
 static u32 offsets_demand_spr[] = {0x22e54, 0x22e60, 0x22f10, 0x22e58, 0x22e5c, 0x20ee0};
 
+#define EDAC_DEBUG_SCHEMA "v0.1.0"
+
+/*
+ * edac_debug_schema v0.1.0:
+ * "CORRECTION_DEBUG_DEV_VEC_1",
+ * "CORRECTION_DEBUG_DEV_VEC_2",
+ * "CORRECTION_DEBUG_LOG",
+ * "CORRECTION_DEBUG_PLUS1_LOG",
+ * "RSP_FUNC_ADDR_MASK_HI",
+ * "RSP_FUNC_ADDR_MASK_LO",
+ * "RSP_FUNC_ADDR_MATCH_HI",
+ * "RSP_FUNC_ADDR_MATCH_LO",
+ * "RSP_FUNC_RANK_BANK_MATCH",
+ * "RSP_FUNC_ADDR2_MATCH_LO",
+ * "RSP_FUNC_ADDR2_MATCH_HI",
+ * "RSP_FUNC_ADDR2_MASK_LO",
+ * "RSP_FUNC_ADDR2_MASK_HI",
+ * "RSP_FUNC_CRC_ERR_INJ_DEV0_XOR_MSK",
+ * "RSP_FUNC_CRC_ERR_INJ_DEV1_XOR_MSK",
+ * "RSP_FUNC_CRC_ERR_INJ_DEV0_XOR_MSK2",
+ * "RSP_FUNC_CRC_ERR_INJ_DEV1_XOR_MSK2",
+ * "RSP_FUNC_CRC_ERR_INJ_EXTRA"
+ */
+
+static u32 offsets_debug_info[] = {
+	0x22cc0, 0x22cc4, 0x22c44, 0x22c48, 0x2099c, 0x20998,
+	0x20994, 0x20990, 0x209a0, 0x209a4, 0x209a8, 0x209ac,
+	0x209b0, 0x23008, 0x2300c, 0x23030, 0x23034, 0x23010
+};
+
 static void __enable_retry_rd_err_log(struct skx_imc *imc, int chan, bool enable)
 {
 	u32 s, d;
@@ -140,7 +170,8 @@ static void show_retry_rd_err_log(struct decoded_addr *res, char *msg,
 	u32 corr0, corr1, corr2, corr3;
 	u64 log2a, log5;
 	u32 *offsets;
-	int n;
+	int i, n;
+	u32 reg;
 
 	if (!imc->mbase)
 		return;
@@ -169,13 +200,29 @@ static void show_retry_rd_err_log(struct decoded_addr *res, char *msg,
 	corr3 = I10NM_GET_REG32(imc, res->channel, 0x22c24);
 
 	if (len - n > 0)
-		snprintf(msg + n, len - n,
+		n += snprintf(msg + n, len - n,
 			 " correrrcnt[%.4x %.4x %.4x %.4x %.4x %.4x %.4x %.4x]",
 			 corr0 & 0xffff, corr0 >> 16,
 			 corr1 & 0xffff, corr1 >> 16,
 			 corr2 & 0xffff, corr2 >> 16,
 			 corr3 & 0xffff, corr3 >> 16);
 
+	if (len - n > 0) {
+		n += snprintf(msg + n, len - n, " edac_schema:%s edac_debug[", EDAC_DEBUG_SCHEMA);
+
+		for (i = 0; i < ARRAY_SIZE(offsets_debug_info); i++) {
+			if (len - n <= 0)
+				break;
+
+			reg = I10NM_GET_REG32(imc, res->channel, offsets_debug_info[i]);
+			n += snprintf(msg + n, len - n, "%x ", reg);
+		}
+
+		if (len - n > 0)
+			/* Also remove the space just before ']' */
+			snprintf(msg + n - 1, len - n + 1, "]");
+	}
+
 	/* Clear status bits */
 	if (retry_rd_err_log == 2 && (log0 & RETRY_RD_ERR_LOG_OVER_UC_V)) {
 		log0 &= ~RETRY_RD_ERR_LOG_OVER_UC_V;
-- 
2.32.0

