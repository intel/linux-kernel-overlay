From ba348b97b8282dc7ce92c412970615bcf4546bde Mon Sep 17 00:00:00 2001
From: Chen Meng J <meng.j.chen@intel.com>
Date: Tue, 8 Aug 2023 13:25:25 +0800
Subject: [PATCH 17/20] media: i2c: Disable ti960 continuous clock when not
 streaming

Signed-off-by: Hao Yao <hao.yao@intel.com>
Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
---
 drivers/media/i2c/ti960-des.c | 33 +++++++++++++++++++++++++++++----
 drivers/media/i2c/ti960-reg.h |  5 +++--
 2 files changed, 32 insertions(+), 6 deletions(-)

diff --git a/drivers/media/i2c/ti960-des.c b/drivers/media/i2c/ti960-des.c
index dd5b133e8f79..1a03bf27a5da 100644
--- a/drivers/media/i2c/ti960-des.c
+++ b/drivers/media/i2c/ti960-des.c
@@ -785,7 +785,7 @@ static int ti960_set_power(struct v4l2_subdev *subdev, int on)
 		return ret;
 
 	/* Select TX port 0 R/W by default */
-	ret = ti960_reg_write(va, 0x32, 0x01);
+	ret = ti960_reg_write(va, TI960_CSI_PORT_SEL, 0x01);
 	/* Configure MIPI clock bsaed on control value. */
 	ret = ti960_reg_write(va, TI960_CSI_PLL_CTL,
 			    ti960_op_sys_clock_reg_val[
@@ -793,7 +793,6 @@ static int ti960_set_power(struct v4l2_subdev *subdev, int on)
 	if (ret)
 		return ret;
 	val = TI960_CSI_ENABLE;
-	val |= TI960_CSI_CONTS_CLOCK;
 	/* Enable skew calculation when 1.6Gbps output is enabled. */
 	if (v4l2_ctrl_g_ctrl(va->link_freq) == 3) {
 		val |= TI960_CSI_SKEWCAL;
@@ -1155,6 +1154,19 @@ static const struct v4l2_subdev_core_ops ti960_core_subdev_ops = {
 	.s_power = ti960_set_power,
 };
 
+static u8 ti960_get_nubmer_of_streaming(void)
+{
+	u8 n = 0;
+	u8 i = 0;
+
+	for (; i < ARRAY_SIZE(ti960_set_sub_stream); i++) {
+		if (ti960_set_sub_stream[i])
+			n++;
+	}
+
+	return n;
+}
+
 static int ti960_s_ctrl(struct v4l2_ctrl *ctrl)
 {
 	struct ti960 *va = container_of(ctrl->handler,
@@ -1170,11 +1182,24 @@ static int ti960_s_ctrl(struct v4l2_ctrl *ctrl)
 		dev_info(va->sd.dev, "V4L2_CID_IPU_SET_SUB_STREAM %x\n", val);
 		vc_id = (val >> 8) & 0x00FF;
 		state = val & 0x00FF;
-		if (vc_id > NR_OF_TI960_SINK_PADS - 1)
+		if (vc_id > NR_OF_TI960_SINK_PADS - 1) {
 			dev_err(va->sd.dev, "invalid vc %d\n", vc_id);
-		else
+			break;
+		}
+
+		ti960_reg_write(va, TI960_CSI_PORT_SEL, 0x01);
+		ti960_reg_read(va, TI960_CSI_CTL, &val);
+		if (state) {
+			if (ti960_get_nubmer_of_streaming() == 0)
+				val |= TI960_CSI_CONTS_CLOCK;
 			ti960_set_sub_stream[vc_id] = state;
+		} else {
+			ti960_set_sub_stream[vc_id] = state;
+			if (ti960_get_nubmer_of_streaming() == 0)
+				val &= ~TI960_CSI_CONTS_CLOCK;
+		}
 
+		ti960_reg_write(va, TI960_CSI_CTL, val);
 		ti960_set_stream_vc(va, vc_id, state);
 		break;
 	default:
diff --git a/drivers/media/i2c/ti960-reg.h b/drivers/media/i2c/ti960-reg.h
index e7fb3ab7d9f4..1ff971bf6c0c 100644
--- a/drivers/media/i2c/ti960-reg.h
+++ b/drivers/media/i2c/ti960-reg.h
@@ -87,10 +87,10 @@ static const struct ti960_register_write ti960_init_settings[] = {
 	{0xb1, 0x04},
 	{0xb2, 0x04},
 	{0x32, 0x12}, /* select TX1 R/W */
-	{0x33, 0x03}, /* CSI_ENABLE, CONTS_CLOCK */
+	{0x33, 0x01}, /* CSI_ENABLE */
 	{0x34, 0x08}, /* CSI_PASS_MODE all */
 	{0x32, 0x01}, /* select TX0 R/W */
-	{0x33, 0x03}, /* CSI_ENABLE, CONTS_CLOCK */
+	{0x33, 0x01}, /* CSI_ENABLE */
 	{0x34, 0x08}, /* CSI_PASS_MODE all */
 	{0x20, 0xf0},
 	{0x21, 0x03},
@@ -113,6 +113,7 @@ static const struct ti960_register_write ti960_init_settings[] = {
 #define TI960_RAW12_ID		0x71
 #define TI960_CSI_VC_MAP	0x72
 #define TI960_PORT_CONFIG2	0x7c
+#define TI960_CSI_PORT_SEL	0x32
 #define TI960_CSI_CTL		0x33
 #define TI960_CSI_CTL2		0x34
 
-- 
2.25.1

