From eca98f4ad258299a7cec828ea9e5883d330a2507 Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Wed, 22 Mar 2023 15:45:42 +0800
Subject: [PATCH 55/60] media: intel-ipu6: Correct the stream_count for graph
 pipe

[Issue]
User space setup link and stream on video nodes separately for
multiple camera cases. Then the stream_count of media_entity would
be different if media link setup later than stream on video node.
For example, the stream_count of video entity may be 4, 4, 4, 3.
When streaming off, media_pipeline_stop will go through all
media entitys and decrease stream_count and set pipe to NULL
if stream_count reduced to 0.
The pipe of camera 3 was released after closed camera 0, 1, 2
due to stream_count was set 0. But the pipe was still in use
in IPU driver. It caused random panic.

[Changes]
Find previous stream_count of entitys, and use it to set all entitys.

[Test Platform]
TI960+6Ximx390

Signed-off-by: Qingwu Zhang <qingwu.zhang@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu-isys-video.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/media/pci/intel/ipu-isys-video.c b/drivers/media/pci/intel/ipu-isys-video.c
index 45bccc54c3c9..5b10140778a1 100644
--- a/drivers/media/pci/intel/ipu-isys-video.c
+++ b/drivers/media/pci/intel/ipu-isys-video.c
@@ -1403,6 +1403,8 @@ static int media_pipeline_walk_by_vc(struct ipu_isys_video *av,
 	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(pipe);
 	struct media_pad *source_pad = media_entity_remote_pad(&av->pad);
 	unsigned int pad_id;
+	int previous_stream_count = 0;
+	struct media_entity *entity_enum = entity;
 
 	if (!source_pad) {
 		dev_err(entity->graph_obj.mdev->dev, "no remote pad found\n");
@@ -1423,6 +1425,12 @@ static int media_pipeline_walk_by_vc(struct ipu_isys_video *av,
 			goto error_graph_walk_start;
 	}
 
+	media_graph_walk_start(&pipe->graph, entity_enum);
+	while ((entity_enum = media_graph_walk_next(graph))) {
+		if (entity_enum->stream_count > previous_stream_count)
+			previous_stream_count = entity_enum->stream_count;
+	}
+
 	media_graph_walk_start(&pipe->graph, entity);
 	while ((entity = media_graph_walk_next(graph))) {
 		DECLARE_BITMAP(active, MEDIA_ENTITY_MAX_PADS);
@@ -1431,7 +1439,7 @@ static int media_pipeline_walk_by_vc(struct ipu_isys_video *av,
 		dev_dbg(entity->graph_obj.mdev->dev, "entity name:%s\n",
 			entity->name);
 
-		entity->stream_count++;
+		entity->stream_count = previous_stream_count + 1;
 
 		if (entity->pipe && entity->pipe == pipe) {
 			pr_err("Pipe active for %s. Can't start for %s\n",
-- 
2.25.1

