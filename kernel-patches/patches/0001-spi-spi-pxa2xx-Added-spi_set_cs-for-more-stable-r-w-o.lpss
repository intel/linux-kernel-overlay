From be7a7b2e803b2d16b6982fd112d9d04acf544577 Mon Sep 17 00:00:00 2001
From: gauravbaindur <gauravx.baindur@intel.com>
Date: Thu, 18 Apr 2024 09:14:45 +0530
Subject: [PATCH] spi:spi-pxa2xx: Added spi_set_cs() for more stable r/w
 operation

Signed-off-by: gauravbaindur <gauravx.baindur@intel.com>

spi:spi-pxa2xx: Added spi_set_cs() for more stable r/w operation

Signed-off-by: gauravbaindur <gauravx.baindur@intel.com>
---
 drivers/spi/spi-pxa2xx.c | 4 ++++
 drivers/spi/spi.c        | 3 ++-
 include/linux/spi/spi.h  | 2 ++
 3 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/spi/spi-pxa2xx.c b/drivers/spi/spi-pxa2xx.c
index f2a856f6a99e..347db5c4a4e4 100644
--- a/drivers/spi/spi-pxa2xx.c
+++ b/drivers/spi/spi-pxa2xx.c
@@ -1081,6 +1081,8 @@ static int pxa2xx_spi_transfer_one(struct spi_controller *controller,
 	if (!pxa25x_ssp_comp(drv_data))
 		pxa2xx_spi_write(drv_data, SSTO, chip->timeout);
 
+	spi_set_cs(spi, false, false);
+
 	/* First set CR1 without interrupt and service enables */
 	pxa2xx_spi_update(drv_data, SSCR1, change_mask, cr1);
 
@@ -1090,6 +1092,8 @@ static int pxa2xx_spi_transfer_one(struct spi_controller *controller,
 	/* Restart the SSP */
 	pxa_ssp_enable(drv_data->ssp);
 
+	spi_set_cs(spi, true, false);
+
 	if (is_mmp2_ssp(drv_data)) {
 		u8 tx_level = read_SSSR_bits(drv_data, SSSR_TFL_MASK) >> 8;
 
diff --git a/drivers/spi/spi.c b/drivers/spi/spi.c
index 1e08cd571d21..b20a6a79c8b6 100644
--- a/drivers/spi/spi.c
+++ b/drivers/spi/spi.c
@@ -943,7 +943,7 @@ static void spi_res_release(struct spi_controller *ctlr, struct spi_message *mes
 
 /*-------------------------------------------------------------------------*/
 
-static void spi_set_cs(struct spi_device *spi, bool enable, bool force)
+void spi_set_cs(struct spi_device *spi, bool enable, bool force)
 {
 	bool activate = enable;
 
@@ -1000,6 +1000,7 @@ static void spi_set_cs(struct spi_device *spi, bool enable, bool force)
 			spi_delay_exec(&spi->cs_inactive, NULL);
 	}
 }
+EXPORT_SYMBOL_GPL(spi_set_cs);
 
 #ifdef CONFIG_HAS_DMA
 static int spi_map_buf_attrs(struct spi_controller *ctlr, struct device *dev,
diff --git a/include/linux/spi/spi.h b/include/linux/spi/spi.h
index 8cc7a99927f9..2ad089bbcd63 100644
--- a/include/linux/spi/spi.h
+++ b/include/linux/spi/spi.h
@@ -785,6 +785,8 @@ extern int spi_controller_resume(struct spi_controller *ctlr);
 extern struct spi_message *spi_get_next_queued_message(struct spi_controller *ctlr);
 extern void spi_finalize_current_message(struct spi_controller *ctlr);
 extern void spi_finalize_current_transfer(struct spi_controller *ctlr);
+/* SPI driver calls this function to assert/deassert the chip select */
+extern void spi_set_cs(struct spi_device *spi, bool enable, bool force);
 
 /* Helper calls for driver to timestamp transfer */
 void spi_take_timestamp_pre(struct spi_controller *ctlr,
-- 
2.34.1

