From ba3e2f5022899529316a1140bf5083b01c804d4c Mon Sep 17 00:00:00 2001
From: "Baindur, GauravX" <gauravx.baindur@intel.com>
Date: Fri, 19 May 2023 12:52:49 +0530
Subject: [PATCH] spi:spi-pxa2xx: Added spi_set_cs() for more stable r/w
 operation

Signed-off-by: Baindur, GauravX <gauravx.baindur@intel.com>
---
 drivers/spi/spi-pxa2xx.c | 5 +++++
 drivers/spi/spi.c        | 3 ++-
 include/linux/spi/spi.h  | 3 +++
 3 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/spi/spi-pxa2xx.c b/drivers/spi/spi-pxa2xx.c
index 1bab18a0f262..e09d555c8684 100644
--- a/drivers/spi/spi-pxa2xx.c
+++ b/drivers/spi/spi-pxa2xx.c
@@ -1081,6 +1081,8 @@ static int pxa2xx_spi_transfer_one(struct spi_controller *controller,
 	if (!pxa25x_ssp_comp(drv_data))
 		pxa2xx_spi_write(drv_data, SSTO, chip->timeout);
 
+	//Add spi_set_cs for SPI mode 3 r/w issue
+	spi_set_cs(spi, false, false);
 	/* First set CR1 without interrupt and service enables */
 	pxa2xx_spi_update(drv_data, SSCR1, change_mask, cr1);
 
@@ -1090,6 +1092,9 @@ static int pxa2xx_spi_transfer_one(struct spi_controller *controller,
 	/* Restart the SSP */
 	pxa_ssp_enable(drv_data->ssp);
 
+	//Add spi_set_cs for SPI mode 3 r/w issue
+	spi_set_cs(spi, true, false);
+
 	if (is_mmp2_ssp(drv_data)) {
 		u8 tx_level = read_SSSR_bits(drv_data, SSSR_TFL_MASK) >> 8;
 
diff --git a/drivers/spi/spi.c b/drivers/spi/spi.c
index 9291b2a0e887..603a599c6635 100644
--- a/drivers/spi/spi.c
+++ b/drivers/spi/spi.c
@@ -963,7 +963,7 @@ static void spi_res_release(struct spi_controller *ctlr, struct spi_message *mes
 
 /*-------------------------------------------------------------------------*/
 
-static void spi_set_cs(struct spi_device *spi, bool enable, bool force)
+void spi_set_cs(struct spi_device *spi, bool enable, bool force)
 {
 	bool activate = enable;
 
@@ -1020,6 +1020,7 @@ static void spi_set_cs(struct spi_device *spi, bool enable, bool force)
 			spi_delay_exec(&spi->cs_inactive, NULL);
 	}
 }
+EXPORT_SYMBOL_GPL(spi_set_cs);
 
 #ifdef CONFIG_HAS_DMA
 static int spi_map_buf_attrs(struct spi_controller *ctlr, struct device *dev,
diff --git a/include/linux/spi/spi.h b/include/linux/spi/spi.h
index cfe42f8cd7a4..b3bab44b02af 100644
--- a/include/linux/spi/spi.h
+++ b/include/linux/spi/spi.h
@@ -296,6 +296,9 @@ static inline void spi_set_csgpiod(struct spi_device *spi, u8 idx, struct gpio_d
 	spi->cs_gpiod = csgpiod;
 }
 
+/* SPI driver calls this function to assert/deassert the chip select */
+extern void spi_set_cs(struct spi_device *spi, bool enable, bool force);
+
 /**
  * struct spi_driver - Host side "protocol" driver
  * @id_table: List of SPI devices supported by this driver
-- 
2.25.1

