From b9dbb97ef090add8d6de41ddd3cf46449459b640 Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Tue, 19 Jul 2022 14:49:47 +0800
Subject: [PATCH 21/62] Revert "drm/i915/dsi: fix VBT send packet port
 selection for ICL+"

This reverts commit e28321e013653d77dcbc015d409e41beb037a639.
---
 drivers/gpu/drm/i915/display/intel_dsi_vbt.c | 33 +++++++-------------
 1 file changed, 11 insertions(+), 22 deletions(-)

diff --git a/drivers/gpu/drm/i915/display/intel_dsi_vbt.c b/drivers/gpu/drm/i915/display/intel_dsi_vbt.c
index 8777d35ac7a7..eed037ec0b29 100644
--- a/drivers/gpu/drm/i915/display/intel_dsi_vbt.c
+++ b/drivers/gpu/drm/i915/display/intel_dsi_vbt.c
@@ -121,25 +121,9 @@ struct i2c_adapter_lookup {
 #define  ICL_GPIO_DDPA_CTRLCLK_2	8
 #define  ICL_GPIO_DDPA_CTRLDATA_2	9
 
-static enum port intel_dsi_seq_port_to_port(struct intel_dsi *intel_dsi,
-					    u8 seq_port)
+static enum port intel_dsi_seq_port_to_port(u8 port)
 {
-	/*
-	 * If single link DSI is being used on any port, the VBT sequence block
-	 * send packet apparently always has 0 for the port. Just use the port
-	 * we have configured, and ignore the sequence block port.
-	 */
-	if (hweight8(intel_dsi->ports) == 1)
-		return ffs(intel_dsi->ports) - 1;
-
-	if (seq_port) {
-		if (intel_dsi->ports & PORT_B)
-			return PORT_B;
-		else if (intel_dsi->ports & PORT_C)
-			return PORT_C;
-	}
-
-	return PORT_A;
+	return port ? PORT_C : PORT_A;
 }
 
 static const u8 *mipi_exec_send_packet(struct intel_dsi *intel_dsi,
@@ -161,10 +145,15 @@ static const u8 *mipi_exec_send_packet(struct intel_dsi *intel_dsi,
 
 	seq_port = (flags >> MIPI_PORT_SHIFT) & 3;
 
-	port = intel_dsi_seq_port_to_port(intel_dsi, seq_port);
-
-	if (drm_WARN_ON(&dev_priv->drm, !intel_dsi->dsi_hosts[port]))
-		goto out;
+	/* For DSI single link on Port A & C, the seq_port value which is
+	 * parsed from Sequence Block#53 of VBT has been set to 0
+	 * Now, read/write of packets for the DSI single link on Port A and
+	 * Port C will based on the DVO port from VBT block 2.
+	 */
+	if (intel_dsi->ports == (1 << PORT_C))
+		port = PORT_C;
+	else
+		port = intel_dsi_seq_port_to_port(seq_port);
 
 	dsi_device = intel_dsi->dsi_hosts[port]->device;
 	if (!dsi_device) {
-- 
2.27.0

