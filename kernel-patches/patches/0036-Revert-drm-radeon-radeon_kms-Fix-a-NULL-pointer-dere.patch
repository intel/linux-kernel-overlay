From 383d83a889d74391e36ac5bd53a576ff093001c1 Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Wed, 16 Feb 2022 00:20:18 +0800
Subject: [PATCH 36/50] Revert "drm/radeon/radeon_kms: Fix a NULL pointer
 dereference in radeon_driver_open_kms()"

This reverts commit f277978d6c463942e1bd0137053f74ae4d6892af.
---
 drivers/gpu/drm/radeon/radeon_kms.c | 36 +++++++++++++----------------
 1 file changed, 16 insertions(+), 20 deletions(-)

diff --git a/drivers/gpu/drm/radeon/radeon_kms.c b/drivers/gpu/drm/radeon/radeon_kms.c
index 204634b23928..8c0a572940e8 100644
--- a/drivers/gpu/drm/radeon/radeon_kms.c
+++ b/drivers/gpu/drm/radeon/radeon_kms.c
@@ -634,8 +634,6 @@ void radeon_driver_lastclose_kms(struct drm_device *dev)
 int radeon_driver_open_kms(struct drm_device *dev, struct drm_file *file_priv)
 {
 	struct radeon_device *rdev = dev->dev_private;
-	struct radeon_fpriv *fpriv;
-	struct radeon_vm *vm;
 	int r;
 
 	file_priv->driver_priv = NULL;
@@ -648,6 +646,8 @@ int radeon_driver_open_kms(struct drm_device *dev, struct drm_file *file_priv)
 
 	/* new gpu have virtual address space support */
 	if (rdev->family >= CHIP_CAYMAN) {
+		struct radeon_fpriv *fpriv;
+		struct radeon_vm *vm;
 
 		fpriv = kzalloc(sizeof(*fpriv), GFP_KERNEL);
 		if (unlikely(!fpriv)) {
@@ -658,39 +658,35 @@ int radeon_driver_open_kms(struct drm_device *dev, struct drm_file *file_priv)
 		if (rdev->accel_working) {
 			vm = &fpriv->vm;
 			r = radeon_vm_init(rdev, vm);
-			if (r)
-				goto out_fpriv;
+			if (r) {
+				kfree(fpriv);
+				goto out_suspend;
+			}
 
 			r = radeon_bo_reserve(rdev->ring_tmp_bo.bo, false);
-			if (r)
-				goto out_vm_fini;
+			if (r) {
+				radeon_vm_fini(rdev, vm);
+				kfree(fpriv);
+				goto out_suspend;
+			}
 
 			/* map the ib pool buffer read only into
 			 * virtual address space */
 			vm->ib_bo_va = radeon_vm_bo_add(rdev, vm,
 							rdev->ring_tmp_bo.bo);
-			if (!vm->ib_bo_va) {
-				r = -ENOMEM;
-				goto out_vm_fini;
-			}
-
 			r = radeon_vm_bo_set_addr(rdev, vm->ib_bo_va,
 						  RADEON_VA_IB_OFFSET,
 						  RADEON_VM_PAGE_READABLE |
 						  RADEON_VM_PAGE_SNOOPED);
-			if (r)
-				goto out_vm_fini;
+			if (r) {
+				radeon_vm_fini(rdev, vm);
+				kfree(fpriv);
+				goto out_suspend;
+			}
 		}
 		file_priv->driver_priv = fpriv;
 	}
 
-	if (!r)
-		goto out_suspend;
-
-out_vm_fini:
-	radeon_vm_fini(rdev, vm);
-out_fpriv:
-	kfree(fpriv);
 out_suspend:
 	pm_runtime_mark_last_busy(dev->dev);
 	pm_runtime_put_autosuspend(dev->dev);
-- 
2.27.0

