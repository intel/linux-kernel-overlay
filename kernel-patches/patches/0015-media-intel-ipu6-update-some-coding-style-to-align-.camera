From b93f28e7e0e61116ba5f6210e76a4312c1ca048c Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Wed, 7 Aug 2024 17:10:06 +0800
Subject: [PATCH 15/27] media: intel-ipu6: update some coding style to align
 with Chromeos

Change Description:
media: intel-ipu6: update some coding style to align with Chromeos

Signed-off-by: Bingbu Cao <bingbu.cao@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 .../media/pci/intel/ipu-isys-csi2-be-soc.c    |  7 ++--
 drivers/media/pci/intel/ipu-isys-csi2-be.c    |  7 ++--
 drivers/media/pci/intel/ipu-isys-csi2.c       | 30 ++++++-------
 drivers/media/pci/intel/ipu-isys-queue.c      | 17 ++++----
 drivers/media/pci/intel/ipu-isys-subdev.c     |  8 ++--
 drivers/media/pci/intel/ipu-isys-video.c      | 42 +++++++++----------
 drivers/media/pci/intel/ipu.c                 |  1 +
 drivers/media/pci/intel/ipu6/ipu-platform.h   |  4 +-
 drivers/media/pci/intel/ipu6/ipu6-isys-csi2.c | 17 ++++----
 drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c  |  1 -
 drivers/media/pci/intel/ipu6/ipu6-isys.c      |  1 -
 drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c  |  1 -
 12 files changed, 66 insertions(+), 70 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c b/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
index 1bb01eb2c119..a6d18dd9d8c8 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
+++ b/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
@@ -112,9 +112,10 @@ __subdev_link_validate(struct v4l2_subdev *sd, struct media_link *link,
 		       struct v4l2_subdev_format *source_fmt,
 		       struct v4l2_subdev_format *sink_fmt)
 {
-	struct ipu_isys_pipeline *ip =
-		container_of(media_entity_pipeline(&sd->entity),
-			     struct ipu_isys_pipeline, pipe);
+	struct media_pipeline *mp = media_entity_pipeline(&sd->entity);
+	struct ipu_isys_pipeline *ip = container_of(mp,
+						    struct ipu_isys_pipeline,
+						    pipe);
 
 	ip->csi2_be_soc = to_ipu_isys_csi2_be_soc(sd);
 	return ipu_isys_subdev_link_validate(sd, link, source_fmt, sink_fmt);
diff --git a/drivers/media/pci/intel/ipu-isys-csi2-be.c b/drivers/media/pci/intel/ipu-isys-csi2-be.c
index cf9b7ba02789..d18598493ba3 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2-be.c
+++ b/drivers/media/pci/intel/ipu-isys-csi2-be.c
@@ -73,9 +73,10 @@ static int __subdev_link_validate(struct v4l2_subdev *sd,
 				  struct v4l2_subdev_format *source_fmt,
 				  struct v4l2_subdev_format *sink_fmt)
 {
-	struct ipu_isys_pipeline *ip =
-		container_of(media_entity_pipeline(&sd->entity),
-			     struct ipu_isys_pipeline, pipe);
+	struct media_pipeline *mp = media_entity_pipeline(&sd->entity);
+	struct ipu_isys_pipeline *ip = container_of(mp,
+						    struct ipu_isys_pipeline,
+						    pipe);
 
 	ip->csi2_be = to_ipu_isys_csi2_be(sd);
 	return ipu_isys_subdev_link_validate(sd, link, source_fmt, sink_fmt);
diff --git a/drivers/media/pci/intel/ipu-isys-csi2.c b/drivers/media/pci/intel/ipu-isys-csi2.c
index f07989d052bc..f66a0f0ebd05 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2.c
+++ b/drivers/media/pci/intel/ipu-isys-csi2.c
@@ -83,9 +83,10 @@ static struct v4l2_subdev_internal_ops csi2_sd_internal_ops = {
 
 int ipu_isys_csi2_get_link_freq(struct ipu_isys_csi2 *csi2, s64 *link_freq)
 {
-	struct ipu_isys_pipeline *pipe =
-		container_of(media_entity_pipeline(&csi2->asd.sd.entity),
-			     struct ipu_isys_pipeline, pipe);
+	struct media_pipeline *mp = media_entity_pipeline(&csi2->asd.sd.entity);
+	struct ipu_isys_pipeline *pipe = container_of(mp,
+						      struct ipu_isys_pipeline,
+						      pipe);
 	struct v4l2_subdev *ext_sd =
 		media_entity_to_v4l2_subdev(pipe->external->entity);
 	struct device *dev = &csi2->isys->adev->dev;
@@ -211,8 +212,10 @@ ipu_isys_csi2_calc_timing(struct ipu_isys_csi2 *csi2,
 static int set_stream(struct v4l2_subdev *sd, int enable)
 {
 	struct ipu_isys_csi2 *csi2 = to_ipu_isys_csi2(sd);
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&sd->entity));
+	struct media_pipeline *mp = media_entity_pipeline(&sd->entity);
+	struct ipu_isys_pipeline *ip = container_of(mp,
+						    struct ipu_isys_pipeline,
+						    pipe);
 	struct ipu_isys_csi2_config *cfg;
 	struct v4l2_subdev *ext_sd;
 	struct ipu_isys_csi2_timing timing = {0};
@@ -278,21 +281,18 @@ static void csi2_capture_done(struct ipu_isys_pipeline *ip,
 
 static int csi2_link_validate(struct media_link *link)
 {
-	struct media_pipeline *media_pipe;
 	struct ipu_isys_csi2 *csi2;
 	struct ipu_isys_pipeline *ip;
+	struct media_pipeline *mp;
 	struct v4l2_subdev *source_sd;
 	struct v4l2_subdev *sink_sd;
 
-	if (!link->sink->entity || !link->source->entity)
-		return -EINVAL;
-	media_pipe = media_entity_pipeline(link->sink->entity);
-	if (!media_pipe)
+	mp = media_entity_pipeline(link->sink->entity);
+	if (!link->sink->entity || !link->source->entity || !mp)
 		return -EINVAL;
 	csi2 =
 	    to_ipu_isys_csi2(media_entity_to_v4l2_subdev(link->sink->entity));
-
-	ip = to_ipu_isys_pipeline(media_pipe);
+	ip = to_ipu_isys_pipeline(mp);
 	csi2->receiver_errors = 0;
 	ip->csi2 = csi2;
 	ipu_isys_video_add_capture_done(ip, csi2_capture_done);
@@ -335,8 +335,10 @@ static int __subdev_link_validate(struct v4l2_subdev *sd,
 				  struct v4l2_subdev_format *source_fmt,
 				  struct v4l2_subdev_format *sink_fmt)
 {
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&sd->entity));
+	struct media_pipeline *mp = media_entity_pipeline(&sd->entity);
+	struct ipu_isys_pipeline *ip = container_of(mp,
+						    struct ipu_isys_pipeline,
+						    pipe);
 
 	if (source_fmt->format.field == V4L2_FIELD_ALTERNATE)
 		ip->interlaced = true;
diff --git a/drivers/media/pci/intel/ipu-isys-queue.c b/drivers/media/pci/intel/ipu-isys-queue.c
index 07e885819baa..20fb3061d795 100644
--- a/drivers/media/pci/intel/ipu-isys-queue.c
+++ b/drivers/media/pci/intel/ipu-isys-queue.c
@@ -486,9 +486,8 @@ static void buf_queue(struct vb2_buffer *vb)
 	struct ipu_isys_queue *aq = vb2_queue_to_ipu_isys_queue(vb->vb2_queue);
 	struct ipu_isys_video *av = ipu_isys_queue_to_video(aq);
 	struct ipu_isys_buffer *ib = vb2_buffer_to_ipu_isys_buffer(vb);
-	struct media_pipeline *media_pipe =
-		media_entity_pipeline(&av->vdev.entity);
-	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(media_pipe);
+	struct media_pipeline *mp = media_entity_pipeline(&av->vdev.entity);
+	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(mp);
 	struct ipu_isys_buffer_list bl;
 
 	struct ipu_fw_isys_frame_buff_set_abi *buf = NULL;
@@ -532,8 +531,7 @@ static void buf_queue(struct vb2_buffer *vb)
 	if (ib->req)
 		return;
 
-	if (!pipe_av || !media_pipe ||
-	    !vb->vb2_queue->start_streaming_called) {
+	if (!pipe_av || !mp || !vb->vb2_queue->start_streaming_called) {
 		dev_dbg(&av->isys->adev->dev,
 			"no pipe or streaming, adding to incoming\n");
 		return;
@@ -1075,8 +1073,8 @@ static void stop_streaming(struct vb2_queue *q)
 {
 	struct ipu_isys_queue *aq = vb2_queue_to_ipu_isys_queue(q);
 	struct ipu_isys_video *av = ipu_isys_queue_to_video(aq);
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&av->vdev.entity));
+	struct media_pipeline *mp = media_entity_pipeline(&av->vdev.entity);
+	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(mp);
 	struct ipu_isys_video *pipe_av =
 		container_of(ip, struct ipu_isys_video, ip);
 	dev_dbg(&av->isys->adev->dev, "stop: %s: enter\n",
@@ -1225,8 +1223,8 @@ ipu_isys_buf_calc_sequence_time(struct ipu_isys_buffer *ib,
 	struct ipu_isys_queue *aq = vb2_queue_to_ipu_isys_queue(vb->vb2_queue);
 	struct ipu_isys_video *av = ipu_isys_queue_to_video(aq);
 	struct device *dev = &av->isys->adev->dev;
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&av->vdev.entity));
+	struct media_pipeline *mp = media_entity_pipeline(&av->vdev.entity);
+	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(mp);
 	u64 ns;
 	u32 sequence;
 
@@ -1337,6 +1335,7 @@ void ipu_isys_queue_buf_ready(struct ipu_isys_pipeline *ip,
 		spin_unlock_irqrestore(&aq->lock, flags);
 
 		ipu_isys_buf_calc_sequence_time(ib, info);
+
 		struct vb2_buffer *vb = ipu_isys_buffer_to_vb2_buffer(ib);
 		struct vb2_v4l2_buffer *vbuf = to_vb2_v4l2_buffer(vb);
 
diff --git a/drivers/media/pci/intel/ipu-isys-subdev.c b/drivers/media/pci/intel/ipu-isys-subdev.c
index d048e96ad4c8..2f7ef867a61d 100644
--- a/drivers/media/pci/intel/ipu-isys-subdev.c
+++ b/drivers/media/pci/intel/ipu-isys-subdev.c
@@ -520,8 +520,10 @@ int ipu_isys_subdev_link_validate(struct v4l2_subdev *sd,
 {
 	struct v4l2_subdev *source_sd =
 	    media_entity_to_v4l2_subdev(link->source->entity);
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&sd->entity));
+	struct media_pipeline *mp = media_entity_pipeline(&sd->entity);
+	struct ipu_isys_pipeline *ip = container_of(mp,
+						    struct ipu_isys_pipeline,
+						    pipe);
 	struct ipu_isys_subdev *asd = to_ipu_isys_subdev(sd);
 
 	if (!source_sd)
@@ -597,7 +599,7 @@ int ipu_isys_subdev_init(struct ipu_isys_subdev *asd,
 			 int src_pad_idx,
 			 int sink_pad_idx)
 {
-	int i;
+	unsigned int i;
 	int rval = -EINVAL;
 
 	mutex_init(&asd->mutex);
diff --git a/drivers/media/pci/intel/ipu-isys-video.c b/drivers/media/pci/intel/ipu-isys-video.c
index fa99c79be4b6..9b964b924a76 100644
--- a/drivers/media/pci/intel/ipu-isys-video.c
+++ b/drivers/media/pci/intel/ipu-isys-video.c
@@ -634,12 +634,10 @@ static int link_validate(struct media_link *link)
 {
 	struct ipu_isys_video *av =
 		container_of(link->sink, struct ipu_isys_video, pad);
-	/* All sub-devices connected to a video node are ours. */
 	struct ipu_isys_pipeline *ip =
 		to_ipu_isys_pipeline(media_entity_pipeline(&av->vdev.entity));
 	struct v4l2_subdev *sd;
 
-	WARN_ON(!ip);
 	if (!link->source->entity)
 		return -EINVAL;
 
@@ -676,8 +674,8 @@ static void put_stream_opened(struct ipu_isys_video *av)
 
 static int get_stream_handle(struct ipu_isys_video *av)
 {
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&av->vdev.entity));
+	struct media_pipeline *mp = media_entity_pipeline(&av->vdev.entity);
+	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(mp);
 	unsigned int stream_handle;
 	unsigned long flags;
 
@@ -698,8 +696,8 @@ static int get_stream_handle(struct ipu_isys_video *av)
 
 static void put_stream_handle(struct ipu_isys_video *av)
 {
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&av->vdev.entity));
+	struct media_pipeline *mp = media_entity_pipeline(&av->vdev.entity);
+	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(mp);
 	unsigned long flags;
 
 	spin_lock_irqsave(&av->isys->lock, flags);
@@ -1218,8 +1216,8 @@ void
 ipu_isys_prepare_fw_cfg_default(struct ipu_isys_video *av,
 				struct ipu_fw_isys_stream_cfg_data_abi *cfg)
 {
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&av->vdev.entity));
+	struct media_pipeline *mp = media_entity_pipeline(&av->vdev.entity);
+	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(mp);
 	struct ipu_isys_queue *aq = &av->aq;
 	struct ipu_fw_isys_output_pin_info_abi *pin_info;
 	struct ipu_isys *isys = av->isys;
@@ -1432,8 +1430,8 @@ static unsigned int get_comp_format(u32 code)
 static int start_stream_firmware(struct ipu_isys_video *av,
 				 struct ipu_isys_buffer_list *bl)
 {
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&av->vdev.entity));
+	struct media_pipeline *mp = media_entity_pipeline(&av->vdev.entity);
+	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(mp);
 	struct device *dev = &av->isys->adev->dev;
 	struct v4l2_subdev_selection sel_fmt = {
 		.which = V4L2_SUBDEV_FORMAT_ACTIVE,
@@ -1588,8 +1586,6 @@ static int start_stream_firmware(struct ipu_isys_video *av,
 	reinit_completion(&ip->stream_start_completion);
 
 	if (bl && source_pad && (is_support_vc(source_pad, ip))) {
-		dev_dbg(dev, "start stream: start and capture\n");
-
 		send_type = IPU_FW_ISYS_SEND_TYPE_STREAM_START_AND_CAPTURE;
 		ipu_fw_isys_dump_frame_buff_set(dev, buf,
 						stream_cfg->nof_output_pins);
@@ -1599,8 +1595,6 @@ static int start_stream_firmware(struct ipu_isys_video *av,
 					       sizeof(*buf),
 					       send_type);
 	} else {
-		dev_dbg(dev, "start stream: start\n");
-
 		send_type = IPU_FW_ISYS_SEND_TYPE_STREAM_START;
 		rval = ipu_fw_isys_simple_cmd(av->isys,
 					      ip->stream_handle,
@@ -1640,6 +1634,7 @@ static int start_stream_firmware(struct ipu_isys_video *av,
 		}
 	}
 	dev_dbg(dev, "start stream: complete\n");
+
 	return 0;
 
 out_stream_close:
@@ -1672,8 +1667,8 @@ static int start_stream_firmware(struct ipu_isys_video *av,
 
 static void stop_streaming_firmware(struct ipu_isys_video *av)
 {
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&av->vdev.entity));
+	struct media_pipeline *mp = media_entity_pipeline(&av->vdev.entity);
+	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(mp);
 	struct device *dev = &av->isys->adev->dev;
 	int rval, tout;
 	enum ipu_fw_isys_send_type send_type =
@@ -1701,8 +1696,8 @@ static void stop_streaming_firmware(struct ipu_isys_video *av)
 
 static void close_streaming_firmware(struct ipu_isys_video *av)
 {
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&av->vdev.entity));
+	struct media_pipeline *mp = media_entity_pipeline(&av->vdev.entity);
+	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(mp);
 	struct device *dev = &av->isys->adev->dev;
 	int rval, tout;
 
@@ -1726,6 +1721,7 @@ static void close_streaming_firmware(struct ipu_isys_video *av)
 	ip->last_sequence = atomic_read(&ip->sequence);
 	dev_dbg(dev, "IPU_ISYS_RESET: ip->last_sequence = %d\n",
 		ip->last_sequence);
+
 	put_stream_opened(av);
 	put_stream_handle(av);
 }
@@ -1764,16 +1760,16 @@ int ipu_isys_video_prepare_streaming(struct ipu_isys_video *av,
 	struct ipu_isys_pipeline *ip;
 	struct media_graph graph;
 	struct media_entity *entity;
-	struct media_pipeline *media_pipe;
 	struct media_device *mdev = &av->isys->media_dev;
+	struct media_pipeline *mp;
 	int rval;
 	unsigned int i;
 
 	dev_dbg(dev, "prepare stream: %d\n", state);
 
 	if (!state) {
-		media_pipe = media_entity_pipeline(&av->vdev.entity);
-		ip = to_ipu_isys_pipeline(media_pipe);
+		mp = media_entity_pipeline(&av->vdev.entity);
+		ip = to_ipu_isys_pipeline(mp);
 
 		if (ip->interlaced && isys->short_packet_source ==
 		    IPU_ISYS_SHORT_PACKET_FROM_RECEIVER)
@@ -1872,8 +1868,8 @@ int ipu_isys_video_set_streaming(struct ipu_isys_video *av,
 	struct media_entity_enum entities;
 
 	struct media_entity *entity, *entity2;
-	struct ipu_isys_pipeline *ip =
-		to_ipu_isys_pipeline(media_entity_pipeline(&av->vdev.entity));
+	struct media_pipeline *mp = media_entity_pipeline(&av->vdev.entity);
+	struct ipu_isys_pipeline *ip = to_ipu_isys_pipeline(mp);
 	struct v4l2_subdev *sd, *esd;
 	int rval = 0;
 	struct v4l2_ext_control c = {.id = V4L2_CID_IPU_SET_SUB_STREAM, };
diff --git a/drivers/media/pci/intel/ipu.c b/drivers/media/pci/intel/ipu.c
index 6cafdbf1b66f..08d236cccd9b 100644
--- a/drivers/media/pci/intel/ipu.c
+++ b/drivers/media/pci/intel/ipu.c
@@ -665,6 +665,7 @@ static int ipu_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 		rval = request_cpd_fw(&isp->cpd_fw, isp->cpd_fw_name_new,
 				      &pdev->dev);
 	}
+
 	if (rval) {
 		dev_err(&isp->pdev->dev, "Requesting signed firmware failed\n");
 		goto buttress_exit;
diff --git a/drivers/media/pci/intel/ipu6/ipu-platform.h b/drivers/media/pci/intel/ipu6/ipu-platform.h
index 94bbf47f02ca..aec3797de043 100644
--- a/drivers/media/pci/intel/ipu6/ipu-platform.h
+++ b/drivers/media/pci/intel/ipu6/ipu-platform.h
@@ -11,16 +11,16 @@
 #define IPU6EPES_FIRMWARE_NAME		"intel/ipu6epes_fw.bin"
 #define IPU6_FIRMWARE_NAME		"intel/ipu6_fw.bin"
 #define IPU6EPMTL_FIRMWARE_NAME		"intel/ipu6epmtl_fw.bin"
-#define IPU6EPMTLES_FIRMWARE_NAME	"intel/ipu6epmtles_fw.bin"
 #define IPU6EPADLN_FIRMWARE_NAME	"intel/ipu6epadln_fw.bin"
+#define IPU6EPMTLES_FIRMWARE_NAME	"intel/ipu6epmtles_fw.bin"
 
 #define IPU6SE_FIRMWARE_NAME_NEW	"intel/ipu/ipu6se_fw.bin"
 #define IPU6EP_FIRMWARE_NAME_NEW	"intel/ipu/ipu6ep_fw.bin"
 #define IPU6EPES_FIRMWARE_NAME_NEW	"intel/ipu/ipu6epes_fw.bin"
 #define IPU6_FIRMWARE_NAME_NEW		"intel/ipu/ipu6_fw.bin"
 #define IPU6EPMTL_FIRMWARE_NAME_NEW	"intel/ipu/ipu6epmtl_fw.bin"
-#define IPU6EPMTLES_FIRMWARE_NAME_NEW	"intel/ipu/ipu6epmtles_fw.bin"
 #define IPU6EPADLN_FIRMWARE_NAME_NEW	"intel/ipu/ipu6epadln_fw.bin"
+#define IPU6EPMTLES_FIRMWARE_NAME_NEW	"intel/ipu/ipu6epmtles_fw.bin"
 
 #if IS_ENABLED(CONFIG_VIDEO_INTEL_IPU_USE_PLATFORMDATA) \
 	&& IS_ENABLED(CONFIG_VIDEO_INTEL_IPU_PDATA_DYNAMIC_LOADING)
diff --git a/drivers/media/pci/intel/ipu6/ipu6-isys-csi2.c b/drivers/media/pci/intel/ipu6/ipu6-isys-csi2.c
index e054ed4c89d2..b45f6c2027be 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-isys-csi2.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-isys-csi2.c
@@ -455,21 +455,18 @@ int ipu_isys_csi2_set_stream(struct v4l2_subdev *sd,
 {
 	struct ipu_isys_csi2 *csi2 = to_ipu_isys_csi2(sd);
 	struct ipu_isys *isys = csi2->isys;
-	struct ipu_isys_pipeline *ip =
-		container_of(media_entity_pipeline(&sd->entity),
-			     struct ipu_isys_pipeline, pipe);
-	struct v4l2_subdev *esd =
-		media_entity_to_v4l2_subdev(ip->external->entity);
-	struct ipu_isys_csi2_config *cfg;
+	struct media_pipeline *mp = media_entity_pipeline(&sd->entity);
+	struct ipu_isys_pipeline *ip = container_of(mp,
+						    struct ipu_isys_pipeline,
+						    pipe);
+	struct ipu_isys_csi2_config *cfg =
+		v4l2_get_subdev_hostdata(media_entity_to_v4l2_subdev
+					 (ip->external->entity));
 	unsigned int port, port_max;
 	int ret = 0;
 	u32 mask = 0;
 	unsigned int i;
 
-	if (!esd)
-		return -EPIPE;
-
-	cfg = v4l2_get_subdev_hostdata(esd);
 	port = cfg->port;
 	dev_dbg(&isys->adev->dev, "for port %u with %u lanes\n", port, nlanes);
 
diff --git a/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c b/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c
index 4f6108bf9608..b21da348eb8a 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c
@@ -78,7 +78,6 @@ static int ipu6_isys_gpc_global_enable_set(void *data, u64 val)
 			isys_gpcs->gpc[i].route = 0;
 			isys_gpcs->gpc[i].source = 0;
 		}
-
 		pm_runtime_put(&isys->adev->dev);
 	} else {
 		/*
diff --git a/drivers/media/pci/intel/ipu6/ipu6-isys.c b/drivers/media/pci/intel/ipu6/ipu6-isys.c
index 81c29fcbfc6d..93d4c35b5b31 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-isys.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-isys.c
@@ -187,4 +187,3 @@ irqreturn_t isys_isr(struct ipu_bus_device *adev)
 
 	return IRQ_HANDLED;
 }
-
diff --git a/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c b/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c
index 90e1a641aa21..ff1925693558 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c
@@ -81,7 +81,6 @@ static int ipu6_psys_gpc_global_enable_set(void *data, u64 val)
 			psys_gpcs->gpc[idx].route = 0;
 			psys_gpcs->gpc[idx].source = 0;
 		}
-
 		pm_runtime_put(&psys->adev->dev);
 	} else {
 		/* Set gpc reg and start all gpc here.
-- 
2.34.1

