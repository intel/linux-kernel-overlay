From 266d17f0d3b90ad5c335db5b9a22b25b6c4113c8 Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Wed, 22 Nov 2023 16:26:27 +0800
Subject: [PATCH 24/37] media: i2c: lt6911uxe and lt6911uxc: clear v4l2 subdev
 open close

Change Description:
remove set_stream from open close functions.
it may break streaming when open close v4l2 subdev file.
use dev_info for hotplug event, it needs to restart app
when stream broken, both HDMI AV_MUTE and real hotplug.

Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/i2c/lt6911uxc.c | 18 ++----------------
 drivers/media/i2c/lt6911uxe.c | 18 ++----------------
 2 files changed, 4 insertions(+), 32 deletions(-)

diff --git a/drivers/media/i2c/lt6911uxc.c b/drivers/media/i2c/lt6911uxc.c
index 3db2b17c7efee..63335fe979177 100644
--- a/drivers/media/i2c/lt6911uxc.c
+++ b/drivers/media/i2c/lt6911uxc.c
@@ -1058,28 +1058,14 @@ static int lt6911uxc_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
 {
 	struct lt6911uxc_state *lt6911uxc = to_state(sd);
 
-	if (!lt6911uxc->auxiliary_port)
-		lt6911uxc_set_stream(sd, true);
 	lt6911uxc_update_pad_format(lt6911uxc->cur_mode,
 			v4l2_subdev_get_try_format(sd, fh->state, 0));
 
 	return 0;
 }
 
-static int lt6911uxc_close(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
-{
-
-	struct lt6911uxc_state *lt6911uxc = to_state(sd);
-
-	if (!lt6911uxc->auxiliary_port)
-		lt6911uxc_set_stream(sd, false);
-
-	return 0;
-}
-
 static const struct v4l2_subdev_internal_ops lt6911uxc_subdev_internal_ops = {
 	.open = lt6911uxc_open,
-	.close = lt6911uxc_close,
 };
 
 static const struct v4l2_subdev_video_ops lt6911uxc_video_ops = {
@@ -1159,7 +1145,7 @@ static int lt6911uxc_video_status_update(struct lt6911uxc_state *lt6911uxc)
 			REG_INT_HDMI);
 	switch (int_event) {
 	case INT_HDMI_STABLE:
-		dev_dbg(&client->dev, "Video signal stable\n");
+		dev_info(&client->dev, "Video signal stable\n");
 
 		/* byte clock / MIPI clock */
 		lt6911uxc_i2c_wr8(&lt6911uxc->sd,
@@ -1246,7 +1232,7 @@ static int lt6911uxc_video_status_update(struct lt6911uxc_state *lt6911uxc)
 		v4l2_subdev_notify_event(&lt6911uxc->sd,
 			&lt6911uxc_ev_stream_end);
 
-		dev_dbg(&client->dev, "Video signal disconnected\n");
+		dev_info(&client->dev, "Video signal disconnected\n");
 	break;
 	default:
 		dev_dbg(&client->dev, "Unhandled video= 0x%02X\n", int_event);
diff --git a/drivers/media/i2c/lt6911uxe.c b/drivers/media/i2c/lt6911uxe.c
index bf24e2af6db1d..4cd8f6e86de67 100644
--- a/drivers/media/i2c/lt6911uxe.c
+++ b/drivers/media/i2c/lt6911uxe.c
@@ -1071,28 +1071,14 @@ static int lt6911uxe_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
 {
 	struct lt6911uxe_state *lt6911uxe = to_state(sd);
 
-	if (!lt6911uxe->auxiliary_port)
-		lt6911uxe_set_stream(sd, true);
 	lt6911uxe_update_pad_format(lt6911uxe->cur_mode,
 			v4l2_subdev_get_try_format(sd, fh->state, 0));
 
 	return 0;
 }
 
-static int lt6911uxe_close(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
-{
-
-	struct lt6911uxe_state *lt6911uxe = to_state(sd);
-
-	if (!lt6911uxe->auxiliary_port)
-		lt6911uxe_set_stream(sd, false);
-
-	return 0;
-}
-
 static const struct v4l2_subdev_internal_ops lt6911uxe_subdev_internal_ops = {
 	.open = lt6911uxe_open,
-	.close = lt6911uxe_close,
 };
 
 static const struct v4l2_subdev_video_ops lt6911uxe_video_ops = {
@@ -1172,7 +1158,7 @@ static int lt6911uxe_video_status_update(struct lt6911uxe_state *lt6911uxe)
 			REG_INT_HDMI);
 	switch (int_event) {
 	case INT_HDMI_STABLE:
-		dev_dbg(&client->dev, "Video signal stable\n");
+		dev_info(&client->dev, "Video signal stable\n");
 
 		/* byte clock / MIPI clock */
 		fm2 = lt6911uxe_i2c_rd8(&lt6911uxe->sd,
@@ -1274,7 +1260,7 @@ static int lt6911uxe_video_status_update(struct lt6911uxe_state *lt6911uxe)
 		v4l2_subdev_notify_event(&lt6911uxe->sd,
 			&lt6911uxe_ev_stream_end);
 
-		dev_dbg(&client->dev, "Video signal disconnected\n");
+		dev_info(&client->dev, "Video signal disconnected\n");
 	break;
 	default:
 		dev_dbg(&client->dev, "Unhandled video= 0x%02X\n", int_event);
-- 
2.25.1

