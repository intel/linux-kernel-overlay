From b61c8eb65402db6d00ad3c47c04f52cf2a271297 Mon Sep 17 00:00:00 2001
From: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date: Tue, 13 Apr 2021 15:45:19 +0300
Subject: [PATCH 60/69] counter: intel-qep: Use sysfs_emit for user space
 returned values

This was a review comment and also Documentation/filesystems/sysfs.rst
states it.

While at it, convert "%d" to "%u" since all integers here are unsigned.

Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
---
 drivers/counter/intel-qep.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/counter/intel-qep.c b/drivers/counter/intel-qep.c
index b9aa5cff64bf..4a17f12f2f21 100644
--- a/drivers/counter/intel-qep.c
+++ b/drivers/counter/intel-qep.c
@@ -299,7 +299,7 @@ static ssize_t ceiling_read(struct counter_device *counter,
 	reg = intel_qep_readl(qep, INTEL_QEPMAX);
 	pm_runtime_put(qep->dev);
 
-	return snprintf(buf, PAGE_SIZE, "%u\n", reg);
+	return sysfs_emit(buf, "%u\n", reg);
 }
 
 static ssize_t ceiling_write(struct counter_device *counter,
@@ -336,7 +336,7 @@ static ssize_t enable_read(struct counter_device *counter,
 {
 	struct intel_qep *qep = counter->priv;
 
-	return snprintf(buf, PAGE_SIZE, "%d\n", qep->enabled);
+	return sysfs_emit(buf, "%u\n", qep->enabled);
 }
 
 static ssize_t enable_write(struct counter_device *counter,
@@ -399,12 +399,12 @@ static ssize_t noise_read(struct counter_device *counter,
 	reg = intel_qep_readl(qep, INTEL_QEPCON);
 	if (!(reg & INTEL_QEPCON_FLT_EN)) {
 		pm_runtime_put(qep->dev);
-		return snprintf(buf, PAGE_SIZE, "0\n");
+		return sysfs_emit(buf, "0\n");
 	}
 	reg = intel_qep_readl(qep, INTEL_QEPFLT);
 	pm_runtime_put(qep->dev);
 
-	return snprintf(buf, PAGE_SIZE, "%d\n", INTEL_QEPFLT_MAX_COUNT(reg));
+	return sysfs_emit(buf, "%u\n", INTEL_QEPFLT_MAX_COUNT(reg));
 }
 
 static ssize_t noise_write(struct counter_device *counter,
@@ -453,8 +453,7 @@ static ssize_t preset_enable_read(struct counter_device *counter,
 	pm_runtime_get_sync(qep->dev);
 	reg = intel_qep_readl(qep, INTEL_QEPCON);
 	pm_runtime_put(qep->dev);
-	return snprintf(buf, PAGE_SIZE, "%d\n",
-			!(reg & INTEL_QEPCON_COUNT_RST_MODE));
+	return sysfs_emit(buf, "%u\n", !(reg & INTEL_QEPCON_COUNT_RST_MODE));
 }
 
 static ssize_t preset_enable_write(struct counter_device *counter,
-- 
2.27.0

