From 3765fd1b114aa7bd10e17994dd518671879b695a Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Tue, 16 Mar 2021 16:01:43 -0700
Subject: [PATCH 37/41] x86/cpu: Add a generic helper function to get the full
 hybrid CPU parameters

On a hybrid processor, each CPU has a u32 parameter that is composed by
both the CPU type (in bits [31:24]) and the native model ID (in bits
[23:0]). On some processors, there may be CPUs of the same type but with
different native mode IDs. Thus, to fully identify a CPU, it is necessary
to query both parameters.

In preparation for a subsequent changeset that returns both combined
parameters. Introduce a new helper function __do_get_hybrid_params() that
reads the mentioned parameters from CPUID. Implement the function in such
a manner that can be called directly and on a different CPU via an IPI.

Rework get_this_hybrid_cpu_type() to make use of this new function.

Cc: Andi Kleen <ak@linux.intel.com>
Cc: Andy Lutomirski <luto@kernel.org>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: Kan Liang <kan.liang@linux.intel.com>
Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
Cc: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Cc: linux-kernel@vger.kernel.org
Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 arch/x86/kernel/cpu/intel.c | 16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

diff --git a/arch/x86/kernel/cpu/intel.c b/arch/x86/kernel/cpu/intel.c
index a6c2165831e0..8f961a253be5 100644
--- a/arch/x86/kernel/cpu/intel.c
+++ b/arch/x86/kernel/cpu/intel.c
@@ -1309,6 +1309,16 @@ void __init sld_setup(struct cpuinfo_x86 *c)
 	sld_state_show();
 }
 
+static void __do_get_hybrid_params(void *data)
+{
+	u32 *params = data;
+
+	if (!cpu_feature_enabled(X86_FEATURE_HYBRID_CPU))
+		*params = 0;
+
+	*params = cpuid_eax(0x0000001a);
+}
+
 #define X86_HYBRID_CPU_TYPE_ID_SHIFT	24
 
 /**
@@ -1319,10 +1329,10 @@ void __init sld_setup(struct cpuinfo_x86 *c)
  */
 u8 get_this_hybrid_cpu_type(void)
 {
-	if (!cpu_feature_enabled(X86_FEATURE_HYBRID_CPU))
-		return 0;
+	u32 params;
 
-	return cpuid_eax(0x0000001a) >> X86_HYBRID_CPU_TYPE_ID_SHIFT;
+	__do_get_hybrid_params(&params);
+	return params >> X86_HYBRID_CPU_TYPE_ID_SHIFT;
 }
 
 static void __do_get_get_hybrid_cpu_type(void *data)
-- 
2.32.0

