From 62de25f29b2d3fe944018f7a78cd91d6d782e5de Mon Sep 17 00:00:00 2001
From: Mathias Nyman <mathias.nyman@linux.intel.com>
Date: Tue, 4 Jul 2023 12:56:48 +0300
Subject: [PATCH 23/23] xhci: Don't workaround intel interrupt endpoint errata
 if bios already handles it

No need to set the HSII bit if firmware has already set it.
Otherwise xhci driver should set HSII bit when there are active FS/LS
interrupt endpoints behind HS hubs.

Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
---
 drivers/usb/host/xhci.c | 13 +++++++++++--
 drivers/usb/host/xhci.h |  2 +-
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/drivers/usb/host/xhci.c b/drivers/usb/host/xhci.c
index cd83a4627b0c..b44089cd7cbc 100644
--- a/drivers/usb/host/xhci.c
+++ b/drivers/usb/host/xhci.c
@@ -1964,7 +1964,8 @@ static void xhci_track_intr_eps_quirk(struct xhci_hcd *xhci, struct xhci_virt_ep
 	if (!(xhci->quirks & XHCI_INTEL_HOST) || !(xhci->hci_version >= 0x110))
 		return;
 
-	if (!ep->ring || ep->ring->type != TYPE_INTR || !change)
+	if (!ep->ring || ep->ring->type != TYPE_INTR || !change ||
+	    xhci->num_active_tt_intr_eps == -1)
 		return;
 
 	udev = ep->vdev->udev;
@@ -1973,9 +1974,17 @@ static void xhci_track_intr_eps_quirk(struct xhci_hcd *xhci, struct xhci_virt_ep
 	/* Full or Low speed device endpoint behind HS hub */
 	if (udev && udev->tt && udev->tt->hub->parent) {
 		spin_lock_irqsave(&xhci->lock, flags);
-		xhci->num_active_tt_intr_eps += change;
 		val = readl(reg);
 
+		/* if HSII bit is already set to 1 by bios, don't touch it */
+		if (!xhci->num_active_tt_intr_eps && (val & BIT(8))) {
+			xhci->num_active_tt_intr_eps = -1;
+			xhci_dbg(xhci, "HSII set by bios, @0x8144:0x%x\n", val);
+			spin_unlock_irqrestore(&xhci->lock, flags);
+			return;
+		}
+
+		xhci->num_active_tt_intr_eps += change;
 		if (xhci->num_active_tt_intr_eps == 0)
 			writel(val & ~BIT(8), reg);
 		else if (xhci->num_active_tt_intr_eps == change)
diff --git a/drivers/usb/host/xhci.h b/drivers/usb/host/xhci.h
index 7b1c7ef944db..e0e8410d8538 100644
--- a/drivers/usb/host/xhci.h
+++ b/drivers/usb/host/xhci.h
@@ -1905,7 +1905,7 @@ struct xhci_hcd {
 #define XHCI_ZHAOXIN_HOST	BIT_ULL(46)
 
 	unsigned int		num_active_eps;
-	unsigned int		num_active_tt_intr_eps;
+	int			num_active_tt_intr_eps;
 	unsigned int		limit_active_eps;
 	struct xhci_port	*hw_ports;
 	struct xhci_hub		usb2_rhub;
-- 
2.25.1

