From 1ec5959a8f6dbfbb47057317bc935924cd8d6977 Mon Sep 17 00:00:00 2001
From: "D, Lakshmi Sowjanya" <lakshmi.sowjanya.d@intel.com>
Date: Thu, 3 Mar 2022 09:39:08 +0530
Subject: [PATCH 2/2] i2c: Add read and write functions in pcidrv

Read and write functions are not implemented in the latest code, but
regmap needs the callback to read/write functions. So, implemented
read/write fucntions locally.

Signed-off-by: D, Lakshmi Sowjanya <lakshmi.sowjanya.d@intel.com>
---
 drivers/i2c/busses/i2c-designware-pcidrv.c | 34 +++++++++++++++-------
 1 file changed, 23 insertions(+), 11 deletions(-)

diff --git a/drivers/i2c/busses/i2c-designware-pcidrv.c b/drivers/i2c/busses/i2c-designware-pcidrv.c
index e61a2cf4d9db..0afae43a89f7 100644
--- a/drivers/i2c/busses/i2c-designware-pcidrv.c
+++ b/drivers/i2c/busses/i2c-designware-pcidrv.c
@@ -66,6 +66,18 @@ struct dw_pci_controller {
 	u32 (*get_clk_rate_khz)(struct dw_i2c_dev *dev);
 };
 
+static int dw_reg_read(struct dw_i2c_dev *dev, unsigned int reg, unsigned int *val)
+{
+	*val = readl_relaxed(dev->base + reg);
+	return 0;
+}
+
+static int dw_reg_write(struct dw_i2c_dev *dev, unsigned int reg, unsigned int val)
+{
+	writel_relaxed(val, dev->base + reg);
+	return 0;
+}
+
 /* Merrifield HCNT/LCNT/SDA hold time */
 static struct dw_scl_sda_cfg mrfld_config = {
 	.ss_hcnt = 0x2f8,
@@ -271,26 +283,26 @@ static int i2c_dw_pci_runtime_suspend(struct device *dev)
 	j0 = jiffies;
 	j1 = j0 + delay;
 
-	ret = regmap_read(i_dev->map, PSE_I2C_CGSR, &cgsr_reg);
+	ret = dw_reg_read(i_dev, PSE_I2C_CGSR, &cgsr_reg);
 	if (ret)
 		return ret;
-	regmap_write(i_dev->map, PSE_I2C_CGSR, PSE_I2C_CGSR_CG);
+	dw_reg_write(i_dev, PSE_I2C_CGSR, PSE_I2C_CGSR_CG);
 
-	ret = regmap_read(i_dev->map, PSE_I2C_D0I3C, &d0i3c_reg);
+	ret = dw_reg_read(i_dev, PSE_I2C_D0I3C, &d0i3c_reg);
 	if (ret)
 		return ret;
 
 	if (d0i3c_reg & PSE_I2C_D0I3_CIP) {
 		dev_info(dev, "%s d0i3c CIP detected", __func__);
 	} else {
-		regmap_write(i_dev->map, PSE_I2C_D0I3C, PSE_I2C_D0I3_EN);
-		ret = regmap_read(i_dev->map, PSE_I2C_D0I3C, &d0i3c_reg);
+		dw_reg_write(i_dev, PSE_I2C_D0I3C, PSE_I2C_D0I3_EN);
+		ret = dw_reg_read(i_dev, PSE_I2C_D0I3C, &d0i3c_reg);
 		if (ret)
 			return ret;
 	}
 
 	while (time_before(jiffies, j1)) {
-		ret = regmap_read(i_dev->map, PSE_I2C_D0I3C, &d0i3c_reg);
+		ret = dw_reg_read(i_dev, PSE_I2C_D0I3C, &d0i3c_reg);
 		if (ret)
 			return ret;
 		if (!(d0i3c_reg & PSE_I2C_D0I3_CIP))
@@ -310,14 +322,14 @@ static int i2c_dw_pci_runtime_resume(struct device *dev)
 	u32 cgsr_reg = 0;
 	int ret;
 
-	ret = regmap_read(i_dev->map, PSE_I2C_CGSR, &cgsr_reg);
+	ret = dw_reg_read(i_dev, PSE_I2C_CGSR, &cgsr_reg);
 	if (ret)
 		return ret;
 
 	if (cgsr_reg & PSE_I2C_CGSR_CG)
-		regmap_write(i_dev->map, PSE_I2C_CGSR, (cgsr_reg & ~PSE_I2C_CGSR_CG));
+		dw_reg_write(i_dev, PSE_I2C_CGSR, (cgsr_reg & ~PSE_I2C_CGSR_CG));
 
-	ret = regmap_read(i_dev->map, PSE_I2C_D0I3C, &d0i3c_reg);
+	ret = dw_reg_read(i_dev, PSE_I2C_D0I3C, &d0i3c_reg);
 	if (ret)
 		return ret;
 
@@ -330,8 +342,8 @@ static int i2c_dw_pci_runtime_resume(struct device *dev)
 		if (d0i3c_reg & PSE_I2C_D0I3_RR)
 			d0i3c_reg |= PSE_I2C_D0I3_RR;
 
-		regmap_write(i_dev->map, PSE_I2C_D0I3C, d0i3c_reg);
-		ret = regmap_read(i_dev->map, PSE_I2C_D0I3C, &d0i3c_reg);
+		dw_reg_write(i_dev, PSE_I2C_D0I3C, d0i3c_reg);
+		ret = dw_reg_read(i_dev, PSE_I2C_D0I3C, &d0i3c_reg);
 		if (ret)
 			return ret;
 	}
-- 
2.27.0

