From 6be236390268e4740462312eab44571d1a95eaaa Mon Sep 17 00:00:00 2001
From: Mika Westerberg <mika.westerberg@linux.intel.com>
Date: Tue, 18 Feb 2020 16:20:16 +0200
Subject: [PATCH 31/38] net: thunderbolt: Add support for ACPI USB4 _OSC
 capability

One of the new bits exposed by the ACPI USB4 _OSC capability is used to
enable/disable USB4/Thunderbolt networking. In the module init phase we
check for this bit and if it is set (and the platform supports ACPI USB4
_OSC) we prevent the driver from loading further.

Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
---
 drivers/net/thunderbolt.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/drivers/net/thunderbolt.c b/drivers/net/thunderbolt.c
index d7b5f87eaa15..1204d1ad2423 100644
--- a/drivers/net/thunderbolt.c
+++ b/drivers/net/thunderbolt.c
@@ -8,6 +8,7 @@
  *          Mika Westerberg <mika.westerberg@linux.intel.com>
  */
 
+#include <linux/acpi.h>
 #include <linux/atomic.h>
 #include <linux/highmem.h>
 #include <linux/if_vlan.h>
@@ -1324,10 +1325,25 @@ static struct tb_service_driver tbnet_driver = {
 	.id_table = tbnet_ids,
 };
 
+static bool tbnet_granted(void)
+{
+#ifdef CONFIG_ACPI
+	if (osc_sb_native_usb4_support_confirmed && osc_sb_native_usb4_control)
+		return osc_sb_native_usb4_control & OSC_USB_USB4_NET;
+#endif
+	return true;
+}
+
 static int __init tbnet_init(void)
 {
 	int ret;
 
+	/* Only register the driver and the properties if the platform
+	 * firmware gave us control of the USB4 networking.
+	 */
+	if (!tbnet_granted())
+		return 0;
+
 	tbnet_dir = tb_property_create_dir(&tbnet_dir_uuid);
 	if (!tbnet_dir)
 		return -ENOMEM;
@@ -1354,6 +1370,8 @@ module_init(tbnet_init);
 
 static void __exit tbnet_exit(void)
 {
+	if (!tbnet_granted())
+		return;
 	tb_unregister_service_driver(&tbnet_driver);
 	tb_unregister_property_dir("network", tbnet_dir);
 	tb_property_free_dir(tbnet_dir);
-- 
2.25.1

