From 72e71e247c136b00780b264c9fc9a55a472b9f0d Mon Sep 17 00:00:00 2001
From: Prathap Kumar Valsan <prathap.kumar.valsan@intel.com>
Date: Tue, 21 Mar 2023 10:54:13 -0700
Subject: [PATCH 22/23] drm/i915/gt: Invalidate GuC TLB

Use ASID support as primary descriptor for determining how to perform
GuC ggtt invalidation.

Signed-off-by: Prathap Kumar Valsan <prathap.kumar.valsan@intel.com>
Signed-off-by: Jonathan Cavitt <jonathan.cavitt@intel.com>
---
 drivers/gpu/drm/i915/gt/intel_ggtt.c       | 26 +++++++++++++++++++++-
 drivers/gpu/drm/i915/gt/uc/intel_guc_reg.h |  6 +++++
 2 files changed, 31 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/gt/intel_ggtt.c b/drivers/gpu/drm/i915/gt/intel_ggtt.c
index cb70c92ba368..7fd43255f635 100644
--- a/drivers/gpu/drm/i915/gt/intel_ggtt.c
+++ b/drivers/gpu/drm/i915/gt/intel_ggtt.c
@@ -204,13 +204,37 @@ static void gen8_ggtt_invalidate(struct i915_ggtt *ggtt)
 	intel_uncore_write_fw(uncore, GFX_FLSH_CNTL_GEN6, GFX_FLSH_CNTL_EN);
 }
 
+static void guc_ggtt_ct_invalidate(struct i915_ggtt *ggtt)
+{
+	struct intel_gt *gt = ggtt->vm.gt;
+	struct intel_uncore *uncore = gt->uncore;
+	intel_wakeref_t wakeref;
+
+	with_intel_runtime_pm_if_active(uncore->rpm, wakeref) {
+		struct intel_guc *guc = &gt->uc.guc;
+		int err = -ENODEV;
+
+		if (guc->ct.enabled)
+			err = intel_guc_invalidate_tlb_guc(guc, INTEL_GUC_TLB_INVAL_MODE_HEAVY);
+
+		if (err) {
+			intel_uncore_write_fw(uncore, GEN12_GUC_TLB_INV_DESC1,
+					      GEN12_GUC_TLB_INV_DESC1_INVALIDATE);
+			intel_uncore_write_fw(uncore, GEN12_GUC_TLB_INV_DESC0,
+					      GEN12_GUC_TLB_INV_DESC0_VALID);
+		}
+	}
+}
+
 static void guc_ggtt_invalidate(struct i915_ggtt *ggtt)
 {
 	struct drm_i915_private *i915 = ggtt->vm.i915;
 
 	gen8_ggtt_invalidate(ggtt);
 
-	if (GRAPHICS_VER(i915) >= 12) {
+	if (HAS_ASID_TLB_INVALIDATION(i915)) {
+		guc_ggtt_ct_invalidate(ggtt);
+	} else if (GRAPHICS_VER(i915) >= 12) {
 		struct intel_gt *gt;
 
 		list_for_each_entry(gt, &ggtt->gt_list, ggtt_link)
diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc_reg.h b/drivers/gpu/drm/i915/gt/uc/intel_guc_reg.h
index 9915de32e894..d725c4750131 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc_reg.h
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc_reg.h
@@ -83,6 +83,12 @@
 #define GEN12_GUC_TLB_INV_CR		_MMIO(0xcee8)
 #define   GEN12_GUC_TLB_INV_CR_INVALIDATE	(1 << 0)
 
+#define GEN12_GUC_TLB_INV_DESC0		_MMIO(0xcf7c)
+#define   GEN12_GUC_TLB_INV_DESC0_VALID	REG_BIT(0)
+#define GEN12_GUC_TLB_INV_DESC1		_MMIO(0xcf80)
+#define   GEN12_GUC_TLB_INV_DESC1_INVALIDATE	REG_BIT(6)
+
+
 #define GUC_ARAT_C6DIS			_MMIO(0xA178)
 
 #define GUC_SHIM_CONTROL		_MMIO(0xc064)
-- 
2.25.1

