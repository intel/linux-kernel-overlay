From 904580feac7d049b7667f4cc8abd0bb8059a67cb Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Mon, 28 Nov 2022 13:11:35 +0800
Subject: [PATCH 0001/2779] Revert "drm/virtio: save and restore
 virtio_gpu_objects"

This reverts commit a3e79bd699ae03fc843c28c144c0040103a4d408.
---
 drivers/gpu/drm/virtio/virtgpu_drv.c    |  6 ---
 drivers/gpu/drm/virtio/virtgpu_drv.h    | 10 ----
 drivers/gpu/drm/virtio/virtgpu_kms.c    |  1 -
 drivers/gpu/drm/virtio/virtgpu_object.c | 65 -------------------------
 4 files changed, 82 deletions(-)

diff --git a/drivers/gpu/drm/virtio/virtgpu_drv.c b/drivers/gpu/drm/virtio/virtgpu_drv.c
index ad627cae6dde..f0555550b4ec 100644
--- a/drivers/gpu/drm/virtio/virtgpu_drv.c
+++ b/drivers/gpu/drm/virtio/virtgpu_drv.c
@@ -212,12 +212,6 @@ static int virtgpu_restore(struct virtio_device *vdev)
 
 	virtio_device_ready(vdev);
 
-	error = virtio_gpu_object_restore_all(vgdev);
-	if (error) {
-		DRM_ERROR("Failed to recover objects\n");
-		return error;
-	}
-
 	error = drm_mode_config_helper_resume(dev);
 	if (error) {
 		DRM_ERROR("resume error %d\n", error);
diff --git a/drivers/gpu/drm/virtio/virtgpu_drv.h b/drivers/gpu/drm/virtio/virtgpu_drv.h
index b36c034c5109..16346bf7ed40 100644
--- a/drivers/gpu/drm/virtio/virtgpu_drv.h
+++ b/drivers/gpu/drm/virtio/virtgpu_drv.h
@@ -124,12 +124,6 @@ struct virtio_gpu_object_array {
 	struct drm_gem_object *objs[];
 };
 
-struct virtio_gpu_object_restore {
-	struct virtio_gpu_object *bo;
-	struct virtio_gpu_object_params params;
-	struct list_head node;
-};
-
 struct virtio_gpu_vbuffer;
 struct virtio_gpu_device;
 
@@ -259,7 +253,6 @@ struct virtio_gpu_device {
 	struct work_struct obj_free_work;
 	spinlock_t obj_free_lock;
 	struct list_head obj_free_list;
-	struct list_head obj_rec;
 
 	struct virtio_gpu_drv_capset *capsets;
 	uint32_t num_capsets;
@@ -465,9 +458,6 @@ bool virtio_gpu_is_shmem(struct virtio_gpu_object *bo);
 
 int virtio_gpu_resource_id_get(struct virtio_gpu_device *vgdev,
 			       uint32_t *resid);
-
-int virtio_gpu_object_restore_all(struct virtio_gpu_device *vgdev);
-
 /* virtgpu_prime.c */
 int virtio_gpu_resource_assign_uuid(struct virtio_gpu_device *vgdev,
 				    struct virtio_gpu_object *bo);
diff --git a/drivers/gpu/drm/virtio/virtgpu_kms.c b/drivers/gpu/drm/virtio/virtgpu_kms.c
index 0d36d03988ef..c23aa492140f 100644
--- a/drivers/gpu/drm/virtio/virtgpu_kms.c
+++ b/drivers/gpu/drm/virtio/virtgpu_kms.c
@@ -159,7 +159,6 @@ int virtio_gpu_init(struct drm_device *dev)
 	vgdev->fence_drv.context = dma_fence_context_alloc(1);
 	spin_lock_init(&vgdev->fence_drv.lock);
 	INIT_LIST_HEAD(&vgdev->fence_drv.fences);
-	INIT_LIST_HEAD(&vgdev->obj_rec);
 	INIT_LIST_HEAD(&vgdev->cap_cache);
 	INIT_WORK(&vgdev->config_changed_work,
 		  virtio_gpu_config_changed_work_func);
diff --git a/drivers/gpu/drm/virtio/virtgpu_object.c b/drivers/gpu/drm/virtio/virtgpu_object.c
index ef53100960f3..f293e6ad52da 100644
--- a/drivers/gpu/drm/virtio/virtgpu_object.c
+++ b/drivers/gpu/drm/virtio/virtgpu_object.c
@@ -61,38 +61,6 @@ static void virtio_gpu_resource_id_put(struct virtio_gpu_device *vgdev, uint32_t
 	}
 }
 
-static void virtio_gpu_object_save_restore_list(struct virtio_gpu_device *vgdev,
-						struct virtio_gpu_object *bo,
-						struct virtio_gpu_object_params *params)
-{
-	struct virtio_gpu_object_restore *new;
-
-	new = kvmalloc(sizeof(*new), GFP_KERNEL);
-	if (!new) {
-		DRM_ERROR("Fail to allocate virtio_gpu_object_restore");
-		return;
-	}
-
-	new->bo = bo;
-	memcpy(&new->params, params, sizeof(*params));
-
-	list_add_tail(&new->node, &vgdev->obj_rec);
-}
-
-static void virtio_gpu_object_del_restore_list(struct virtio_gpu_device *vgdev,
-					       struct virtio_gpu_object *bo)
-{
-	struct virtio_gpu_object_restore *curr, *tmp;
-
-	list_for_each_entry_safe(curr, tmp, &vgdev->obj_rec, node) {
-		if (bo == curr->bo) {
-			list_del(&curr->node);
-			kvfree(curr);
-			break;
-		}
-	}
-}
-
 void virtio_gpu_cleanup_object(struct virtio_gpu_object *bo)
 {
 	struct virtio_gpu_device *vgdev = bo->base.base.dev->dev_private;
@@ -128,7 +96,6 @@ void virtio_gpu_cleanup_object(struct virtio_gpu_object *bo)
 		drm_gem_object_release(&vram->base.base.base);
 		kfree(vram);
 	}
-	virtio_gpu_object_del_restore_list(vgdev, bo);
 }
 
 static void virtio_gpu_free_object(struct drm_gem_object *obj)
@@ -301,11 +268,8 @@ int virtio_gpu_object_create(struct virtio_gpu_device *vgdev,
 					       objs, fence);
 		virtio_gpu_object_attach(vgdev, bo, ents, nents);
 	}
-	/* add submitted object to restore list */
-	virtio_gpu_object_save_restore_list(vgdev, bo, params);
 
 	*bo_ptr = bo;
-
 	return 0;
 
 err_put_objs:
@@ -316,32 +280,3 @@ int virtio_gpu_object_create(struct virtio_gpu_device *vgdev,
 	drm_gem_shmem_free(shmem_obj);
 	return ret;
 }
-
-int virtio_gpu_object_restore_all(struct virtio_gpu_device *vgdev)
-{
-	struct virtio_gpu_object_restore *curr, *tmp;
-	struct virtio_gpu_mem_entry *ents;
-	unsigned int nents;
-	int ret;
-
-	list_for_each_entry_safe(curr, tmp, &vgdev->obj_rec, node) {
-		ret = virtio_gpu_object_shmem_init(vgdev, curr->bo, &ents, &nents);
-		if (ret)
-			break;
-
-		if (curr->params.blob) {
-			virtio_gpu_cmd_resource_create_blob(vgdev, curr->bo, &curr->params,
-							    ents, nents);
-		} else if (curr->params.virgl) {
-			virtio_gpu_cmd_resource_create_3d(vgdev, curr->bo, &curr->params,
-							  NULL, NULL);
-			virtio_gpu_object_attach(vgdev, curr->bo, ents, nents);
-		} else {
-			virtio_gpu_cmd_create_resource(vgdev, curr->bo, &curr->params,
-						       NULL, NULL);
-			virtio_gpu_object_attach(vgdev, curr->bo, ents, nents);
-		}
-	}
-
-	return ret;
-}
-- 
2.25.1

