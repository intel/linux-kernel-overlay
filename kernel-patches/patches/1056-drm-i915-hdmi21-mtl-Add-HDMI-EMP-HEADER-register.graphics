From 6b78c05a172c8dd31f7e773697f2b9397cb13fc1 Mon Sep 17 00:00:00 2001
From: Ankit Nautiyal <ankit.k.nautiyal@intel.com>
Date: Mon, 27 Dec 2021 15:29:52 +0530
Subject: [PATCH 1056/1096] drm/i915/hdmi21/mtl: Add HDMI EMP HEADER register

This patch adds HDMI_EMP_REGISTER and helper function to prepare
HDMI EMP HEADER for a given HDMI Extended Metadata Packet.

v2: Fixed Checkpatch issues.
Capped num of packets to fit in the header. (Uma)

v3: Set the HB0_Spare bits of the register with 0x7F for
Extended Metadata Packets.

Signed-off-by: Ankit Nautiyal <ankit.k.nautiyal@intel.com>
Reviewed-by: Uma Shankar <uma.shankar@intel.com>
---
 drivers/gpu/drm/i915/display/intel_hdmi.c | 28 +++++++++++++++++++++++
 drivers/gpu/drm/i915/display/intel_hdmi.h |  3 +++
 drivers/gpu/drm/i915/i915_reg.h           | 14 ++++++++++++
 3 files changed, 45 insertions(+)

diff --git a/drivers/gpu/drm/i915/display/intel_hdmi.c b/drivers/gpu/drm/i915/display/intel_hdmi.c
index 7c14ea160b16..e97270c18b1e 100644
--- a/drivers/gpu/drm/i915/display/intel_hdmi.c
+++ b/drivers/gpu/drm/i915/display/intel_hdmi.c
@@ -3700,3 +3700,31 @@ void intel_hdmi_start_frl(struct intel_encoder *encoder,
 		schedule_work(&intel_connector->modeset_retry_work);
 	}
 }
+
+void intel_hdmi_fill_emp_header_byte(const struct hdmi_extended_metadata_packet *emp,
+				     u32 *emp_header)
+{
+	if (!emp->enabled)
+		return;
+
+	*emp_header = 0;
+	*emp_header |= TRANS_HDMI_EMP_HB0;
+	*emp_header |= TRANS_HDMI_EMP_NUM_PACKETS(emp->first_data_set.data_set_length);
+
+	switch (emp->first_data_set.ds_type) {
+	case HDMI_EMP_DS_TYPE_PSTATIC:
+		*emp_header |= TRANS_HDMI_EMP_DS_TYPE_PSTATIC;
+		break;
+	case HDMI_EMP_DS_TYPE_DYNAMIC:
+		*emp_header |= TRANS_HDMI_EMP_DS_TYPE_DYNAMIC;
+		break;
+	case HDMI_EMP_DS_TYPE_UNIQUE:
+		*emp_header |= TRANS_HDMI_EMP_DS_TYPE_UNIQUE;
+		break;
+	default:
+		break;
+	}
+
+	if (emp->first_data_set.pb0_end)
+		*emp_header |= TRANS_HDMI_EMP_END;
+}
diff --git a/drivers/gpu/drm/i915/display/intel_hdmi.h b/drivers/gpu/drm/i915/display/intel_hdmi.h
index e7f330667137..c46bb0621132 100644
--- a/drivers/gpu/drm/i915/display/intel_hdmi.h
+++ b/drivers/gpu/drm/i915/display/intel_hdmi.h
@@ -16,6 +16,7 @@ struct drm_connector_state;
 struct drm_display_mode;
 struct drm_encoder;
 struct drm_i915_private;
+struct hdmi_extended_metadata_packet;
 struct intel_connector;
 struct intel_crtc_state;
 struct intel_digital_port;
@@ -60,5 +61,7 @@ int intel_hdmi_dsc_get_slice_height(int vactive);
 struct drm_i915_private *intel_hdmi_to_i915(struct intel_hdmi *intel_hdmi);
 void intel_hdmi_start_frl(struct intel_encoder *encoder,
 			  const struct intel_crtc_state *crtc_state);
+void intel_hdmi_fill_emp_header_byte(const struct hdmi_extended_metadata_packet *emp,
+				     u32 *emp_header);
 
 #endif /* __INTEL_HDMI_H__ */
diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 0706666587cf..4e4cf419987a 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -2106,6 +2106,20 @@
 #define TRANS_HDMI_FRL_TRAIN(trans)		_MMIO_TRANS2(trans, _TRANS_HDMI_FRL_TRAIN_A)
 #define  TRANS_HDMI_FRL_LTP(pattern, lane)	((pattern) << (lane) * 8)
 
+/* HDMI 2.1 EMP PACKET HEADER */
+#define _TRANS_HDMI_EMP_HEADER_A	0x600D4
+#define TRANS_HDMI_EMP_HEADER(trans)	_MMIO_TRANS2(trans, _TRANS_HDMI_EMP_HEADER_A)
+#define  TRANS_HDMI_EMP_END			REG_BIT(26)
+#define  TRANS_HDMI_EMP_DS_TYPE_MASK		REG_GENMASK(25, 24)
+#define  TRANS_HDMI_EMP_DS_TYPE_PSTATIC		REG_FIELD_PREP(TRANS_HDMI_EMP_DS_TYPE_MASK, 0)
+#define  TRANS_HDMI_EMP_DS_TYPE_DYNAMIC		REG_FIELD_PREP(TRANS_HDMI_EMP_DS_TYPE_MASK, 1)
+#define  TRANS_HDMI_EMP_DS_TYPE_UNIQUE		REG_FIELD_PREP(TRANS_HDMI_EMP_DS_TYPE_MASK, 2)
+#define  TRANS_HDMI_EMP_DS_TYPE_RESERVED	REG_FIELD_PREP(TRANS_HDMI_EMP_DS_TYPE_MASK, 3)
+#define  TRANS_HDMI_EMP_NUM_PACKETS_MASK	REG_GENMASK(23, 16)
+#define  TRANS_HDMI_EMP_NUM_PACKETS(num)	REG_FIELD_PREP(TRANS_HDMI_EMP_NUM_PACKETS_MASK, \
+						(num) & 0xFF)
+#define  TRANS_HDMI_EMP_HB0			0x7F
+
 /*
  * HSW+ eDP PSR registers
  *
-- 
2.25.1

