From 115648ff1b1a301ea69324d80b1297d1041fd3b8 Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Wed, 7 Aug 2024 17:10:25 +0800
Subject: [PATCH 23/27] media: i2c: platform: fix multiple compile errors

Change Description:
media: i2c: platform: fix multiple compile errors

Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
---
 drivers/media/i2c/ar0234.c                    |  4 +-
 drivers/media/i2c/d4xx.c                      | 63 +++++++------
 drivers/media/i2c/imx390.c                    | 21 -----
 drivers/media/i2c/ti960-des.c                 |  4 +-
 .../media/platform/intel/ipu6-acpi-common.c   |  6 +-
 .../media/platform/intel/ipu6-acpi-pdata.c    | 49 +++++-----
 .../media/platform/intel/ipu6-adlrvp-pdata.c  | 94 +------------------
 .../media/platform/intel/ipu6-tglrvp-pdata.c  | 27 +-----
 8 files changed, 70 insertions(+), 198 deletions(-)

diff --git a/drivers/media/i2c/ar0234.c b/drivers/media/i2c/ar0234.c
index 4ed5686e50f5..a3f5b66933ea 100644
--- a/drivers/media/i2c/ar0234.c
+++ b/drivers/media/i2c/ar0234.c
@@ -1,5 +1,5 @@
 // SPDX-License-Identifier: GPL-2.0
-// Copyright (c) 2019-2023 Intel Corporation.
+// Copyright (c) 2019-2024 Intel Corporation.
 
 #include <asm/unaligned.h>
 #include <linux/acpi.h>
@@ -2136,7 +2136,7 @@ static void ar0234_remove(struct i2c_client *client)
 
 }
 
-irqreturn_t ar0234_threaded_irq_fn(int irq, void *dev_id)
+static irqreturn_t ar0234_threaded_irq_fn(int irq, void *dev_id)
 {
 	struct ar0234 *ar0234 = dev_id;
 
diff --git a/drivers/media/i2c/d4xx.c b/drivers/media/i2c/d4xx.c
index a4a80aba465d..2be531a013e0 100644
--- a/drivers/media/i2c/d4xx.c
+++ b/drivers/media/i2c/d4xx.c
@@ -2,7 +2,7 @@
 /*
  * ds5.c - Intel(R) RealSense(TM) D4XX camera driver
  *
- * Copyright (c) 2017-2023, INTEL CORPORATION.  All rights reserved.
+ * Copyright (c) 2017-2024, INTEL CORPORATION.  All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify it
  * under the terms and conditions of the GNU General Public License,
@@ -597,22 +597,6 @@ static int max9295_read_8(struct ds5 *state, u16 reg, u8 *val)
 	return ret;
 }
 
-static int ds5_write_8(struct ds5 *state, u16 reg, u8 val)
-{
-	int ret;
-
-	ret = regmap_raw_write(state->regmap, reg, &val, 1);
-	if (ret < 0)
-		dev_err(&state->client->dev, "%s(): i2c write failed %d, 0x%04x = 0x%x\n",
-			__func__, ret, reg, val);
-	else
-		if (state->dfu_dev.dfu_state_flag == DS5_DFU_IDLE)
-			dev_info(&state->client->dev, "%s(): i2c write 0x%04x: 0x%x\n",
-				 __func__, reg, val);
-
-	return ret;
-}
-
 static int ds5_write(struct ds5 *state, u16 reg, u16 val)
 {
 	int ret;
@@ -726,7 +710,7 @@ static void set_sub_stream_vc_id(s64 *query_sub_stream, int index, u32 vc_id)
 	query_sub_stream[index] |= val << 56;
 }
 
-static int get_sub_stream_vc_id(s64 *query_sub_stream, int index)
+static int get_sub_stream_vc_id(const s64 *query_sub_stream, int index)
 {
 	s64 val = 0;
 	val = query_sub_stream[index] >> 56;
@@ -1342,6 +1326,21 @@ static unsigned int mbus_code_to_mipi(u32 code)
 	}
 }
 
+static s64 *match_d4xx_sub_stream_qmenu(const s64 *qmenu_int)
+{
+	int i = 0;
+	s64 *matched_qmenu_int = NULL;
+
+	for (i = 0; i < MAX_D457_COUNT; i++) {
+		if (d4xx_query_sub_stream[i] == qmenu_int) {
+			matched_qmenu_int = d4xx_query_sub_stream[i];
+			break;
+		}
+	}
+
+	return matched_qmenu_int;
+}
+
 static int __ds5_sensor_set_fmt(struct ds5 *state, struct ds5_sensor *sensor,
 				     struct v4l2_subdev_state *v4l2_state,
 				struct v4l2_subdev_format *fmt)
@@ -1382,12 +1381,17 @@ static int __ds5_sensor_set_fmt(struct ds5 *state, struct ds5_sensor *sensor,
 	substream = pad_to_substream[sensor->mux_pad];
 
 	if (substream != -1) {
-		query_sub_stream = state->ctrls.query_sub_stream->qmenu_int;
+		query_sub_stream = match_d4xx_sub_stream_qmenu(
+			state->ctrls.query_sub_stream->qmenu_int);
 		if (query_sub_stream) {
 			set_sub_stream_fmt(query_sub_stream, substream, mf->code);
 			set_sub_stream_h(query_sub_stream, substream, mf->height);
 			set_sub_stream_w(query_sub_stream, substream, mf->width);
 			set_sub_stream_dt(query_sub_stream, substream, mbus_code_to_mipi(mf->code));
+		} else {
+			dev_err(sensor->sd.dev,
+				"failed to find sub stream fmt info: %s\n",
+				sensor->sd.name);
 		}
 	}
 
@@ -3111,7 +3115,7 @@ static int ds5_ctrl_init(struct ds5 *state, int sid)
 	default:
 		dev_err(state->rgb.sensor.sd.dev,
 		"%s():!! can not get d4xx_controls_q_sub_stream: sd->name is %s\n",
-		__func__, __LINE__, sd->name);
+		__func__, sd->name);
 		break;
 	}
 	ctrls->query_sub_stream->flags |=
@@ -3599,12 +3603,17 @@ static int ds5_mux_set_fmt(struct v4l2_subdev *sd,
 	substream = pad_to_substream[pad];
 
 	if (substream != -1) {
-		query_sub_stream = state->ctrls.query_sub_stream->qmenu_int;
+		query_sub_stream = match_d4xx_sub_stream_qmenu(
+			state->ctrls.query_sub_stream->qmenu_int);
 		if (query_sub_stream) {
 			set_sub_stream_fmt(query_sub_stream, substream, ffmt->code);
 			set_sub_stream_h(query_sub_stream, substream, ffmt->height);
 			set_sub_stream_w(query_sub_stream, substream, ffmt->width);
 			set_sub_stream_dt(query_sub_stream, substream, mbus_code_to_mipi(ffmt->code));
+		} else {
+			dev_err(sd->dev,
+				"failed to find sub stream fmt info: %s\n",
+				sensor->sd.name);
 		}
 	}
 
@@ -3715,7 +3724,7 @@ static int ds5_mux_s_frame_interval(struct v4l2_subdev *sd,
 	return 0;
 }
 
-int d4xx_reset_oneshot(struct ds5 *state)
+static int d4xx_reset_oneshot(struct ds5 *state)
 {
 	struct d4xx_pdata *dpdata = state->client->dev.platform_data;
 	struct i2c_board_info *deser = dpdata->deser_board_info;
@@ -4791,7 +4800,7 @@ static int ds5_chrdev_init(struct i2c_client *c, struct ds5 *state)
 		dev_dbg(&c->dev, "%s(): <Major, Minor>: <%d, %d>\n",
 				__func__, MAJOR(*dev_num), MINOR(*dev_num));
 		/* Create a class : appears at /sys/class */
-		*ds5_class = class_create(THIS_MODULE, DS5_DRIVER_NAME_CLASS);
+		*ds5_class = class_create(DS5_DRIVER_NAME_CLASS);
 		if (IS_ERR(*ds5_class)) {
 			dev_err(&c->dev, "Could not create class device\n");
 			unregister_chrdev_region(0, 1);
@@ -4839,8 +4848,7 @@ static void ds5_substream_init(void)
 {
 	int i, j;
 	unsigned int mipi_csi2_type;
-	s64 sub_stream;
-
+	s64 *sub_stream = NULL;
 	/*
 	 * 0, vc 0, depth
 	 * 1, vc 0, meta data
@@ -5338,8 +5346,7 @@ static int ds5_probe(struct i2c_client *c)
 		regulator_disable(state->vcc);
 	return ret;
 }
-
-static int ds5_remove(struct i2c_client *c)
+static void ds5_remove(struct i2c_client *c)
 {
 	struct ds5 *state = container_of(i2c_get_clientdata(c), struct ds5, mux.sd.subdev);
 
@@ -5357,7 +5364,7 @@ static int ds5_remove(struct i2c_client *c)
 #endif
 		ds5_mux_remove(state);
 	}
-	return 0;
+
 }
 
 static const struct i2c_device_id ds5_id[] = {
diff --git a/drivers/media/i2c/imx390.c b/drivers/media/i2c/imx390.c
index 0a5bbed85c38..c81e46c22c88 100644
--- a/drivers/media/i2c/imx390.c
+++ b/drivers/media/i2c/imx390.c
@@ -1918,27 +1918,6 @@ static void imx390_remove(struct i2c_client *client)
 	mutex_destroy(&imx390->mutex);
 
 }
-
-irqreturn_t imx390_threaded_irq_fn(int irq, void *dev_id)
-{
-	struct imx390 *imx390 = dev_id;
-
-	mutex_lock(&imx390->mutex);
-	if (imx390->streaming == false) {
-		gpio_set_value(imx390->platform_data->gpios[0], 0);
-		goto imx390_irq_handled;
-	}
-	if (imx390->strobe_source->val == V4L2_FLASH_STROBE_SOURCE_EXTERNAL) {
-
-		gpio_set_value(imx390->platform_data->gpios[0],
-				gpio_get_value(imx390->platform_data->irq_pin));
-	}
-
-imx390_irq_handled:
-	mutex_unlock(&imx390->mutex);
-	return IRQ_HANDLED;
-}
-
 static int imx390_probe(struct i2c_client *client)
 {
 	struct v4l2_subdev *sd;
diff --git a/drivers/media/i2c/ti960-des.c b/drivers/media/i2c/ti960-des.c
index a335c22b490b..c8d8b72e700f 100644
--- a/drivers/media/i2c/ti960-des.c
+++ b/drivers/media/i2c/ti960-des.c
@@ -182,7 +182,7 @@ static u8 ti960_set_sub_stream[] = {
 	0, 0, 0, 0
 };
 
-int bus_switch(struct ti960 *va)
+static int bus_switch(struct ti960 *va)
 {
 	int ret;
 	int retry, timeout = 10;
@@ -1358,7 +1358,9 @@ static int ti960_register_subdev(struct ti960 *va)
 
 static int ti960_init(struct ti960 *va)
 {
+#ifdef TI960_RESET_NEEDED
 	unsigned int reset_gpio = va->pdata->reset_gpio;
+#endif
 	int i, rval;
 	unsigned int val;
 
diff --git a/drivers/media/platform/intel/ipu6-acpi-common.c b/drivers/media/platform/intel/ipu6-acpi-common.c
index e3c61f39ebba..368fe630abb4 100644
--- a/drivers/media/platform/intel/ipu6-acpi-common.c
+++ b/drivers/media/platform/intel/ipu6-acpi-common.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0
 /*
- * Copyright (c) 2016--2022 Intel Corporation.
+ * Copyright (c) 2016--2024 Intel Corporation.
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License version
@@ -75,7 +75,7 @@ static int read_acpi_block(struct device *dev, char *id, void *data, u32 size)
 	return status;
 }
 
-int ipu_acpi_get_gpio_data(struct device *dev, struct ipu_gpio_info *gpio, int size,
+static int ipu_acpi_get_gpio_data(struct device *dev, struct ipu_gpio_info *gpio, int size,
 				u64 *gpio_num)
 {
 	const u8 dsdt_cam_gpio[] = {
@@ -160,7 +160,7 @@ int ipu_acpi_get_gpio_data(struct device *dev, struct ipu_gpio_info *gpio, int s
 	return rval;
 }
 
-int ipu_acpi_get_i2c_info(struct device *dev, struct ipu_i2c_info *i2c, int size, u64 *num)
+static int ipu_acpi_get_i2c_info(struct device *dev, struct ipu_i2c_info *i2c, int size, u64 *num)
 {
 	const u8 dsdt_cam_i2c[] = {
 		0x49, 0x75, 0x25, 0x26, 0x71, 0x92, 0xA4, 0x4C,
diff --git a/drivers/media/platform/intel/ipu6-acpi-pdata.c b/drivers/media/platform/intel/ipu6-acpi-pdata.c
index 32d69fcc8330..e1226e9034d0 100644
--- a/drivers/media/platform/intel/ipu6-acpi-pdata.c
+++ b/drivers/media/platform/intel/ipu6-acpi-pdata.c
@@ -51,7 +51,7 @@ struct ipu_isys_subdev_pdata *get_acpi_subdev_pdata(void)
 }
 EXPORT_SYMBOL(get_acpi_subdev_pdata);
 
-void print_serdes_sdinfo(struct serdes_subdev_info *sdinfo)
+static void print_serdes_sdinfo(struct serdes_subdev_info *sdinfo)
 {
 	int j;
 	struct serdes_module_pdata *sd_mpdata = sdinfo->board_info.platform_data;
@@ -79,7 +79,7 @@ void print_serdes_sdinfo(struct serdes_subdev_info *sdinfo)
 				(int)sd_mpdata->gpio_powerup_seq[j]);
 }
 
-void print_serdes_subdev(struct ipu_isys_subdev_info *sd)
+static void print_serdes_subdev(struct ipu_isys_subdev_info *sd)
 {
 	struct serdes_platform_data *sd_pdata = sd->i2c.board_info.platform_data;
 	int i;
@@ -119,7 +119,7 @@ void print_serdes_subdev(struct ipu_isys_subdev_info *sd)
 
 }
 
-void print_subdev(struct ipu_isys_subdev_info *sd)
+static void print_subdev(struct ipu_isys_subdev_info *sd)
 {
 	struct sensor_platform_data *spdata = sd->i2c.board_info.platform_data;
 	int i;
@@ -153,7 +153,7 @@ void print_subdev(struct ipu_isys_subdev_info *sd)
 		pr_debug("\t\tgpios[%d] \t\t= %d", i, spdata->gpios[i]);
 }
 
-void add_local_subdevs(struct ipu_isys_subdev_info *new_subdev_info)
+static void add_local_subdevs(struct ipu_isys_subdev_info *new_subdev_info)
 {
 	struct ipu_isys_subdev_pdata *ptr_acpi_subdev_pdata = &acpi_subdev_pdata;
 	int i = 0;
@@ -168,7 +168,7 @@ void add_local_subdevs(struct ipu_isys_subdev_info *new_subdev_info)
 	}
 }
 
-void update_short(struct device *dev,
+static void update_short(struct device *dev,
 		char msg[MSG_LEN],
 		unsigned short *old_short,
 		unsigned int new_short)
@@ -179,7 +179,7 @@ void update_short(struct device *dev,
 	}
 }
 
-void update_hex(struct device *dev,
+static void update_hex(struct device *dev,
 		char msg[MSG_LEN],
 		unsigned int *old_hex,
 		unsigned int new_hex)
@@ -190,7 +190,7 @@ void update_hex(struct device *dev,
 	}
 }
 
-void update_int(struct device *dev,
+static void update_int(struct device *dev,
 		char msg[MSG_LEN],
 		unsigned int *old_int,
 		unsigned int new_int)
@@ -201,7 +201,7 @@ void update_int(struct device *dev,
 	}
 }
 
-void update_inta(struct device *dev,
+static void update_inta(struct device *dev,
 		char msg[MSG_LEN],
 		int old_int[MSG_LEN],
 		int new_int[MSG_LEN],
@@ -217,7 +217,7 @@ void update_inta(struct device *dev,
 	}
 }
 
-void update_str(struct device *dev,
+static void update_str(struct device *dev,
 		char msg[MSG_LEN],
 		char old_str[MSG_LEN],
 		char new_str[MSG_LEN])
@@ -228,7 +228,7 @@ void update_str(struct device *dev,
 	}
 }
 
-void update_subdev(struct device *dev,
+static void update_subdev(struct device *dev,
 			struct ipu_isys_subdev_info *new_sd,
 			struct ipu_isys_subdev_info **old_sd)
 {
@@ -260,7 +260,7 @@ void update_subdev(struct device *dev,
 	update_inta(dev, "pdata gpios", old_pdata->gpios, new_pdata->gpios, IPU_SPDATA_GPIO_NUM);
 }
 
-void update_serdes_subdev(struct device *dev,
+static void update_serdes_subdev(struct device *dev,
 			struct ipu_isys_subdev_info *new_sd,
 			struct ipu_isys_subdev_info **old_sd)
 {
@@ -319,7 +319,7 @@ void update_serdes_subdev(struct device *dev,
 	}
 }
 
-int compare_subdev(struct device *dev,
+static int compare_subdev(struct device *dev,
 			struct ipu_isys_subdev_info *new_subdev,
 			struct ipu_isys_subdev_info *old_subdev,
 			enum connection_type connect)
@@ -371,7 +371,7 @@ int compare_subdev(struct device *dev,
 	return -1;
 }
 
-void update_pdata(struct device *dev,
+static void update_pdata(struct device *dev,
 			struct ipu_isys_subdev_info *new_subdev,
 			enum connection_type connect)
 {
@@ -465,7 +465,7 @@ void update_pdata(struct device *dev,
 	}
 }
 
-void set_ti960_gpio(struct control_logic_data *ctl_data, struct serdes_platform_data **pdata)
+static void set_ti960_gpio(struct control_logic_data *ctl_data, struct serdes_platform_data **pdata)
 {
 	int i;
 
@@ -486,7 +486,7 @@ void set_ti960_gpio(struct control_logic_data *ctl_data, struct serdes_platform_
 	}
 }
 
-void set_lt_gpio(struct control_logic_data *ctl_data, struct sensor_platform_data **pdata,
+static void set_lt_gpio(struct control_logic_data *ctl_data, struct sensor_platform_data **pdata,
 			bool is_dummy)
 {
 	int i;
@@ -525,7 +525,7 @@ void set_lt_gpio(struct control_logic_data *ctl_data, struct sensor_platform_dat
 	}
 }
 
-void set_common_gpio(struct control_logic_data *ctl_data,
+static void set_common_gpio(struct control_logic_data *ctl_data,
 		     struct sensor_platform_data **pdata)
 {
 	int i;
@@ -549,7 +549,7 @@ void set_common_gpio(struct control_logic_data *ctl_data,
 					ctl_data->gpio[i].func);
 }
 
-int set_csi2(struct ipu_isys_subdev_info **sensor_sd,
+static int set_csi2(struct ipu_isys_subdev_info **sensor_sd,
 		unsigned int lanes,
 		unsigned int port)
 {
@@ -566,7 +566,7 @@ int set_csi2(struct ipu_isys_subdev_info **sensor_sd,
 	return 0;
 }
 
-void set_i2c(struct ipu_isys_subdev_info **sensor_sd,
+static void set_i2c(struct ipu_isys_subdev_info **sensor_sd,
 		struct device *dev,
 		const char sensor_name[I2C_NAME_SIZE],
 		unsigned int addr)
@@ -579,7 +579,8 @@ void set_i2c(struct ipu_isys_subdev_info **sensor_sd,
 		sizeof((*sensor_sd)->i2c.i2c_adapter_bdf));
 }
 
-void set_serdes_sd_pdata(struct serdes_module_pdata **module_pdata, char sensor_name[I2C_NAME_SIZE],
+static void set_serdes_sd_pdata(struct serdes_module_pdata **module_pdata,
+				 char sensor_name[I2C_NAME_SIZE],
 			unsigned int lanes)
 {
 	/* general */
@@ -599,7 +600,7 @@ void set_serdes_sd_pdata(struct serdes_module_pdata **module_pdata, char sensor_
 
 #define PORT_NR 8
 
-int set_serdes_subdev(struct ipu_isys_subdev_info **serdes_sd,
+static int set_serdes_subdev(struct ipu_isys_subdev_info **serdes_sd,
 		struct device *dev,
 		struct serdes_platform_data **pdata,
 		char sensor_name[I2C_NAME_SIZE],
@@ -659,7 +660,7 @@ int set_serdes_subdev(struct ipu_isys_subdev_info **serdes_sd,
 	return 0;
 }
 
-int set_pdata(struct ipu_isys_subdev_info **sensor_sd,
+static int set_pdata(struct ipu_isys_subdev_info **sensor_sd,
 		struct device *dev,
 		char sensor_name[I2C_NAME_SIZE],
 		struct control_logic_data *ctl_data,
@@ -730,7 +731,7 @@ int set_pdata(struct ipu_isys_subdev_info **sensor_sd,
 	return 0;
 }
 
-void set_serdes_info(struct device *dev, char *sensor_name, const char *serdes_name,
+static void set_serdes_info(struct device *dev, char *sensor_name, const char *serdes_name,
 			struct sensor_bios_data *cam_data)
 {
 	int i;
@@ -764,7 +765,7 @@ void set_serdes_info(struct device *dev, char *sensor_name, const char *serdes_n
 		serdes_info.phy_i2c_addr = 0;
 }
 
-int populate_dummy(struct device *dev,
+static int populate_dummy(struct device *dev,
 			char sensor_name[I2C_NAME_SIZE],
 			struct sensor_bios_data *cam_data,
 			struct control_logic_data *ctl_data,
@@ -800,7 +801,7 @@ int populate_dummy(struct device *dev,
 	return 0;
 }
 
-int populate_sensor_pdata(struct device *dev,
+static int populate_sensor_pdata(struct device *dev,
 			struct ipu_isys_subdev_info **sensor_sd,
 			char sensor_name[I2C_NAME_SIZE],
 			struct sensor_bios_data *cam_data,
diff --git a/drivers/media/platform/intel/ipu6-adlrvp-pdata.c b/drivers/media/platform/intel/ipu6-adlrvp-pdata.c
index 45cbb625fc3d..c000e37075f3 100644
--- a/drivers/media/platform/intel/ipu6-adlrvp-pdata.c
+++ b/drivers/media/platform/intel/ipu6-adlrvp-pdata.c
@@ -1,5 +1,5 @@
 // SPDX-License-Identifier: GPL-2.0
-// Copyright (C) 2023 Intel Corporation
+// Copyright (C) 2022-2024 Intel Corporation
 #include <linux/clk.h>
 #include <linux/clkdev.h>
 #include <linux/gpio.h>
@@ -121,104 +121,12 @@ static struct ipu_isys_subdev_info ar0234_sd_2 = {
 #define IMX390_LANES       4
 #define IMX390_D3RCM_I2C_ADDRESS 0x1a
 #define IMX390_D3RCM_I2C_ADDRESS_8BIT (IMX390_D3RCM_I2C_ADDRESS << 1)
-#define IMX390_D3CM_I2C_ADDRESS 0x21
 #define IMX390_D3CM_I2C_ADDRESS_8BIT (IMX390_D3CM_I2C_ADDRESS << 1)
 #define IMX390_I2C_ADDRESS_3 0x1e
 #define IMX390_I2C_ADDRESS_8BIT_3 (IMX390_I2C_ADDRESS_3 << 1)
 #define IMX390_I2C_ADDRESS_4 0x20
 #define IMX390_I2C_ADDRESS_8BIT_4 (IMX390_I2C_ADDRESS_4 << 1)
 
-static struct ipu_isys_csi2_config imx390_csi2_cfg_1 = {
-	.nlanes = IMX390_LANES,
-	.port = 1,
-};
-
-static struct imx390_platform_data imx390_pdata_1 = {
-	.port = 1,
-	.lanes = 4,
-	.i2c_slave_address = IMX390_I2C_ADDRESS_3,
-	.suffix = 'a',
-};
-
-static struct ipu_isys_subdev_info imx390_sd_1 = {
-	.csi2 = &imx390_csi2_cfg_1,
-	.i2c = {
-	.board_info = {
-		I2C_BOARD_INFO("imx390", IMX390_I2C_ADDRESS_3),
-		.platform_data = &imx390_pdata_1,
-	},
-	.i2c_adapter_bdf = "0000:00:15.1",
-	},
-};
-
-static struct ipu_isys_csi2_config imx390_csi2_cfg_2 = {
-	.nlanes = IMX390_LANES,
-	.port = 2,
-};
-
-static struct imx390_platform_data imx390_pdata_2 = {
-	.port = 2,
-	.lanes = 4,
-	.i2c_slave_address = IMX390_I2C_ADDRESS_3,
-	.suffix = 'b',
-};
-
-static struct ipu_isys_subdev_info imx390_sd_2 = {
-	.csi2 = &imx390_csi2_cfg_2,
-	.i2c = {
-	.board_info = {
-		I2C_BOARD_INFO("imx390", IMX390_I2C_ADDRESS_3),
-		.platform_data = &imx390_pdata_2,
-	},
-	.i2c_adapter_bdf = "0000:00:19.1",
-	},
-};
-
-static struct ipu_isys_csi2_config imx390_csi2_cfg_3 = {
-	.nlanes = IMX390_LANES,
-	.port = 1,
-};
-
-static struct imx390_platform_data imx390_pdata_3 = {
-	.port = 1,
-	.lanes = 4,
-	.i2c_slave_address = IMX390_I2C_ADDRESS_4,
-	.suffix = 'a',
-};
-
-static struct ipu_isys_subdev_info imx390_sd_3 = {
-	.csi2 = &imx390_csi2_cfg_1,
-	.i2c = {
-	.board_info = {
-		I2C_BOARD_INFO("imx390", IMX390_I2C_ADDRESS_4),
-		.platform_data = &imx390_pdata_1,
-	},
-	.i2c_adapter_bdf = "0000:00:15.1",
-	},
-};
-
-static struct ipu_isys_csi2_config imx390_csi2_cfg_4 = {
-	.nlanes = IMX390_LANES,
-	.port = 2,
-};
-
-static struct imx390_platform_data imx390_pdata_4 = {
-	.port = 2,
-	.lanes = 4,
-	.i2c_slave_address = IMX390_I2C_ADDRESS_4,
-	.suffix = 'b',
-};
-
-static struct ipu_isys_subdev_info imx390_sd_4 = {
-	.csi2 = &imx390_csi2_cfg_2,
-	.i2c = {
-	.board_info = {
-		I2C_BOARD_INFO("imx390", IMX390_I2C_ADDRESS_4),
-		.platform_data = &imx390_pdata_2,
-	},
-	.i2c_adapter_bdf = "0000:00:19.1",
-	},
-};
 #endif
 
 #if IS_ENABLED(CONFIG_VIDEO_TI960)
diff --git a/drivers/media/platform/intel/ipu6-tglrvp-pdata.c b/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
index 34d2e60b4645..a0f316e3050e 100644
--- a/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
+++ b/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
@@ -1,5 +1,5 @@
 // SPDX-License-Identifier: GPL-2.0
-// Copyright (C) 2022 Intel Corporation
+// Copyright (C) 2022-2024 Intel Corporation
 #include <linux/clk.h>
 #include <linux/clkdev.h>
 #include <linux/gpio.h>
@@ -224,7 +224,6 @@ static struct ipu_isys_subdev_info ar0234_sd_4 = {
 #define IMX390_LANES       4
 #define IMX390_D3RCM_I2C_ADDRESS 0x1a
 #define IMX390_D3RCM_I2C_ADDRESS_8BIT (IMX390_D3RCM_I2C_ADDRESS << 1)
-#define IMX390_D3CM_I2C_ADDRESS 0x21
 #define IMX390_D3CM_I2C_ADDRESS_8BIT (IMX390_D3CM_I2C_ADDRESS << 1)
 #define IMX390_I2C_ADDRESS_3 0x1e
 #define IMX390_I2C_ADDRESS_8BIT_3 (IMX390_I2C_ADDRESS_3 << 1)
@@ -277,18 +276,6 @@ static struct ipu_isys_subdev_info imx390_sd_2 = {
 	},
 };
 
-static struct ipu_isys_csi2_config imx390_csi2_cfg_3 = {
-	.nlanes = IMX390_LANES,
-	.port = 1,
-};
-
-static struct imx390_platform_data imx390_pdata_3 = {
-	.port = 1,
-	.lanes = 4,
-	.i2c_slave_address = IMX390_I2C_ADDRESS_4,
-	.suffix = 'a',
-};
-
 static struct ipu_isys_subdev_info imx390_sd_3 = {
 	.csi2 = &imx390_csi2_cfg_1,
 	.i2c = {
@@ -300,18 +287,6 @@ static struct ipu_isys_subdev_info imx390_sd_3 = {
 	},
 };
 
-static struct ipu_isys_csi2_config imx390_csi2_cfg_4 = {
-	.nlanes = IMX390_LANES,
-	.port = 2,
-};
-
-static struct imx390_platform_data imx390_pdata_4 = {
-	.port = 2,
-	.lanes = 4,
-	.i2c_slave_address = IMX390_I2C_ADDRESS_4,
-	.suffix = 'b',
-};
-
 static struct ipu_isys_subdev_info imx390_sd_4 = {
 	.csi2 = &imx390_csi2_cfg_2,
 	.i2c = {
-- 
2.34.1

