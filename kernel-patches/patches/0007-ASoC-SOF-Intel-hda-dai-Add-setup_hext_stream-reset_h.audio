From 92cbb21a8912bc49f2da9dd5edd7f4c8738994a9 Mon Sep 17 00:00:00 2001
From: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Date: Tue, 7 Mar 2023 16:04:30 +0200
Subject: [PATCH 07/38] ASoC: SOF: Intel: hda-dai: Add
 setup_hext_stream/reset_hext_stream DMA ops
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Define and use the setup_hext_stream/reset_hext_stream DMA ops during link
hw_params and cleanup.

Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
Reviewed-by: Rander Wang <rander.wang@intel.com>
Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
Link: https://lore.kernel.org/r/20230307140435.2808-10-peter.ujfalusi@linux.intel.com
Signed-off-by: Mark Brown <broonie@kernel.org>
---
 sound/soc/sof/intel/hda-dai-ops.c | 149 +-----------------------------
 sound/soc/sof/intel/hda-dai.c     |   6 +-
 2 files changed, 5 insertions(+), 150 deletions(-)

diff --git a/sound/soc/sof/intel/hda-dai-ops.c b/sound/soc/sof/intel/hda-dai-ops.c
index b4e7783cc75e..57db589906db 100644
--- a/sound/soc/sof/intel/hda-dai-ops.c
+++ b/sound/soc/sof/intel/hda-dai-ops.c
@@ -155,159 +155,12 @@ static void hda_reset_hext_stream(struct snd_sof_dev *sdev, struct hdac_ext_stre
 	snd_hdac_ext_stream_reset(hext_stream);
 }
 
-static int hda_ipc4_pre_trigger(struct snd_sof_dev *sdev, struct snd_soc_dai *cpu_dai,
-				struct snd_pcm_substream *substream, int cmd)
-{
-	struct snd_sof_widget *pipe_widget;
-	struct sof_ipc4_pipeline *pipeline;
-	struct snd_sof_widget *swidget;
-	struct snd_soc_dapm_widget *w;
-	int ret;
-
-	w = snd_soc_dai_get_widget(cpu_dai, substream->stream);
-	swidget = w->dobj.private;
-	pipe_widget = swidget->spipe->pipe_widget;
-	pipeline = pipe_widget->private;
-
-	switch (cmd) {
-	case SNDRV_PCM_TRIGGER_START:
-	case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:
-		break;
-	case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
-	case SNDRV_PCM_TRIGGER_SUSPEND:
-	case SNDRV_PCM_TRIGGER_STOP:
-		ret = sof_ipc4_set_pipeline_state(sdev, pipe_widget->instance_id,
-						  SOF_IPC4_PIPE_PAUSED);
-		if (ret < 0)
-			return ret;
-
-		pipeline->state = SOF_IPC4_PIPE_PAUSED;
-		break;
-	default:
-		dev_err(sdev->dev, "unknown trigger command %d\n", cmd);
-		return -EINVAL;
-	}
-
-	return 0;
-}
-
-static int hda_trigger(struct snd_sof_dev *sdev, struct snd_soc_dai *cpu_dai,
-		       struct snd_pcm_substream *substream, int cmd)
-{
-	struct hdac_ext_stream *hext_stream = snd_soc_dai_get_dma_data(cpu_dai, substream);
-
-	switch (cmd) {
-	case SNDRV_PCM_TRIGGER_START:
-	case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:
-		snd_hdac_ext_stream_start(hext_stream);
-		break;
-	case SNDRV_PCM_TRIGGER_SUSPEND:
-	case SNDRV_PCM_TRIGGER_STOP:
-	case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
-		snd_hdac_ext_stream_clear(hext_stream);
-		break;
-	default:
-		dev_err(sdev->dev, "unknown trigger command %d\n", cmd);
-		return -EINVAL;
-	}
-
-	return 0;
-}
-
-static int hda_ipc4_post_trigger(struct snd_sof_dev *sdev, struct snd_soc_dai *cpu_dai,
-				 struct snd_pcm_substream *substream, int cmd)
-{
-	struct snd_sof_widget *pipe_widget;
-	struct sof_ipc4_pipeline *pipeline;
-	struct snd_sof_widget *swidget;
-	struct snd_soc_dapm_widget *w;
-	int ret;
-
-	w = snd_soc_dai_get_widget(cpu_dai, substream->stream);
-	swidget = w->dobj.private;
-	pipe_widget = swidget->spipe->pipe_widget;
-	pipeline = pipe_widget->private;
-
-	switch (cmd) {
-	case SNDRV_PCM_TRIGGER_START:
-	case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:
-		if (pipeline->state != SOF_IPC4_PIPE_PAUSED) {
-			ret = sof_ipc4_set_pipeline_state(sdev, pipe_widget->instance_id,
-							  SOF_IPC4_PIPE_PAUSED);
-			if (ret < 0)
-				return ret;
-			pipeline->state = SOF_IPC4_PIPE_PAUSED;
-		}
-
-		ret = sof_ipc4_set_pipeline_state(sdev, pipe_widget->instance_id,
-						  SOF_IPC4_PIPE_RUNNING);
-		if (ret < 0)
-			return ret;
-		pipeline->state = SOF_IPC4_PIPE_RUNNING;
-		break;
-	case SNDRV_PCM_TRIGGER_SUSPEND:
-	case SNDRV_PCM_TRIGGER_STOP:
-	{
-		ret = sof_ipc4_set_pipeline_state(sdev, pipe_widget->instance_id,
-						  SOF_IPC4_PIPE_RESET);
-		if (ret < 0)
-			return ret;
-
-		pipeline->state = SOF_IPC4_PIPE_RESET;
-		break;
-	}
-	case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
-		break;
-	default:
-		dev_err(sdev->dev, "unknown trigger command %d\n", cmd);
-		return -EINVAL;
-	}
-
-	return 0;
-}
-
-static const struct hda_dai_widget_dma_ops hda_ipc4_dma_ops = {
-	.get_hext_stream = hda_get_hext_stream,
-	.assign_hext_stream = hda_assign_hext_stream,
-	.release_hext_stream = hda_release_hext_stream,
-	.setup_hext_stream = hda_setup_hext_stream,
-	.reset_hext_stream = hda_reset_hext_stream,
-	.pre_trigger = hda_ipc4_pre_trigger,
-	.trigger = hda_trigger,
-	.post_trigger = hda_ipc4_post_trigger
-};
-
-static int hda_ipc3_post_trigger(struct snd_sof_dev *sdev, struct snd_soc_dai *cpu_dai,
-				 struct snd_pcm_substream *substream, int cmd)
-{
-	struct snd_soc_dapm_widget *w = snd_soc_dai_get_widget(cpu_dai, substream->stream);
-
-	switch (cmd) {
-	case SNDRV_PCM_TRIGGER_SUSPEND:
-	case SNDRV_PCM_TRIGGER_STOP:
-	{
-		struct snd_sof_dai_config_data data = { 0 };
-
-		data.dai_data = DMA_CHAN_INVALID;
-		return hda_dai_config(w, SOF_DAI_CONFIG_FLAGS_HW_FREE, &data);
-	}
-	case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
-		return hda_dai_config(w, SOF_DAI_CONFIG_FLAGS_PAUSE, NULL);
-	default:
-		break;
-	}
-
-	return 0;
-}
-
-static const struct hda_dai_widget_dma_ops hda_ipc3_dma_ops = {
+static const struct hda_dai_widget_dma_ops hda_dma_ops = {
 	.get_hext_stream = hda_get_hext_stream,
 	.assign_hext_stream = hda_assign_hext_stream,
 	.release_hext_stream = hda_release_hext_stream,
 	.setup_hext_stream = hda_setup_hext_stream,
 	.reset_hext_stream = hda_reset_hext_stream,
-	.trigger = hda_trigger,
-	.post_trigger = hda_ipc3_post_trigger,
 };
 
 #endif
diff --git a/sound/soc/sof/intel/hda-dai.c b/sound/soc/sof/intel/hda-dai.c
index 879705e13986..01f72a4eda47 100644
--- a/sound/soc/sof/intel/hda-dai.c
+++ b/sound/soc/sof/intel/hda-dai.c
@@ -153,7 +153,8 @@ static int hda_link_dma_hw_params(struct snd_pcm_substream *substream,
 	else
 		link_bps = codec_dai->driver->capture.sig_bits;
 
-	snd_hdac_ext_stream_reset(hext_stream);
+	if (ops->reset_hext_stream)
+		ops->reset_hext_stream(sdev, hext_stream);
 
 	format_val = snd_hdac_calc_stream_format(params_rate(params), params_channels(params),
 						 params_format(params), link_bps, 0);
@@ -161,7 +162,8 @@ static int hda_link_dma_hw_params(struct snd_pcm_substream *substream,
 	dev_dbg(bus->dev, "format_val=%d, rate=%d, ch=%d, format=%d\n",
 		format_val, params_rate(params), params_channels(params), params_format(params));
 
-	snd_hdac_ext_stream_setup(hext_stream, format_val);
+	if (ops->setup_hext_stream)
+		ops->setup_hext_stream(sdev, hext_stream, format_val);
 
 	hext_stream->link_prepared = 1;
 
-- 
2.25.1

