From 08c788173799cfe63b619a6927f5b89aee06ecff Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Thu, 6 Jul 2023 15:03:02 +0800
Subject: [PATCH 0051/2351] Revert "drm/i915/pxp: On MTL, KCR enabling doesn't
 wait on tee component"

This reverts commit 5bcf10f95e560d069ade2c0b9ac3ae0153779435.
---
 drivers/gpu/drm/i915/pxp/intel_pxp.c    | 19 ++++---------------
 drivers/gpu/drm/i915/pxp/intel_pxp_pm.c |  3 +--
 2 files changed, 5 insertions(+), 17 deletions(-)

diff --git a/drivers/gpu/drm/i915/pxp/intel_pxp.c b/drivers/gpu/drm/i915/pxp/intel_pxp.c
index 6052756352e60..2f54eb3201a15 100644
--- a/drivers/gpu/drm/i915/pxp/intel_pxp.c
+++ b/drivers/gpu/drm/i915/pxp/intel_pxp.c
@@ -119,7 +119,6 @@ static void destroy_vcs_context(struct intel_pxp *pxp)
 static void pxp_init_full(struct intel_pxp *pxp)
 {
 	struct intel_gt *gt = pxp->ctrl_gt;
-	intel_wakeref_t wakeref;
 	int ret;
 
 	/*
@@ -141,15 +140,10 @@ static void pxp_init_full(struct intel_pxp *pxp)
 	if (ret)
 		return;
 
-	if (HAS_ENGINE(pxp->ctrl_gt, GSC0)) {
+	if (HAS_ENGINE(pxp->ctrl_gt, GSC0))
 		ret = intel_pxp_gsccs_init(pxp);
-		if (!ret) {
-			with_intel_runtime_pm(&pxp->ctrl_gt->i915->runtime_pm, wakeref)
-				intel_pxp_init_hw(pxp);
-		}
-	} else {
+	else
 		ret = intel_pxp_tee_component_init(pxp);
-	}
 	if (ret)
 		goto out_context;
 
@@ -243,20 +237,15 @@ int intel_pxp_init(struct drm_i915_private *i915)
 
 void intel_pxp_fini(struct drm_i915_private *i915)
 {
-	intel_wakeref_t wakeref;
-
 	if (!i915->pxp)
 		return;
 
 	i915->pxp->arb_is_valid = false;
 
-	if (HAS_ENGINE(i915->pxp->ctrl_gt, GSC0)) {
-		with_intel_runtime_pm(&i915->pxp->ctrl_gt->i915->runtime_pm, wakeref)
-			intel_pxp_fini_hw(i915->pxp);
+	if (HAS_ENGINE(i915->pxp->ctrl_gt, GSC0))
 		intel_pxp_gsccs_fini(i915->pxp);
-	} else {
+	else
 		intel_pxp_tee_component_fini(i915->pxp);
-	}
 
 	destroy_vcs_context(i915->pxp);
 
diff --git a/drivers/gpu/drm/i915/pxp/intel_pxp_pm.c b/drivers/gpu/drm/i915/pxp/intel_pxp_pm.c
index 1a04067f61fc7..4f836b3174240 100644
--- a/drivers/gpu/drm/i915/pxp/intel_pxp_pm.c
+++ b/drivers/gpu/drm/i915/pxp/intel_pxp_pm.c
@@ -43,9 +43,8 @@ void intel_pxp_resume_complete(struct intel_pxp *pxp)
 	 * The PXP component gets automatically unbound when we go into S3 and
 	 * re-bound after we come out, so in that scenario we can defer the
 	 * hw init to the bind call.
-	 * NOTE: GSC-CS backend doesn't rely on components.
 	 */
-	if (!HAS_ENGINE(pxp->ctrl_gt, GSC0) && !pxp->pxp_component)
+	if (!pxp->pxp_component)
 		return;
 
 	intel_pxp_init_hw(pxp);
-- 
2.25.1

