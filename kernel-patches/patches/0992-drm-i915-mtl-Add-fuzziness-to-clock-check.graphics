From 4a29e16e1bbc5cbeca8c660089e6c9e291de7e2e Mon Sep 17 00:00:00 2001
From: Mika Kahola <mika.kahola@intel.com>
Date: Mon, 19 Dec 2022 14:54:31 +0200
Subject: [PATCH 0992/1096] drm/i915/mtl: Add fuzziness to clock check

The pipe config check assumes that hw clocks match exactly with sw state. This currently
causes the following error i.e. kernel taint

[   81.936835] ------------[ cut here ]------------
[   81.936841] pipe state doesn't match!
[   81.936897] WARNING: CPU: 14 PID: 518 at drivers/gpu/drm/i915/display/intel_modeset_verify.c:220 intel_modeset_verify_crtc+0x3e3/0x410 [i915]
[   81.937350] Modules linked in: x86_pkg_temp_thermal coretemp crct10dif_pclmul crc32_pclmul ax88179_178a i915 usbnet snd_hda_intel snd_intel_dspcfg mii prime_numbers snd_hda_codec ttm ghash_clmulni_intel snd_hwdep snd_hda_core drm_buddy kvm_intel drm_display_helper snd_pcm i2c_i801 drm_kms_helper i2c_smbus syscopyarea sysfillrect sysimgblt fb_sys_fops wmi_bmof video wmi fuse ip_tables x_tables
[   81.937520] CPU: 14 PID: 518 Comm: kworker/u32:4 Tainted: G        W          6.1.0-DII-mika+ #35
[   81.937531] Hardware name: Intel Corporation Meteor Lake Client Platform/MTL-P DDR5 SODIMM SBS RVP, BIOS MTLPFWI1.R00.2384.D00.2209151233 09/15/2022
[   81.937539] Workqueue: events_unbound async_run_entry_fn
[   81.937560] RIP: 0010:intel_modeset_verify_crtc+0x3e3/0x410 [i915]
[   81.938058] Code: 4c 8b 04 24 e9 d9 fd ff ff 48 c7 c7 c0 21 9c a0 e8 de 29 42 e1 0f 0b 0f b6 44 24 17 4c 8b 04 24 e9 88 fd ff ff e8 c9 29 42 e1 <0f> 0b e9 81 fe ff ff e8 bd 29 42 e1 0f 0b 0f b6 85 50 01 00 00 e9
[   81.938066] RSP: 0018:ffffc900014bb8f0 EFLAGS: 00010286
[   81.938078] RAX: 0000000000000000 RBX: ffff888111e38840 RCX: 0000000000000000
[   81.938085] RDX: 0000000000000001 RSI: ffffffff82585b64 RDI: 00000000ffffffff
[   81.938091] RBP: ffff88811ace2000 R08: 0000000000000001 R09: 0000000000000001
[   81.938097] R10: 0000000000000001 R11: 0000000000000001 R12: ffff88811bff2000
[   81.938103] R13: ffff88811406c000 R14: ffff888111e38848 R15: ffff888111e38000
[   81.938110] FS:  0000000000000000(0000) GS:ffff88849f500000(0000) knlGS:0000000000000000
[   81.938117] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[   81.938124] CR2: 00007f1187a6d020 CR3: 0000000005812003 CR4: 0000000000770ee0
[   81.938131] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[   81.938137] DR3: 0000000000000000 DR6: 00000000ffff07f0 DR7: 0000000000000400
[   81.938143] PKRU: 55555554
[   81.938148] Call Trace:
[   81.938155]  <TASK>
[   81.938187]  intel_atomic_commit_tail+0x997/0xf90 [i915]
[   81.938766]  ? intel_atomic_commit+0x36f/0x3f0 [i915]
[   81.939234]  ? intel_atomic_commit+0x328/0x3f0 [i915]
[   81.939723]  intel_atomic_commit+0x36f/0x3f0 [i915]
[   81.940191]  drm_atomic_commit+0x8e/0xc0
[   81.940206]  ? drm_plane_get_damage_clips.cold+0x1c/0x1c
[   81.940232]  drm_client_modeset_commit_atomic+0x226/0x270
[   81.940309]  drm_client_modeset_commit_locked+0x56/0x190
[   81.940334]  drm_client_modeset_commit+0x1f/0x40
[   81.940353]  drm_fb_helper_set_par+0xa6/0xd0 [drm_kms_helper]
[   81.940403]  intel_fbdev_set_par+0x11/0x60 [i915]
[   81.940958]  ? con_is_visible+0x26/0x50
[   81.940975]  fbcon_init+0x2d2/0x630
[   81.941007]  visual_init+0xba/0x120
[   81.941026]  do_bind_con_driver.isra.0+0x1ce/0x2f0
[   81.941061]  do_take_over_console+0x111/0x190
[   81.941088]  do_fbcon_takeover+0x57/0xc0
[   81.941098]  fbcon_fb_registered+0x137/0x140
[   81.941114]  register_framebuffer+0x20e/0x340
[   81.941158]  __drm_fb_helper_initial_config_and_unlock+0x39c/0x570 [drm_kms_helper]
[   81.941228]  intel_fbdev_initial_config+0xf/0x30 [i915]
[   81.941719]  async_run_entry_fn+0x28/0x130
[   81.941739]  process_one_work+0x263/0x580
[   81.941779]  ? process_one_work+0x580/0x580
[   81.941802]  worker_thread+0x4d/0x3b0
[   81.941825]  ? process_one_work+0x580/0x580
[   81.941840]  kthread+0xeb/0x120
[   81.941851]  ? kthread_complete_and_exit+0x20/0x20
[   81.941873]  ret_from_fork+0x1f/0x30
[   81.941931]  </TASK>
[   81.941937] irq event stamp: 47469
[   81.941943] hardirqs last  enabled at (47475): [<ffffffff811ad3e4>] vprintk_emit+0x354/0x380
[   81.941956] hardirqs last disabled at (47480): [<ffffffff811ad393>] vprintk_emit+0x303/0x380
[   81.941965] softirqs last  enabled at (47344): [<ffffffff81130d85>] __irq_exit_rcu+0xc5/0x120
[   81.941979] softirqs last disabled at (47339): [<ffffffff81130d85>] __irq_exit_rcu+0xc5/0x120
[   81.941990] ---[ end trace 0000000000000000 ]---

The patch proposes a fix by adding fuzziness to the clock check and if fuzzy clock is needed
the sw state is updated according to its corresponding hw state.

This hack buys us time to look further into pll tables that are used to calculate clock rates
and in the mean time continue with type-C validation efforts. There is an open and ongoing
discussion on BSpec issue 29905 to clarify these pll values that should be used.

The patch is not meant to be upstreamed but to kickstart CI validation for type-C.

v2: Apply hack only for MTL (Imre)

Signed-off-by: Mika Kahola <mika.kahola@intel.com>
---
 .../drm/i915/display/intel_modeset_verify.c   | 28 +++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/drivers/gpu/drm/i915/display/intel_modeset_verify.c b/drivers/gpu/drm/i915/display/intel_modeset_verify.c
index ec504470c2f0..2efd48a33293 100644
--- a/drivers/gpu/drm/i915/display/intel_modeset_verify.c
+++ b/drivers/gpu/drm/i915/display/intel_modeset_verify.c
@@ -215,6 +215,34 @@ verify_crtc_state(struct intel_crtc *crtc,
 
 	intel_pipe_config_sanity_check(dev_priv, pipe_config);
 
+	/* FIXME: add some fuzziness to clock rates until we extract
+	 * the root cause for this. The sw state of the clock is updated
+	 * to match with hw state.
+	 */
+	if (IS_METEORLAKE(dev_priv) &&
+	    intel_fuzzy_clock_check(new_crtc_state->port_clock, pipe_config->port_clock)) {
+		drm_dbg_kms(&dev_priv->drm, "fixing port clock to %d\n", new_crtc_state->port_clock);
+		new_crtc_state->port_clock = pipe_config->port_clock;
+	}
+
+	if (IS_METEORLAKE(dev_priv) &&
+	    intel_fuzzy_clock_check(new_crtc_state->pixel_rate, pipe_config->pixel_rate)) {
+		drm_dbg_kms(&dev_priv->drm, "fixing pixel rate to %d\n", pipe_config->pixel_rate);
+		new_crtc_state->pixel_rate = pipe_config->pixel_rate;
+	}
+
+	if (IS_METEORLAKE(dev_priv) &&
+	    intel_fuzzy_clock_check(new_crtc_state->hw.pipe_mode.crtc_clock, pipe_config->hw.pipe_mode.crtc_clock)) {
+		drm_dbg_kms(&dev_priv->drm, "fixing crtc clock to %d\n", new_crtc_state->hw.pipe_mode.crtc_clock);
+		new_crtc_state->hw.pipe_mode.crtc_clock = pipe_config->hw.pipe_mode.crtc_clock;
+	}
+
+	if (IS_METEORLAKE(dev_priv) &&
+	    intel_fuzzy_clock_check(new_crtc_state->hw.adjusted_mode.crtc_clock, pipe_config->hw.adjusted_mode.crtc_clock)) {
+		drm_dbg_kms(&dev_priv->drm, "fixing adjusted mode crtc clock to %d\n", new_crtc_state->hw.adjusted_mode.crtc_clock);
+		new_crtc_state->hw.adjusted_mode.crtc_clock = pipe_config->hw.adjusted_mode.crtc_clock;
+	}
+
 	if (!intel_pipe_config_compare(new_crtc_state,
 				       pipe_config, false)) {
 		I915_STATE_WARN(1, "pipe state doesn't match!\n");
-- 
2.25.1

