From 62570701fd6d8df994a20db99e34eaff36b10ded Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Wed, 24 Nov 2021 13:16:41 +0800
Subject: [PATCH 055/888] Revert "drm/i915/guc: Move guc_blocked fence to
 struct guc_state"

This reverts commit 129d277f85f9f1a55c40140a57b11da872929d8f.
---
 drivers/gpu/drm/i915/gt/intel_context.c        |  5 ++---
 drivers/gpu/drm/i915/gt/intel_context_types.h  |  5 +++--
 .../gpu/drm/i915/gt/uc/intel_guc_submission.c  | 18 +++++++++---------
 3 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/intel_context.c b/drivers/gpu/drm/i915/gt/intel_context.c
index 0e48939ec85f..745e84c72c90 100644
--- a/drivers/gpu/drm/i915/gt/intel_context.c
+++ b/drivers/gpu/drm/i915/gt/intel_context.c
@@ -405,9 +405,8 @@ intel_context_init(struct intel_context *ce, struct intel_engine_cs *engine)
 	 * Initialize fence to be complete as this is expected to be complete
 	 * unless there is a pending schedule disable outstanding.
 	 */
-	i915_sw_fence_init(&ce->guc_state.blocked_fence,
-			   sw_fence_dummy_notify);
-	i915_sw_fence_commit(&ce->guc_state.blocked_fence);
+	i915_sw_fence_init(&ce->guc_blocked, sw_fence_dummy_notify);
+	i915_sw_fence_commit(&ce->guc_blocked);
 
 	i915_active_init(&ce->active,
 			 __intel_context_active, __intel_context_retire, 0);
diff --git a/drivers/gpu/drm/i915/gt/intel_context_types.h b/drivers/gpu/drm/i915/gt/intel_context_types.h
index c06171ee8792..3a73f3117873 100644
--- a/drivers/gpu/drm/i915/gt/intel_context_types.h
+++ b/drivers/gpu/drm/i915/gt/intel_context_types.h
@@ -167,8 +167,6 @@ struct intel_context {
 		 * fence related to GuC submission
 		 */
 		struct list_head fences;
-		/* GuC context blocked fence */
-		struct i915_sw_fence blocked_fence;
 	} guc_state;
 
 	struct {
@@ -192,6 +190,9 @@ struct intel_context {
 	 */
 	struct list_head guc_id_link;
 
+	/* GuC context blocked fence */
+	struct i915_sw_fence guc_blocked;
+
 	/*
 	 * GuC priority management
 	 */
diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c b/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
index 053f4485d6e9..deb2e821e441 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
@@ -1490,24 +1490,24 @@ static void guc_blocked_fence_complete(struct intel_context *ce)
 {
 	lockdep_assert_held(&ce->guc_state.lock);
 
-	if (!i915_sw_fence_done(&ce->guc_state.blocked_fence))
-		i915_sw_fence_complete(&ce->guc_state.blocked_fence);
+	if (!i915_sw_fence_done(&ce->guc_blocked))
+		i915_sw_fence_complete(&ce->guc_blocked);
 }
 
 static void guc_blocked_fence_reinit(struct intel_context *ce)
 {
 	lockdep_assert_held(&ce->guc_state.lock);
-	GEM_BUG_ON(!i915_sw_fence_done(&ce->guc_state.blocked_fence));
+	GEM_BUG_ON(!i915_sw_fence_done(&ce->guc_blocked));
 
 	/*
 	 * This fence is always complete unless a pending schedule disable is
 	 * outstanding. We arm the fence here and complete it when we receive
 	 * the pending schedule disable complete message.
 	 */
-	i915_sw_fence_fini(&ce->guc_state.blocked_fence);
-	i915_sw_fence_reinit(&ce->guc_state.blocked_fence);
-	i915_sw_fence_await(&ce->guc_state.blocked_fence);
-	i915_sw_fence_commit(&ce->guc_state.blocked_fence);
+	i915_sw_fence_fini(&ce->guc_blocked);
+	i915_sw_fence_reinit(&ce->guc_blocked);
+	i915_sw_fence_await(&ce->guc_blocked);
+	i915_sw_fence_commit(&ce->guc_blocked);
 }
 
 static u16 prep_context_pending_disable(struct intel_context *ce)
@@ -1547,7 +1547,7 @@ static struct i915_sw_fence *guc_context_block(struct intel_context *ce)
 		if (enabled)
 			clr_context_enabled(ce);
 		spin_unlock_irqrestore(&ce->guc_state.lock, flags);
-		return &ce->guc_state.blocked_fence;
+		return &ce->guc_blocked;
 	}
 
 	/*
@@ -1563,7 +1563,7 @@ static struct i915_sw_fence *guc_context_block(struct intel_context *ce)
 	with_intel_runtime_pm(runtime_pm, wakeref)
 		__guc_context_sched_disable(guc, ce, guc_id);
 
-	return &ce->guc_state.blocked_fence;
+	return &ce->guc_blocked;
 }
 
 static void guc_context_unblock(struct intel_context *ce)
-- 
2.25.1

