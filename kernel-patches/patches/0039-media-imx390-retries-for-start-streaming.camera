From da01f703a86a83e33db2badcc8a9bb55424988ca Mon Sep 17 00:00:00 2001
From: Ng Khai Wen <khai.wen.ng@intel.com>
Date: Thu, 1 Jul 2021 15:35:03 +0800
Subject: [PATCH 39/48] media: imx390: retries for start streaming

Change Description:
i2c write to IMX390_REG_STANDBY no response randomly,
pipeline fails to start.
retries 1000 times, wait for i2c recover, pipeline
started with extra delay, instead of fails.

Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: Ng Khai Wen <khai.wen.ng@intel.com>
---
 drivers/media/i2c/imx390.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/media/i2c/imx390.c b/drivers/media/i2c/imx390.c
index 4f6b664461677..23821bd7ee860 100644
--- a/drivers/media/i2c/imx390.c
+++ b/drivers/media/i2c/imx390.c
@@ -624,7 +624,7 @@ static void imx390_update_pad_format(const struct imx390_mode *mode,
 
 static int imx390_start_streaming(struct imx390 *imx390)
 {
-	int ret;
+	int retries, ret;
 	struct i2c_client *client = v4l2_get_subdevdata(&imx390->sd);
 	const struct imx390_reg_list *reg_list;
 
@@ -639,8 +639,20 @@ static int imx390_start_streaming(struct imx390 *imx390)
 	} else
 		dev_dbg(&client->dev, "same mode, skip write reg list");
 
-	ret = imx390_write_reg(imx390, IMX390_REG_STANDBY,
-			       IMX390_REG_VALUE_08BIT, 0);
+	/*
+	 * WA: i2c write to IMX390_REG_STANDBY no response randomly,
+	 * pipeline fails to start.
+	 * retries 1000 times, wait for i2c recover, pipeline started
+	 * with extra delay, instead of fails.
+	 */
+	retries = 1000;
+	do {
+		ret = imx390_write_reg(imx390, IMX390_REG_STANDBY,
+			IMX390_REG_VALUE_08BIT, 0);
+		if (ret)
+			dev_err(&client->dev, "retry to write STANDBY");
+	} while (!ret || !retries--);
+
 	if (ret) {
 		dev_err(&client->dev, "failed to set stream");
 		return ret;
-- 
2.25.1

