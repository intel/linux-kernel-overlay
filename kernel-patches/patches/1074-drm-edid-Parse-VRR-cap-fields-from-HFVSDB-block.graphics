From c6fd5fc67d8c14a0b4457fb35450b48894403095 Mon Sep 17 00:00:00 2001
From: Ankit Nautiyal <ankit.k.nautiyal@intel.com>
Date: Tue, 24 Jan 2023 20:03:50 +0530
Subject: [PATCH 1074/1096] drm/edid: Parse VRR cap fields from HFVSDB block

This patch parses HFVSDB fields for VRR capabilities of an
HDMI2.1 sink and stores the VRR caps in a new structure in
drm_hdmi_info.

Signed-off-by: Ankit Nautiyal <ankit.k.nautiyal@intel.com>
Reviewed-by: Manasi Navare <manasi.d.navare@intel.com>
---
 drivers/gpu/drm/drm_edid.c  | 28 +++++++++++++++++++++++++---
 include/drm/drm_connector.h | 26 ++++++++++++++++++++++++++
 2 files changed, 51 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/drm_edid.c b/drivers/gpu/drm/drm_edid.c
index bbc63ae39c35..5bea753fd560 100644
--- a/drivers/gpu/drm/drm_edid.c
+++ b/drivers/gpu/drm/drm_edid.c
@@ -5953,6 +5953,21 @@ static void drm_parse_ycbcr420_deep_color_info(struct drm_connector *connector,
 	hdmi->y420_dc_modes = dc_mask;
 }
 
+static void drm_parse_vrr_info(struct drm_hdmi_vrr_cap *hdmi_vrr,
+			       const u8 *hf_scds)
+{
+	if (hf_scds[8] & DRM_EDID_CNMVRR)
+		hdmi_vrr->cnm_vrr = true;
+	if (hf_scds[8] & DRM_EDID_CINEMA_VRR)
+		hdmi_vrr->cinema_vrr = true;
+	if (hf_scds[8] & DRM_EDID_MDELTA)
+		hdmi_vrr->m_delta = true;
+
+	hdmi_vrr->vrr_min = hf_scds[9] & DRM_EDID_VRR_MIN_MASK;
+	hdmi_vrr->vrr_max = (hf_scds[9] & DRM_EDID_VRR_MAX_UPPER_MASK) << 2;
+	hdmi_vrr->vrr_max |= hf_scds[10] & DRM_EDID_VRR_MAX_LOWER_MASK;
+}
+
 static void drm_parse_dsc_info(struct drm_hdmi_dsc_cap *hdmi_dsc,
 			       const u8 *hf_scds)
 {
@@ -6031,9 +6046,11 @@ static void drm_parse_hdmi_forum_scds(struct drm_connector *connector,
 	struct drm_display_info *info = &connector->display_info;
 	struct drm_hdmi_info *hdmi = &info->hdmi;
 	struct drm_hdmi_dsc_cap *hdmi_dsc = &hdmi->dsc_cap;
+	struct drm_hdmi_vrr_cap *hdmi_vrr = &hdmi->vrr_cap;
 	int max_tmds_clock = 0;
 	u8 max_frl_rate = 0;
 	bool dsc_support = false;
+	bool vrr_support = false;
 
 	info->has_hdmi_infoframe = true;
 
@@ -6079,15 +6096,20 @@ static void drm_parse_hdmi_forum_scds(struct drm_connector *connector,
 
 	drm_parse_ycbcr420_deep_color_info(connector, hf_scds);
 
+	if (cea_db_payload_len(hf_scds) >= 8 && hf_scds[8]) {
+		drm_parse_vrr_info(hdmi_vrr, hf_scds);
+		vrr_support = true;
+	}
+
 	if (cea_db_payload_len(hf_scds) >= 11 && hf_scds[11]) {
 		drm_parse_dsc_info(hdmi_dsc, hf_scds);
 		dsc_support = true;
 	}
 
 	drm_dbg_kms(connector->dev,
-		    "[CONNECTOR:%d:%s] HF-VSDB: max TMDS clock: %d KHz, HDMI 2.1 support: %s, DSC 1.2 support: %s\n",
-		    connector->base.id, connector->name,
-		    max_tmds_clock, str_yes_no(max_frl_rate), str_yes_no(dsc_support));
+		"HF-VSDB: max TMDS clock: %d KHz, HDMI 2.1 support: %s, VRR support: %s, DSC 1.2 support: %s\n",
+		max_tmds_clock, str_yes_no(max_frl_rate), str_yes_no(vrr_support),
+		str_yes_no(dsc_support));
 }
 
 static void drm_parse_hdmi_deep_color_info(struct drm_connector *connector,
diff --git a/include/drm/drm_connector.h b/include/drm/drm_connector.h
index 7b5048516185..f91b1378afa3 100644
--- a/include/drm/drm_connector.h
+++ b/include/drm/drm_connector.h
@@ -278,6 +278,29 @@ struct drm_hdmi_dsc_cap {
 	u8 total_chunk_kbytes;
 };
 
+/**
+ * struct drm_hdmi_vrr_cap - VRR capabilities of HDMI sink
+ * Describes the VRR support provided by HDMI 2.1 sink.
+ * The information is fetched fom additional HFVSDB blocks defined
+ * for HDMI 2.1.
+ */
+struct drm_hdmi_vrr_cap {
+	/** @cnm_vrr: sink supports negative Mvrr values*/
+	bool cnm_vrr;
+
+	/** @cinema_vrr: sink supports fractional and integer media rates < VRRmin*/
+	bool cinema_vrr;
+
+	/** @m_delta: sink can anticipate and compensate for frame-to-frame variation in Mvrr */
+	bool m_delta;
+
+	/** @vrr_min: VRRmin - lowest framerate in Hz that sink can support in VRR */
+	u8 vrr_min;
+
+	/** @vrr_max: VRRmax - highest framerate in Hz that sink can support in VRR */
+	u16 vrr_max;
+};
+
 /**
  * struct drm_hdmi_info - runtime information about the connected HDMI sink
  *
@@ -315,6 +338,9 @@ struct drm_hdmi_info {
 
 	/** @dsc_cap: DSC capabilities of the sink */
 	struct drm_hdmi_dsc_cap dsc_cap;
+
+	/** @vrr_cap: VRR capabilities of the sink */
+	struct drm_hdmi_vrr_cap vrr_cap;
 };
 
 /**
-- 
2.25.1

