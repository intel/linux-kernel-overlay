From fbbac0fe57b2d7becfcf53e2c9eec3421e207014 Mon Sep 17 00:00:00 2001
From: "Tan, Raymond" <raymond.tan@intel.com>
Date: Mon, 13 Jan 2020 12:46:33 +0800
Subject: [PATCH 25/31] selftests: ptp: Added COMPV GPIO Input Mode for TGPIO

Added the option to configure COMPV GPIO Input mode for TGPIO, which
utilizes the existing rsv[0] member of ptp_extts_request structure to
provide the COMPV through PTP_EXTTS_REQUEST ioctl.

Signed-off-by: Tan, Raymond <raymond.tan@intel.com>
---
 tools/testing/selftests/ptp/testptp.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/tools/testing/selftests/ptp/testptp.c b/tools/testing/selftests/ptp/testptp.c
index 3317bd28d0de..1ed4a6b5d6d3 100644
--- a/tools/testing/selftests/ptp/testptp.c
+++ b/tools/testing/selftests/ptp/testptp.c
@@ -181,6 +181,8 @@ static void usage(char *progname)
 		"            0 - none\n"
 		"            1 - external time stamp\n"
 		"            2 - periodic output\n"
+		" -o val     enable Input Event Countrol mode for TGPIO pins\n"
+		"            event will only be reported after 'val' matching internally\n"
 		" -O         enable single shot output for TGPIO pins\n"
 		"            this option is ignored for period val greater than 0\n"
 		" -p val     enable output with a period of 'val' nanoseconds\n"
@@ -227,6 +229,7 @@ int main(int argc, char *argv[])
 	int list_pins = 0;
 	int pct_offset = 0;
 	int n_samples = 0;
+	int event_count = 0;
 	int single_shot = -1;
 	int new_period = -1;
 	int pin_index = -1, pin_func;
@@ -243,7 +246,7 @@ int main(int argc, char *argv[])
 
 	progname = strrchr(argv[0], '/');
 	progname = progname ? 1+progname : argv[0];
-	while (EOF != (c = getopt(argc, argv, "a:cd:e:f:EGghH:i:k:lL:Op:P:sSt:T:z"))) {
+	while (EOF != (c = getopt(argc, argv, "a:cd:e:f:EGghH:i:k:lL:o:Op:P:sSt:T:z"))) {
 		switch (c) {
 		case 'a':
 			new_period = atoi(optarg);
@@ -288,6 +291,9 @@ int main(int argc, char *argv[])
 				return -1;
 			}
 			break;
+		case 'o':
+			event_count = atoi(optarg);
+			break;
 		case 'O':
 			single_shot = 1;
 			break;
@@ -476,6 +482,13 @@ int main(int argc, char *argv[])
 		memset(&extts_request, 0, sizeof(extts_request));
 		extts_request.index = index;
 		extts_request.flags = PTP_ENABLE_FEATURE;
+
+		if (event_count) {
+			extts_request.flags |= PTP_EVENT_COUNTER_MODE;
+			extts_request.rsv[0] = event_count;
+			/* Input Event Control only supports 1 event for now */
+			extts = 1;
+		}
 		if (ioctl(fd, PTP_EXTTS_REQUEST, &extts_request)) {
 			perror("PTP_EXTTS_REQUEST");
 			extts = 0;
-- 
2.25.1

