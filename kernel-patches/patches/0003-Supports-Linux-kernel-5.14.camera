From ef4d7198fdba8966b9171eb9a3356fe8d952573d Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Tue, 26 Oct 2021 09:38:03 +0800
Subject: [PATCH 3/8] Supports Linux kernel 5.14

Change Description:

Use "LINUX_VERSION_CODE < KERNEL_VERSION(5, 14, 0)" preprocessing
condition to seperate different function call before and after
kernel 5.14 changed v4l2_subdev_pad_ops, v4l2_subdev_state and
v4l2_subdev_pad_config.

Signed-off-by: Hao Yao <hao.yao@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 .../media/pci/intel/ipu-isys-csi2-be-soc.c    | 11 ++++--
 drivers/media/pci/intel/ipu-isys-csi2-be.c    | 28 +++++++++-----
 drivers/media/pci/intel/ipu-isys-csi2.c       | 14 +++++--
 drivers/media/pci/intel/ipu-isys-subdev.c     | 38 ++++++++++++-------
 drivers/media/pci/intel/ipu-isys-subdev.h     |  3 +-
 drivers/media/pci/intel/ipu-isys-tpg.c        | 11 ++++--
 drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c  |  6 +--
 drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c  |  6 +--
 8 files changed, 75 insertions(+), 42 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c b/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
index 3db67128e8b4..670c2fc6e6e1 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
+++ b/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
@@ -199,7 +199,9 @@ static void csi2_be_soc_set_ffmt(struct v4l2_subdev *sd,
 				 struct v4l2_subdev_format *fmt)
 {
 	struct v4l2_mbus_framefmt *ffmt =
-		__ipu_isys_get_ffmt(sd, cfg, fmt->pad,
+		__ipu_isys_get_ffmt(sd,
+					cfg,
+					fmt->pad,
 				    fmt->stream,
 				    fmt->which);
 
@@ -212,13 +214,16 @@ static void csi2_be_soc_set_ffmt(struct v4l2_subdev *sd,
 			fmt->format.field = V4L2_FIELD_NONE;
 		*ffmt = fmt->format;
 
-		ipu_isys_subdev_fmt_propagate(sd, cfg, &fmt->format,
+		ipu_isys_subdev_fmt_propagate(sd,
+						  cfg,
+						  &fmt->format,
 					      NULL,
 					      IPU_ISYS_SUBDEV_PROP_TGT_SINK_FMT,
 					      fmt->pad, fmt->which);
 	} else if (sd->entity.pads[fmt->pad].flags & MEDIA_PAD_FL_SOURCE) {
 		struct v4l2_mbus_framefmt *sink_ffmt;
-		struct v4l2_rect *r = __ipu_isys_get_selection(sd, cfg,
+		struct v4l2_rect *r = __ipu_isys_get_selection(sd,
+			cfg,
 			V4L2_SEL_TGT_CROP, fmt->pad, fmt->which);
 		struct ipu_isys_subdev *asd = to_ipu_isys_subdev(sd);
 		unsigned int sink_pad = 0;
diff --git a/drivers/media/pci/intel/ipu-isys-csi2-be.c b/drivers/media/pci/intel/ipu-isys-csi2-be.c
index fac6c4c042b2..908e16ebeae8 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2-be.c
+++ b/drivers/media/pci/intel/ipu-isys-csi2-be.c
@@ -95,7 +95,7 @@ static int get_supported_code_index(u32 code)
 }
 
 static int ipu_isys_csi2_be_set_sel(struct v4l2_subdev *sd,
-				    struct v4l2_subdev_pad_config *cfg,
+					struct v4l2_subdev_pad_config *cfg,
 				    struct v4l2_subdev_selection *sel)
 {
 	struct ipu_isys_subdev *asd = to_ipu_isys_subdev(sd);
@@ -105,7 +105,11 @@ static int ipu_isys_csi2_be_set_sel(struct v4l2_subdev *sd,
 	    pad->flags & MEDIA_PAD_FL_SOURCE &&
 	    asd->valid_tgts[CSI2_BE_PAD_SOURCE].crop) {
 		struct v4l2_mbus_framefmt *ffmt =
-			__ipu_isys_get_ffmt(sd, cfg, sel->pad, 0, sel->which);
+			__ipu_isys_get_ffmt(sd,
+							cfg,
+							sel->pad,
+							0,
+							sel->which);
 		struct v4l2_rect *r = __ipu_isys_get_selection
 		    (sd, cfg, sel->target, CSI2_BE_PAD_SINK, sel->which);
 
@@ -165,25 +169,31 @@ static void csi2_be_set_ffmt(struct v4l2_subdev *sd,
 {
 	struct ipu_isys_csi2 *csi2 = to_ipu_isys_csi2(sd);
 	struct v4l2_mbus_framefmt *ffmt =
-		__ipu_isys_get_ffmt(sd, cfg, fmt->pad, fmt->stream,
-				    fmt->which);
-
+		__ipu_isys_get_ffmt(sd,
+							cfg,
+							fmt->pad,
+							fmt->stream,
+							fmt->which);
 	switch (fmt->pad) {
 	case CSI2_BE_PAD_SINK:
 		if (fmt->format.field != V4L2_FIELD_ALTERNATE)
 			fmt->format.field = V4L2_FIELD_NONE;
 		*ffmt = fmt->format;
-
 		ipu_isys_subdev_fmt_propagate
 		    (sd, cfg, &fmt->format, NULL,
 		     IPU_ISYS_SUBDEV_PROP_TGT_SINK_FMT, fmt->pad, fmt->which);
 		return;
 	case CSI2_BE_PAD_SOURCE: {
 		struct v4l2_mbus_framefmt *sink_ffmt =
-			__ipu_isys_get_ffmt(sd, cfg, CSI2_BE_PAD_SINK,
-					    fmt->stream, fmt->which);
+			__ipu_isys_get_ffmt(sd,
+							cfg,
+							CSI2_BE_PAD_SINK,
+							fmt->stream,
+							fmt->which);
 		struct v4l2_rect *r =
-			__ipu_isys_get_selection(sd, cfg, V4L2_SEL_TGT_CROP,
+			__ipu_isys_get_selection(sd,
+						 cfg,
+						 V4L2_SEL_TGT_CROP,
 						 CSI2_BE_PAD_SOURCE,
 						 fmt->which);
 		struct ipu_isys_subdev *asd = to_ipu_isys_subdev(sd);
diff --git a/drivers/media/pci/intel/ipu-isys-csi2.c b/drivers/media/pci/intel/ipu-isys-csi2.c
index e6c619f7ed10..1d9f764d0d90 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2.c
+++ b/drivers/media/pci/intel/ipu-isys-csi2.c
@@ -561,7 +561,9 @@ static void csi2_set_ffmt(struct v4l2_subdev *sd,
 {
 	enum isys_subdev_prop_tgt tgt = IPU_ISYS_SUBDEV_PROP_TGT_SINK_FMT;
 	struct v4l2_mbus_framefmt *ffmt =
-		__ipu_isys_get_ffmt(sd, cfg, fmt->pad,
+		__ipu_isys_get_ffmt(sd,
+					cfg,
+					fmt->pad,
 				    fmt->stream,
 				    fmt->which);
 
@@ -572,14 +574,18 @@ static void csi2_set_ffmt(struct v4l2_subdev *sd,
 		*ffmt = fmt->format;
 		if (fmt->stream)
 			return;
-		ipu_isys_subdev_fmt_propagate(sd, cfg, &fmt->format, NULL,
-					      tgt, fmt->pad, fmt->which);
+		ipu_isys_subdev_fmt_propagate(sd,
+						cfg,
+						&fmt->format, NULL,
+					    tgt, fmt->pad, fmt->which);
 		return;
 	}
 
 	if (fmt->pad == CSI2_PAD_META) {
 		struct v4l2_mbus_framefmt *ffmt =
-			__ipu_isys_get_ffmt(sd, cfg, fmt->pad,
+			__ipu_isys_get_ffmt(sd,
+						cfg,
+						fmt->pad,
 					    fmt->stream,
 					    fmt->which);
 		struct media_pad *pad = media_entity_remote_pad(
diff --git a/drivers/media/pci/intel/ipu-isys-subdev.c b/drivers/media/pci/intel/ipu-isys-subdev.c
index bfe42ca27449..708f01437cff 100644
--- a/drivers/media/pci/intel/ipu-isys-subdev.c
+++ b/drivers/media/pci/intel/ipu-isys-subdev.c
@@ -134,8 +134,7 @@ u32 ipu_isys_subdev_code_to_uncompressed(u32 sink_code)
 }
 
 struct v4l2_mbus_framefmt *__ipu_isys_get_ffmt(struct v4l2_subdev *sd,
-					       struct v4l2_subdev_pad_config
-					       *cfg,
+					       struct v4l2_subdev_pad_config *cfg,
 					       unsigned int pad,
 					       unsigned int stream,
 					       unsigned int which)
@@ -167,7 +166,7 @@ struct v4l2_rect *__ipu_isys_get_selection(struct v4l2_subdev *sd,
 		case V4L2_SEL_TGT_CROP:
 			return v4l2_subdev_get_try_crop(sd, cfg, pad);
 		case V4L2_SEL_TGT_COMPOSE:
-			return v4l2_subdev_get_try_compose(sd, cfg, pad);
+			return v4l2_subdev_get_try_crop(sd, cfg, pad);
 		}
 	}
 	WARN_ON(1);
@@ -347,7 +346,6 @@ int ipu_isys_subdev_fmt_propagate(struct v4l2_subdev *sd,
 							ffmts[pad]->field,
 				},
 			};
-
 			asd->set_ffmt(sd, cfg, &fmt);
 			goto out_subdev_fmt_propagate;
 		}
@@ -365,14 +363,20 @@ int ipu_isys_subdev_set_ffmt_default(struct v4l2_subdev *sd,
 				     struct v4l2_subdev_format *fmt)
 {
 	struct v4l2_mbus_framefmt *ffmt =
-		__ipu_isys_get_ffmt(sd, cfg, fmt->pad, fmt->stream,
-					   fmt->which);
+		__ipu_isys_get_ffmt(sd,
+							cfg,
+							fmt->pad,
+							fmt->stream,
+							fmt->which);
 
 	/* No propagation for non-zero pads. */
 	if (fmt->pad) {
 		struct v4l2_mbus_framefmt *sink_ffmt =
-			__ipu_isys_get_ffmt(sd, cfg, 0, fmt->stream,
-						   fmt->which);
+			__ipu_isys_get_ffmt(sd,
+								cfg,
+								0,
+								fmt->stream,
+								fmt->which);
 
 		ffmt->width = sink_ffmt->width;
 		ffmt->height = sink_ffmt->height;
@@ -398,8 +402,11 @@ int __ipu_isys_subdev_set_ffmt(struct v4l2_subdev *sd,
 {
 	struct ipu_isys_subdev *asd = to_ipu_isys_subdev(sd);
 	struct v4l2_mbus_framefmt *ffmt =
-		__ipu_isys_get_ffmt(sd, cfg, fmt->pad, fmt->stream,
-					   fmt->which);
+		__ipu_isys_get_ffmt(sd,
+							cfg,
+							fmt->pad,
+							fmt->stream,
+							fmt->which);
 	u32 code = asd->supported_codes[fmt->pad][0];
 	unsigned int i;
 
@@ -453,7 +460,9 @@ int ipu_isys_subdev_get_ffmt(struct v4l2_subdev *sd,
 		return -EINVAL;
 
 	mutex_lock(&asd->mutex);
-	fmt->format = *__ipu_isys_get_ffmt(sd, cfg, fmt->pad,
+	fmt->format = *__ipu_isys_get_ffmt(sd,
+					   cfg,
+					   fmt->pad,
 					   fmt->stream,
 					   fmt->which);
 	mutex_unlock(&asd->mutex);
@@ -639,8 +648,11 @@ int ipu_isys_subdev_set_sel(struct v4l2_subdev *sd,
 	case V4L2_SEL_TGT_CROP:
 		if (pad->flags & MEDIA_PAD_FL_SINK) {
 			struct v4l2_mbus_framefmt *ffmt =
-				__ipu_isys_get_ffmt(sd, cfg, sel->pad, 0,
-							   sel->which);
+				__ipu_isys_get_ffmt(sd,
+									cfg,
+									sel->pad,
+									0,
+									sel->which);
 
 			__r.width = ffmt->width;
 			__r.height = ffmt->height;
diff --git a/drivers/media/pci/intel/ipu-isys-subdev.h b/drivers/media/pci/intel/ipu-isys-subdev.h
index a1d041bd7cee..228216f6da29 100644
--- a/drivers/media/pci/intel/ipu-isys-subdev.h
+++ b/drivers/media/pci/intel/ipu-isys-subdev.h
@@ -100,8 +100,7 @@ struct ipu_isys_subdev {
 	container_of(__sd, struct ipu_isys_subdev, sd)
 
 struct v4l2_mbus_framefmt *__ipu_isys_get_ffmt(struct v4l2_subdev *sd,
-					       struct v4l2_subdev_pad_config
-					       *cfg,
+					       struct v4l2_subdev_pad_config *cfg,
 					       unsigned int pad,
 					       unsigned int stream,
 					       unsigned int which);
diff --git a/drivers/media/pci/intel/ipu-isys-tpg.c b/drivers/media/pci/intel/ipu-isys-tpg.c
index 8f3146d73431..f212fd37d606 100644
--- a/drivers/media/pci/intel/ipu-isys-tpg.c
+++ b/drivers/media/pci/intel/ipu-isys-tpg.c
@@ -140,8 +140,11 @@ static void tpg_set_ffmt(struct v4l2_subdev *sd,
 			 struct v4l2_subdev_format *fmt)
 {
 	fmt->format.field = V4L2_FIELD_NONE;
-	*__ipu_isys_get_ffmt(sd, cfg, fmt->pad, fmt->stream,
-			     fmt->which) = fmt->format;
+	*__ipu_isys_get_ffmt(sd,
+						cfg,
+						fmt->pad,
+						fmt->stream,
+						fmt->which) = fmt->format;
 }
 
 static int ipu_isys_tpg_set_ffmt(struct v4l2_subdev *sd,
@@ -155,7 +158,9 @@ static int ipu_isys_tpg_set_ffmt(struct v4l2_subdev *sd,
 	int rval;
 
 	mutex_lock(&tpg->asd.mutex);
-	rval = __ipu_isys_subdev_set_ffmt(sd, cfg, fmt);
+	rval = __ipu_isys_subdev_set_ffmt(sd,
+						cfg,
+						fmt);
 	mutex_unlock(&tpg->asd.mutex);
 
 	if (rval || fmt->which != V4L2_SUBDEV_FORMAT_ACTIVE)
diff --git a/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c b/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c
index bd8044255efe..a305c0c3e2cf 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c
@@ -173,10 +173,8 @@ int ipu_isys_gpc_init_debugfs(struct ipu_isys *isys)
 		if (IS_ERR(dir))
 			goto err;
 
-		file = debugfs_create_bool("enable", 0600, dir,
-					   &isys_gpcs->gpc[i].enable);
-		if (IS_ERR(file))
-			goto err;
+		debugfs_create_bool("enable", 0600, dir,
+				    &isys_gpcs->gpc[i].enable);
 
 		debugfs_create_u32("source", 0600, dir,
 				   &isys_gpcs->gpc[i].source);
diff --git a/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c b/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c
index 3bf35d245a4f..b6b850a68398 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c
@@ -180,10 +180,8 @@ int ipu_psys_gpc_init_debugfs(struct ipu_psys *psys)
 		if (IS_ERR(dir))
 			goto err;
 
-		file = debugfs_create_bool("enable", 0600, dir,
-					   &psys_gpcs->gpc[idx].enable);
-		if (IS_ERR(file))
-			goto err;
+		debugfs_create_bool("enable", 0600, dir,
+				    &psys_gpcs->gpc[idx].enable);
 
 		debugfs_create_u32("source", 0600, dir,
 				   &psys_gpcs->gpc[idx].source);
-- 
2.25.1

