From b5374db491a4a09bfcead3b0b12317e6467b09f8 Mon Sep 17 00:00:00 2001
From: Yonghua Huang <yonghua.huang@intel.com>
Date: Mon, 22 Mar 2021 11:30:17 +0800
Subject: [PATCH 3/3] release MSIX resource when unload uio driver

 MSI-x resource should be released when uio_pci_generic
 driver is unloaded.

Tracked-On: projectacrn/acrn-hypervisor#5889
Signed-off-by: Yonghua Huang <yonghua.huang@intel.com>
---
 drivers/uio/uio_pci_generic.c | 21 +++++++++++++++++++--
 1 file changed, 19 insertions(+), 2 deletions(-)

diff --git a/drivers/uio/uio_pci_generic.c b/drivers/uio/uio_pci_generic.c
index 685f8b20ed44..723d7df25f49 100644
--- a/drivers/uio/uio_pci_generic.c
+++ b/drivers/uio/uio_pci_generic.c
@@ -255,14 +255,31 @@ static int probe(struct pci_dev *pdev,
 
 static void remove(struct pci_dev *pdev)
 {
+#ifdef CONFIG_PCI_MSI
+	int i, irq;
+	struct eventfd_ctx *evt;
+#endif
 	struct uio_pci_generic_dev *gdev = pci_get_drvdata(pdev);
 
 	uio_unregister_device(&gdev->info);
-	pci_disable_device(pdev);
+
 #ifdef CONFIG_PCI_MSI
-	if (gdev->msix_info.entries != NULL)
+	if (gdev->msix_info.entries != NULL) {
+		for (i = 0; i < gdev->msix_info.nvecs; i++) {
+			irq = gdev->msix_info.entries[i].vector;
+			evt = gdev->msix_info.evts[i];
+			if (evt) {
+				free_irq(irq, evt);
+				eventfd_ctx_put(evt);
+				gdev->msix_info.evts[i] = NULL;
+			}
+		}
+		pci_disable_msix(pdev);
 		kfree(gdev->msix_info.entries);
+		gdev->msix_info.entries = NULL;
+	}
 #endif
+	pci_disable_device(pdev);
 	kfree(gdev);
 }
 
-- 
2.17.1

