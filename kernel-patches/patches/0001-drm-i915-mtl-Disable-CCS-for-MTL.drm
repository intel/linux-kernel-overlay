From 4fc5747b5336c3a52654df3115f15fcc8a3dde4f Mon Sep 17 00:00:00 2001
From: "Chew, Tong Liang" <tong.liang.chew@intel.com>
Date: Wed, 20 Sep 2023 17:46:00 +0800
Subject: [PATCH] drm/i915/mtl: Disable CCS for MTL

There are RCS & CSS Sync out Sync issues on MTL caused the context timeout
and reset. This is temporary WA to disable CCS to allow only RCS
workloads.

Signed-off-by: Chew, Tong Liang <tong.liang.chew@intel.com>
---
 drivers/gpu/drm/i915/gt/iov/intel_iov_query.c   |  1 -
 drivers/gpu/drm/i915/gt/iov/intel_iov_service.c |  1 -
 drivers/gpu/drm/i915/i915_driver.c              | 10 ++++++++++
 drivers/gpu/drm/i915/i915_params.h              |  1 +
 drivers/gpu/drm/i915/i915_pci.c                 |  2 +-
 5 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/iov/intel_iov_query.c b/drivers/gpu/drm/i915/gt/iov/intel_iov_query.c
index d6849c0866d2..b006b775d81d 100644
--- a/drivers/gpu/drm/i915/gt/iov/intel_iov_query.c
+++ b/drivers/gpu/drm/i915/gt/iov/intel_iov_query.c
@@ -399,7 +399,6 @@ static const i915_reg_t mtl_early_regs[] = {
 	XEHP_EU_ENABLE,			/* _MMIO(0x9134) */
 	GEN12_GT_GEOMETRY_DSS_ENABLE,	/* _MMIO(0x913C) */
 	GEN11_GT_VEBOX_VDBOX_DISABLE,	/* _MMIO(0x9140) */
-	GEN12_GT_COMPUTE_DSS_ENABLE,	/* _MMIO(0x9144) */
 	XEHPC_GT_COMPUTE_DSS_ENABLE_EXT,/* _MMIO(0x9148) */
 	CTC_MODE,			/* _MMIO(0xA26C) */
 	GEN11_HUC_KERNEL_LOAD_INFO,	/* _MMIO(0xC1DC) */
diff --git a/drivers/gpu/drm/i915/gt/iov/intel_iov_service.c b/drivers/gpu/drm/i915/gt/iov/intel_iov_service.c
index f5a02e0d5d6d..367d15da24f1 100644
--- a/drivers/gpu/drm/i915/gt/iov/intel_iov_service.c
+++ b/drivers/gpu/drm/i915/gt/iov/intel_iov_service.c
@@ -48,7 +48,6 @@ static const i915_reg_t mtl_runtime_regs[] = {
 	XEHP_EU_ENABLE,			/* _MMIO(0x9134) */
 	GEN12_GT_GEOMETRY_DSS_ENABLE,	/* _MMIO(0x913C) */
 	GEN11_GT_VEBOX_VDBOX_DISABLE,	/* _MMIO(0x9140) */
-	GEN12_GT_COMPUTE_DSS_ENABLE,	/* _MMIO(0x9144) */
 	XEHPC_GT_COMPUTE_DSS_ENABLE_EXT,/* _MMIO(0x9148) */
 	CTC_MODE,			/* _MMIO(0xA26C) */
 	GEN11_HUC_KERNEL_LOAD_INFO,	/* _MMIO(0xC1DC) */
diff --git a/drivers/gpu/drm/i915/i915_driver.c b/drivers/gpu/drm/i915/i915_driver.c
index 18cc340c3f85..0d31bb22d6b7 100644
--- a/drivers/gpu/drm/i915/i915_driver.c
+++ b/drivers/gpu/drm/i915/i915_driver.c
@@ -827,6 +827,16 @@ int i915_driver_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 		RUNTIME_INFO(i915)->platform_engine_mask |= BIT(CCS0);
 	}
 
+	/*
+	 * Force to enable CCS on MTL.
+	 * Will remove this code once CCS enablement is completed on MTL
+	 *
+	 */
+	if (i915->params.force_enable_ccs &&
+	    match_info->platform == INTEL_METEORLAKE) {
+		RUNTIME_INFO(i915)->platform_engine_mask |= BIT(CCS0);
+	}
+
 	/* This must be called before any calls to IS/IOV_MODE() macros */
 	i915_virtualization_probe(i915);
 
diff --git a/drivers/gpu/drm/i915/i915_params.h b/drivers/gpu/drm/i915/i915_params.h
index 9e5baa8bfb3a..e2edd7fc8283 100644
--- a/drivers/gpu/drm/i915/i915_params.h
+++ b/drivers/gpu/drm/i915/i915_params.h
@@ -82,6 +82,7 @@ struct drm_printer;
 	param(unsigned int, lmem_size, 0, 0400) \
 	param(unsigned int, lmem_bar_size, 0, 0400) \
 	param(unsigned int, max_vfs, 0, 0400) \
+	param(int, force_enable_ccs, 0, 0400) \
 	/* leave bools at the end to not create holes */ \
 	param(bool, enable_hangcheck, true, 0600) \
 	param(bool, load_detect_test, false, 0600) \
diff --git a/drivers/gpu/drm/i915/i915_pci.c b/drivers/gpu/drm/i915/i915_pci.c
index 25a5727b106e..b472bf0e893d 100644
--- a/drivers/gpu/drm/i915/i915_pci.c
+++ b/drivers/gpu/drm/i915/i915_pci.c
@@ -844,7 +844,7 @@ static const struct intel_device_info mtl_info = {
 	.max_pat_index = 4,
 	.has_pxp = 1,
 	.__runtime.memory_regions = REGION_SMEM | REGION_STOLEN_LMEM,
-	.__runtime.platform_engine_mask = BIT(RCS0) | BIT(BCS0) | BIT(CCS0),
+	.__runtime.platform_engine_mask = BIT(RCS0) | BIT(BCS0),
 	.require_force_probe = 1,
 	MTL_CACHELEVEL,
 };
-- 
2.25.1

