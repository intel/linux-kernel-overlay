From d79f6ae62c79d38bd5fd914bd772eea23e11b574 Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Tue, 12 Apr 2022 14:32:52 +0800
Subject: [PATCH 02/40] media: intel-ipu6: calculate the TSC based on the
 actual ref_clk

Change Description:
calculate the TSC based on the actual ref_clk instead of hard-coded
19.2Mhz.

Signed-off-by: Bingbu Cao <bingbu.cao@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu-buttress.c        | 34 ++++++++++++++-----
 drivers/media/pci/intel/ipu-buttress.h        |  2 +-
 drivers/media/pci/intel/ipu-isys-queue.c      |  2 +-
 .../intel/ipu6/ipu-platform-buttress-regs.h   |  1 +
 4 files changed, 28 insertions(+), 11 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-buttress.c b/drivers/media/pci/intel/ipu-buttress.c
index b9d8056ff08b..d0bb95c77174 100644
--- a/drivers/media/pci/intel/ipu-buttress.c
+++ b/drivers/media/pci/intel/ipu-buttress.c
@@ -1258,17 +1258,33 @@ int ipu_buttress_debugfs_init(struct ipu_device *isp)
 
 #endif /* CONFIG_DEBUG_FS */
 
-u64 ipu_buttress_tsc_ticks_to_ns(u64 ticks)
+u64 ipu_buttress_tsc_ticks_to_ns(u64 ticks, const struct ipu_device *isp)
 {
+	u32 ref_clk, val;
 	u64 ns = ticks * 10000;
-	/*
-	 * TSC clock frequency is 19.2MHz,
-	 * converting TSC tick count to ns is calculated by:
-	 * ns = ticks * 1000 000 000 / 19.2Mhz
-	 *    = ticks * 1000 000 000 / 19200000Hz
-	 *    = ticks * 10000 / 192 ns
-	 */
-	do_div(ns, 192);
+
+	val = readl(isp->base + BUTTRESS_REG_BTRS_CTRL);
+	val &= BUTTRESS_REG_BTRS_CTRL_REF_CLK_IND;
+	val >>= 8;
+
+	switch (val) {
+	case 0x0:
+		ref_clk = 240;
+		break;
+	case 0x1:
+		ref_clk = 192;
+		break;
+	case 0x2:
+		ref_clk = 384;
+		break;
+	default:
+		dev_warn(&isp->pdev->dev,
+			 "Unsupported ref clock, use 19.2Mhz by default.\n");
+		ref_clk = 192;
+		break;
+	}
+
+	do_div(ns, ref_clk);
 
 	return ns;
 }
diff --git a/drivers/media/pci/intel/ipu-buttress.h b/drivers/media/pci/intel/ipu-buttress.h
index f8ba7e50eca2..6b49804f940c 100644
--- a/drivers/media/pci/intel/ipu-buttress.h
+++ b/drivers/media/pci/intel/ipu-buttress.h
@@ -113,7 +113,7 @@ int ipu_buttress_reset_authentication(struct ipu_device *isp);
 bool ipu_buttress_auth_done(struct ipu_device *isp);
 int ipu_buttress_start_tsc_sync(struct ipu_device *isp);
 int ipu_buttress_tsc_read(struct ipu_device *isp, u64 *val);
-u64 ipu_buttress_tsc_ticks_to_ns(u64 ticks);
+u64 ipu_buttress_tsc_ticks_to_ns(u64 ticks, const struct ipu_device *isp);
 
 irqreturn_t ipu_buttress_isr(int irq, void *isp_ptr);
 irqreturn_t ipu_buttress_isr_threaded(int irq, void *isp_ptr);
diff --git a/drivers/media/pci/intel/ipu-isys-queue.c b/drivers/media/pci/intel/ipu-isys-queue.c
index b22c92d97482..467ba55050c9 100644
--- a/drivers/media/pci/intel/ipu-isys-queue.c
+++ b/drivers/media/pci/intel/ipu-isys-queue.c
@@ -880,7 +880,7 @@ static u64 get_sof_ns_delta(struct ipu_isys_video *av,
 	else
 		delta = 0;
 
-	return ipu_buttress_tsc_ticks_to_ns(delta);
+	return ipu_buttress_tsc_ticks_to_ns(delta, isp);
 }
 
 void
diff --git a/drivers/media/pci/intel/ipu6/ipu-platform-buttress-regs.h b/drivers/media/pci/intel/ipu6/ipu-platform-buttress-regs.h
index 343d75bd4cc6..1f0d2f6ec7d2 100644
--- a/drivers/media/pci/intel/ipu6/ipu-platform-buttress-regs.h
+++ b/drivers/media/pci/intel/ipu6/ipu-platform-buttress-regs.h
@@ -54,6 +54,7 @@
 #define BUTTRESS_REG_BTRS_CTRL			0xc
 #define BUTTRESS_REG_BTRS_CTRL_STALL_MODE_VC0	BIT(0)
 #define BUTTRESS_REG_BTRS_CTRL_STALL_MODE_VC1	BIT(1)
+#define BUTTRESS_REG_BTRS_CTRL_REF_CLK_IND	GENMASK(9, 8)
 
 #define BUTTRESS_REG_FW_RESET_CTL	0x30
 #define BUTTRESS_FW_RESET_CTL_START	BIT(0)
-- 
2.25.1

