From aaa84d431ea2177a574130964f51446651c0bceb Mon Sep 17 00:00:00 2001
From: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date: Fri, 6 Sep 2019 13:42:45 +0300
Subject: [PATCH 2/8] serial: Preliminary support for 9-bit transfer mode with
 RS-485

Interim. This approach ties 9-bit transfer support to only
RS-485. That is definitely not ideal, so this can't be the
final solution. We should consider a dedicated IOCTL for
9-bit transfers only. Use this only as a "Proof-of-concept".

This adds a flag to the struct serial_rs485 that can be used
for enabling 9-bit transfer mode (9-bit framing), a second
flag that the user can tell the driver the next transmit
address, and a third flag for receive address. The address is
expected to be in the first "padding" member of the data
structure.

When the user supplies the address transmit, it is expected
to be send out with the 9th bit set to 1 immediately. After
that ioctl, the following transfers will therefore go to the
device with the adders.

After the user has supplied the receive address, the driver
is expected to handle the matching of the address, and
forwarding only data with that address to the tty interface.

Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
---
 include/uapi/linux/serial.h | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/include/uapi/linux/serial.h b/include/uapi/linux/serial.h
index fa6b16e5fdd8..5dd48c2d520f 100644
--- a/include/uapi/linux/serial.h
+++ b/include/uapi/linux/serial.h
@@ -126,6 +126,12 @@ struct serial_rs485 {
 #define SER_RS485_TERMINATE_BUS		(1 << 5)	/* Enable bus
 							   termination
 							   (if supported) */
+#define SER_RS485_9BIT_ENABLED		(1 << 6)	/* Enable 9-Bit transfer
+							   mode */
+#define SER_RS485_9BIT_TX_ADDR		(1 << 7)	/* TX address available
+							   in padding */
+#define SER_RS485_9BIT_RX_ADDR		(1 << 8)	/* RX address available
+							   in padding */
 	__u32	delay_rts_before_send;	/* Delay before send (milliseconds) */
 	__u32	delay_rts_after_send;	/* Delay after send (milliseconds) */
 	__u32	padding[5];		/* Memory is cheap, new structs
-- 
2.25.1

