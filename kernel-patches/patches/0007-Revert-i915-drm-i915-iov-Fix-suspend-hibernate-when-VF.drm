From f47bc7f5d5f888074f096a647538afe2b900283f Mon Sep 17 00:00:00 2001
From: "Zawawi, Muhammad Zul Husni" <muhammad.zul.husni.zawawi@intel.com>
Date: Fri, 17 Nov 2023 13:49:34 +0800
Subject: [PATCH 007/319] Revert "i915: drm/i915/iov: Fix suspend/hibernate
 when VFs are enabled"

This reverts commit 0628bf7610a9d949d83b000fe0b484ce41b8917b.
---
 drivers/gpu/drm/i915/gt/intel_gt_pm.c   |  3 ---
 drivers/gpu/drm/i915/gt/iov/intel_iov.c | 33 -------------------------
 drivers/gpu/drm/i915/gt/iov/intel_iov.h |  6 -----
 drivers/gpu/drm/i915/i915_sriov.c       |  5 ++--
 4 files changed, 2 insertions(+), 45 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/intel_gt_pm.c b/drivers/gpu/drm/i915/gt/intel_gt_pm.c
index d859c30edafa..d9438f2c41e7 100644
--- a/drivers/gpu/drm/i915/gt/intel_gt_pm.c
+++ b/drivers/gpu/drm/i915/gt/intel_gt_pm.c
@@ -21,7 +21,6 @@
 #include "intel_rps.h"
 #include "intel_wakeref.h"
 #include "pxp/intel_pxp_pm.h"
-#include "iov/intel_iov.h"
 
 #define I915_GT_SUSPEND_IDLE_TIMEOUT (HZ / 2)
 
@@ -308,8 +307,6 @@ static void wait_for_suspend(struct intel_gt *gt)
 
 void intel_gt_suspend_prepare(struct intel_gt *gt)
 {
-	intel_iov_suspend(&gt->iov);
-
 	user_forcewake(gt, true);
 	wait_for_suspend(gt);
 }
diff --git a/drivers/gpu/drm/i915/gt/iov/intel_iov.c b/drivers/gpu/drm/i915/gt/iov/intel_iov.c
index ad7e61b6e9e9..ecd483ea93d2 100644
--- a/drivers/gpu/drm/i915/gt/iov/intel_iov.c
+++ b/drivers/gpu/drm/i915/gt/iov/intel_iov.c
@@ -12,7 +12,6 @@
 #include "intel_iov_service.h"
 #include "intel_iov_state.h"
 #include "intel_iov_utils.h"
-#include "gt/intel_gt_pm.h"
 
 #include "i915_reg.h"
 
@@ -309,35 +308,3 @@ int intel_iov_init_late(struct intel_iov *iov)
 
 	return 0;
 }
-
-void intel_iov_pf_get_pm_vfs(struct intel_iov *iov)
-{
-	GEM_BUG_ON(!intel_iov_is_pf(iov));
-
-	intel_gt_pm_get(iov_to_gt(iov));
-}
-
-void intel_iov_pf_put_pm_vfs(struct intel_iov *iov)
-{
-	GEM_BUG_ON(!intel_iov_is_pf(iov));
-
-	intel_gt_pm_put(iov_to_gt(iov));
-}
-
-void intel_iov_suspend(struct intel_iov *iov)
-{
-	if (!intel_iov_is_pf(iov))
-		return;
-
-	if (pci_num_vf(to_pci_dev(iov_to_i915(iov)->drm.dev)) != 0)
-		intel_iov_pf_put_pm_vfs(iov);
-}
-
-void intel_iov_resume(struct intel_iov *iov)
-{
-	if (!intel_iov_is_pf(iov))
-		return;
-
-	if (pci_num_vf(to_pci_dev(iov_to_i915(iov)->drm.dev)) != 0)
-		intel_iov_pf_get_pm_vfs(iov);
-}
diff --git a/drivers/gpu/drm/i915/gt/iov/intel_iov.h b/drivers/gpu/drm/i915/gt/iov/intel_iov.h
index 7547fa24ea5c..3cc5d18f470c 100644
--- a/drivers/gpu/drm/i915/gt/iov/intel_iov.h
+++ b/drivers/gpu/drm/i915/gt/iov/intel_iov.h
@@ -21,10 +21,4 @@ int intel_iov_init_hw(struct intel_iov *iov);
 void intel_iov_fini_hw(struct intel_iov *iov);
 int intel_iov_init_late(struct intel_iov *iov);
 
-void intel_iov_pf_get_pm_vfs(struct intel_iov *iov);
-void intel_iov_pf_put_pm_vfs(struct intel_iov *iov);
-
-void intel_iov_suspend(struct intel_iov *iov);
-void intel_iov_resume(struct intel_iov *iov);
-
 #endif /* __INTEL_IOV_H__ */
diff --git a/drivers/gpu/drm/i915/i915_sriov.c b/drivers/gpu/drm/i915/i915_sriov.c
index 87b3d1ad2813..98fb0cf56d17 100644
--- a/drivers/gpu/drm/i915/i915_sriov.c
+++ b/drivers/gpu/drm/i915/i915_sriov.c
@@ -15,7 +15,6 @@
 
 #include "gt/intel_gt.h"
 #include "gt/intel_gt_pm.h"
-#include "gt/iov/intel_iov.h"
 #include "gt/iov/intel_iov_provisioning.h"
 #include "gt/iov/intel_iov_service.h"
 #include "gt/iov/intel_iov_reg.h"
@@ -513,7 +512,7 @@ int i915_sriov_pf_enable_vfs(struct drm_i915_private *i915, int num_vfs)
 
 	/* hold the reference to runtime pm as long as VFs are enabled */
 	for_each_gt(gt, i915, id)
-		intel_iov_pf_get_pm_vfs(&gt->iov);
+		intel_gt_pm_get(gt);
 
 	/* Wa_14019103365 */
 	if (IS_METEORLAKE(i915)) {
@@ -563,7 +562,7 @@ int i915_sriov_pf_enable_vfs(struct drm_i915_private *i915, int num_vfs)
 fail_pm:
 	for_each_gt(gt, i915, id) {
 		intel_iov_provisioning_auto(&gt->iov, 0);
-		intel_iov_pf_put_pm_vfs(&gt->iov);
+		intel_gt_pm_put(gt);
 	}
 fail:
 	drm_err(&i915->drm, "Failed to enable %u VFs (%pe)\n",
-- 
2.25.1

