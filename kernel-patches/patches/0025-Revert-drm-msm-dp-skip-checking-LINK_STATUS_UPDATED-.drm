From 6c5f9e3127e1b297ac16752a2912fd62f00b9754 Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Thu, 7 Jan 2021 11:21:01 +0800
Subject: [PATCH 25/42] Revert "drm/msm/dp: skip checking LINK_STATUS_UPDATED
 bit"

This reverts commit be5795e2098fc4ccc6655bbb3588cef6d81499c5.
---
 drivers/gpu/drm/msm/dp/dp_ctrl.c | 20 ++++++++++++++------
 drivers/gpu/drm/msm/dp/dp_link.c | 29 +++++++++++++++--------------
 2 files changed, 29 insertions(+), 20 deletions(-)

diff --git a/drivers/gpu/drm/msm/dp/dp_ctrl.c b/drivers/gpu/drm/msm/dp/dp_ctrl.c
index c83a1650437d..cee161c8ecc6 100644
--- a/drivers/gpu/drm/msm/dp/dp_ctrl.c
+++ b/drivers/gpu/drm/msm/dp/dp_ctrl.c
@@ -1061,15 +1061,23 @@ static bool dp_ctrl_train_pattern_set(struct dp_ctrl_private *ctrl,
 static int dp_ctrl_read_link_status(struct dp_ctrl_private *ctrl,
 				    u8 *link_status)
 {
-	int ret = 0, len;
+	int len = 0;
+	u32 const offset = DP_LANE_ALIGN_STATUS_UPDATED - DP_LANE0_1_STATUS;
+	u32 link_status_read_max_retries = 100;
+
+	while (--link_status_read_max_retries) {
+		len = drm_dp_dpcd_read_link_status(ctrl->aux,
+			link_status);
+		if (len != DP_LINK_STATUS_SIZE) {
+			DRM_ERROR("DP link status read failed, err: %d\n", len);
+			return len;
+		}
 
-	len = drm_dp_dpcd_read_link_status(ctrl->aux, link_status);
-	if (len != DP_LINK_STATUS_SIZE) {
-		DRM_ERROR("DP link status read failed, err: %d\n", len);
-		ret = -EINVAL;
+		if (!(link_status[offset] & DP_LINK_STATUS_UPDATED))
+			return 0;
 	}
 
-	return ret;
+	return -ETIMEDOUT;
 }
 
 static int dp_ctrl_link_train_1(struct dp_ctrl_private *ctrl,
diff --git a/drivers/gpu/drm/msm/dp/dp_link.c b/drivers/gpu/drm/msm/dp/dp_link.c
index be986da78c4a..49d7fad36fc4 100644
--- a/drivers/gpu/drm/msm/dp/dp_link.c
+++ b/drivers/gpu/drm/msm/dp/dp_link.c
@@ -773,8 +773,7 @@ static int dp_link_process_link_training_request(struct dp_link_private *link)
 			link->request.test_lane_count);
 
 	link->dp_link.link_params.num_lanes = link->request.test_lane_count;
-	link->dp_link.link_params.rate = 
-		drm_dp_bw_code_to_link_rate(link->request.test_link_rate);
+	link->dp_link.link_params.rate = link->request.test_link_rate;
 
 	return 0;
 }
@@ -944,20 +943,22 @@ static u8 get_link_status(const u8 link_status[DP_LINK_STATUS_SIZE], int r)
  */
 static int dp_link_process_link_status_update(struct dp_link_private *link)
 {
-       bool channel_eq_done = drm_dp_channel_eq_ok(link->link_status,
-                       link->dp_link.link_params.num_lanes);
-
-       bool clock_recovery_done = drm_dp_clock_recovery_ok(link->link_status,
-                       link->dp_link.link_params.num_lanes);
-
-       DRM_DEBUG_DP("channel_eq_done = %d, clock_recovery_done = %d\n",
-                        channel_eq_done, clock_recovery_done);
-
-       if (channel_eq_done && clock_recovery_done)
-               return -EINVAL;
+	if (!(get_link_status(link->link_status,
+				DP_LANE_ALIGN_STATUS_UPDATED) &
+				DP_LINK_STATUS_UPDATED) ||
+			(drm_dp_clock_recovery_ok(link->link_status,
+					link->dp_link.link_params.num_lanes) &&
+			drm_dp_channel_eq_ok(link->link_status,
+					link->dp_link.link_params.num_lanes)))
+		return -EINVAL;
 
+	DRM_DEBUG_DP("channel_eq_done = %d, clock_recovery_done = %d\n",
+			drm_dp_clock_recovery_ok(link->link_status,
+			link->dp_link.link_params.num_lanes),
+			drm_dp_clock_recovery_ok(link->link_status,
+			link->dp_link.link_params.num_lanes));
 
-       return 0;
+	return 0;
 }
 
 /**
-- 
2.25.1

