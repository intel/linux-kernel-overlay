From dca7f283613f3fbb973ed04fcd0fb1c5a0e903a8 Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Tue, 16 Apr 2024 16:19:41 +0800
Subject: [PATCH 06/12] media: ipu6: properly init pad flags

added a sanity check to media_entity_pads_init() which verifies
that SINK or SOURCE flag is set on each pad. This is, however, not
how we do that in IPU6. In IPU6 we first allocate pads in
ipu_isys_subdev_init(), zero them out, call media_entity_pads_init()
and only once ipu_isys_subdev_init() returns configure pad flags.

Extend ipu_isys_subdev_init() and pass idx of source and sink pad
and set pads accordingly before we call media_entity_pads_init().

Also add some trivial checks to ipu_isys_subdev_init().

Signed-off-by: Sergey Senozhatsky <senozhatsky@chromium.org>
Signed-off-by: hepengpx <pengpengx.he@intel.com>
Signed-off-by: Hao Yao <hao.yao@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu-isys-csi2-be-soc.c |  6 +++---
 drivers/media/pci/intel/ipu-isys-csi2-be.c     |  8 ++++----
 drivers/media/pci/intel/ipu-isys-csi2.c        |  9 ++++-----
 drivers/media/pci/intel/ipu-isys-subdev.c      | 18 +++++++++++++++++-
 drivers/media/pci/intel/ipu-isys-subdev.h      |  7 ++++++-
 drivers/media/pci/intel/ipu-isys-tpg.c         |  6 ++++--
 6 files changed, 38 insertions(+), 16 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c b/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
index 8377f336db9b..1bb01eb2c119 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
+++ b/drivers/media/pci/intel/ipu-isys-csi2-be-soc.c
@@ -256,15 +256,15 @@ int ipu_isys_csi2_be_soc_init(struct ipu_isys_csi2_be_soc *csi2_be_soc,
 				    &csi2_be_soc_sd_ops, 0,
 				    NR_OF_CSI2_BE_SOC_PADS,
 				    NR_OF_CSI2_BE_SOC_SOURCE_PADS,
-				    NR_OF_CSI2_BE_SOC_SINK_PADS, 0);
+				    NR_OF_CSI2_BE_SOC_SINK_PADS, 0,
+				    CSI2_BE_SOC_PAD_SOURCE(0),
+				    CSI2_BE_SOC_PAD_SINK);
 	if (rval)
 		goto fail;
 
-	csi2_be_soc->asd.pad[CSI2_BE_SOC_PAD_SINK].flags = MEDIA_PAD_FL_SINK;
 	for (i = CSI2_BE_SOC_PAD_SOURCE(0);
 	     i < NR_OF_CSI2_BE_SOC_SOURCE_PADS + CSI2_BE_SOC_PAD_SOURCE(0);
 	     i++) {
-		csi2_be_soc->asd.pad[i].flags = MEDIA_PAD_FL_SOURCE;
 		csi2_be_soc->asd.valid_tgts[i].crop = true;
 	}
 
diff --git a/drivers/media/pci/intel/ipu-isys-csi2-be.c b/drivers/media/pci/intel/ipu-isys-csi2-be.c
index a5497aaa4698..cf9b7ba02789 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2-be.c
+++ b/drivers/media/pci/intel/ipu-isys-csi2-be.c
@@ -246,13 +246,13 @@ int ipu_isys_csi2_be_init(struct ipu_isys_csi2_be *csi2_be,
 	rval = ipu_isys_subdev_init(&csi2_be->asd, &csi2_be_sd_ops, 0,
 				    NR_OF_CSI2_BE_PADS,
 				    NR_OF_CSI2_BE_SOURCE_PADS,
-				    NR_OF_CSI2_BE_SINK_PADS, 0);
+				    NR_OF_CSI2_BE_SINK_PADS, 0,
+				    CSI2_BE_PAD_SOURCE,
+				    CSI2_BE_PAD_SINK);
 	if (rval)
 		goto fail;
 
-	csi2_be->asd.pad[CSI2_BE_PAD_SINK].flags = MEDIA_PAD_FL_SINK
-	    | MEDIA_PAD_FL_MUST_CONNECT;
-	csi2_be->asd.pad[CSI2_BE_PAD_SOURCE].flags = MEDIA_PAD_FL_SOURCE;
+	csi2_be->asd.pad[CSI2_BE_PAD_SINK].flags |= MEDIA_PAD_FL_MUST_CONNECT;
 	csi2_be->asd.valid_tgts[CSI2_BE_PAD_SOURCE].crop = true;
 	csi2_be->asd.set_ffmt = csi2_be_set_ffmt;
 
diff --git a/drivers/media/pci/intel/ipu-isys-csi2.c b/drivers/media/pci/intel/ipu-isys-csi2.c
index 0e4394c201db..f07989d052bc 100644
--- a/drivers/media/pci/intel/ipu-isys-csi2.c
+++ b/drivers/media/pci/intel/ipu-isys-csi2.c
@@ -468,14 +468,13 @@ int ipu_isys_csi2_init(struct ipu_isys_csi2 *csi2,
 	rval = ipu_isys_subdev_init(&csi2->asd, &csi2_sd_ops, 0,
 				    NR_OF_CSI2_PADS,
 				    NR_OF_CSI2_SOURCE_PADS,
-				    NR_OF_CSI2_SINK_PADS,
-				    0);
+				    NR_OF_CSI2_SINK_PADS, 0,
+				    CSI2_PAD_SOURCE,
+				    CSI2_PAD_SINK);
 	if (rval)
 		goto fail;
 
-	csi2->asd.pad[CSI2_PAD_SINK].flags = MEDIA_PAD_FL_SINK
-		| MEDIA_PAD_FL_MUST_CONNECT;
-	csi2->asd.pad[CSI2_PAD_SOURCE].flags = MEDIA_PAD_FL_SOURCE;
+	csi2->asd.pad[CSI2_PAD_SINK].flags |= MEDIA_PAD_FL_MUST_CONNECT;
 
 	src = index;
 	csi2->asd.source = IPU_FW_ISYS_STREAM_SRC_CSI2_PORT0 + src;
diff --git a/drivers/media/pci/intel/ipu-isys-subdev.c b/drivers/media/pci/intel/ipu-isys-subdev.c
index 0197ede0fad8..d048e96ad4c8 100644
--- a/drivers/media/pci/intel/ipu-isys-subdev.c
+++ b/drivers/media/pci/intel/ipu-isys-subdev.c
@@ -593,8 +593,11 @@ int ipu_isys_subdev_init(struct ipu_isys_subdev *asd,
 			 unsigned int num_pads,
 			 unsigned int num_source,
 			 unsigned int num_sink,
-			 unsigned int sd_flags)
+			 unsigned int sd_flags,
+			 int src_pad_idx,
+			 int sink_pad_idx)
 {
+	int i;
 	int rval = -EINVAL;
 
 	mutex_init(&asd->mutex);
@@ -611,6 +614,19 @@ int ipu_isys_subdev_init(struct ipu_isys_subdev *asd,
 	asd->pad = devm_kcalloc(&asd->isys->adev->dev, num_pads,
 				sizeof(*asd->pad), GFP_KERNEL);
 
+	/*
+	 * Out of range IDX means that this particular type of pad
+	 * does not exist.
+	 */
+	if (src_pad_idx != ISYS_SUBDEV_NO_PAD) {
+		for (i = 0; i < num_source; i++)
+			asd->pad[src_pad_idx + i].flags = MEDIA_PAD_FL_SOURCE;
+	}
+	if (sink_pad_idx != ISYS_SUBDEV_NO_PAD) {
+		for (i = 0; i < num_sink; i++)
+			asd->pad[sink_pad_idx + i].flags = MEDIA_PAD_FL_SINK;
+	}
+
 	asd->ffmt = devm_kcalloc(&asd->isys->adev->dev, num_pads,
 				 sizeof(*asd->ffmt), GFP_KERNEL);
 
diff --git a/drivers/media/pci/intel/ipu-isys-subdev.h b/drivers/media/pci/intel/ipu-isys-subdev.h
index b3d86ba068ba..0bcbc0249856 100644
--- a/drivers/media/pci/intel/ipu-isys-subdev.h
+++ b/drivers/media/pci/intel/ipu-isys-subdev.h
@@ -141,12 +141,17 @@ int ipu_isys_subdev_link_validate(struct v4l2_subdev *sd,
 
 int ipu_isys_subdev_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh);
 int ipu_isys_subdev_close(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh);
+
+#define ISYS_SUBDEV_NO_PAD	(-1)
+
 int ipu_isys_subdev_init(struct ipu_isys_subdev *asd,
 			 struct v4l2_subdev_ops *ops,
 			 unsigned int nr_ctrls,
 			 unsigned int num_pads,
 			 unsigned int num_source,
 			 unsigned int num_sink,
-			 unsigned int sd_flags);
+			 unsigned int sd_flags,
+			 int src_pad_idx,
+			 int sink_pad_idx);
 void ipu_isys_subdev_cleanup(struct ipu_isys_subdev *asd);
 #endif /* IPU_ISYS_SUBDEV_H */
diff --git a/drivers/media/pci/intel/ipu-isys-tpg.c b/drivers/media/pci/intel/ipu-isys-tpg.c
index b3abb81a4da0..88b6b1244d36 100644
--- a/drivers/media/pci/intel/ipu-isys-tpg.c
+++ b/drivers/media/pci/intel/ipu-isys-tpg.c
@@ -252,16 +252,18 @@ int ipu_isys_tpg_init(struct ipu_isys_tpg *tpg,
 	tpg->asd.ctrl_init = ipu_isys_tpg_init_controls;
 	tpg->asd.isys = isys;
 
+	/* Note: there is no FL_SINK pad here */
 	rval = ipu_isys_subdev_init(&tpg->asd, &tpg_sd_ops, 5,
 				    NR_OF_TPG_PADS,
 				    NR_OF_TPG_SOURCE_PADS,
 				    NR_OF_TPG_SINK_PADS,
-				    V4L2_SUBDEV_FL_HAS_EVENTS);
+				    V4L2_SUBDEV_FL_HAS_EVENTS,
+				    TPG_PAD_SOURCE,
+				    ISYS_SUBDEV_NO_PAD);
 	if (rval)
 		return rval;
 
 	tpg->asd.sd.entity.function = MEDIA_ENT_F_CAM_SENSOR;
-	tpg->asd.pad[TPG_PAD_SOURCE].flags = MEDIA_PAD_FL_SOURCE;
 
 	tpg->asd.source = IPU_FW_ISYS_STREAM_SRC_MIPIGEN_PORT0 + index;
 	tpg->asd.supported_codes = tpg_supported_codes;
-- 
2.25.1

