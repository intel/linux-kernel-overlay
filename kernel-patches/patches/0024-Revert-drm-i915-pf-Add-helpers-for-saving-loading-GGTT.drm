From 8ebd0607ca367bae05908592eb3575200d206a9c Mon Sep 17 00:00:00 2001
From: "Zawawi, Muhammad Zul Husni" <muhammad.zul.husni.zawawi@intel.com>
Date: Fri, 17 Nov 2023 13:50:20 +0800
Subject: [PATCH 024/319] Revert "drm/i915/pf: Add helpers for saving/loading
 GGTT state"

This reverts commit e696722faf91b7c0d6abb6aec261b92ee89635e5.
---
 drivers/gpu/drm/i915/gt/iov/intel_iov_state.c | 70 -------------------
 drivers/gpu/drm/i915/gt/iov/intel_iov_state.h |  2 -
 2 files changed, 72 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/iov/intel_iov_state.c b/drivers/gpu/drm/i915/gt/iov/intel_iov_state.c
index db018a920b8c..a4d557f52bad 100644
--- a/drivers/gpu/drm/i915/gt/iov/intel_iov_state.c
+++ b/drivers/gpu/drm/i915/gt/iov/intel_iov_state.c
@@ -520,73 +520,3 @@ int intel_iov_state_stop_vf(struct intel_iov *iov, u32 vfid)
 {
 	return pf_control_vf(iov, vfid, GUC_PF_TRIGGER_VF_STOP);
 }
-
-/**
- * intel_iov_state_save_ggtt - Save VF GGTT.
- * @iov: the IOV struct
- * @vfid: VF identifier
- * @buf: buffer to save VF GGTT
- * @size: size of buffer to save VF GGTT
- *
- * This function is for PF only.
- *
- * Return: Size of data written on success or a negative error code on failure.
- */
-ssize_t intel_iov_state_save_ggtt(struct intel_iov *iov, u32 vfid, void *buf, size_t size)
-{
-	struct drm_mm_node *node = &iov->pf.provisioning.configs[vfid].ggtt_region;
-	struct intel_runtime_pm *rpm = iov_to_gt(iov)->uncore->rpm;
-	struct i915_ggtt *ggtt = iov_to_gt(iov)->ggtt;
-	intel_wakeref_t wakeref;
-	ssize_t ret;
-
-	GEM_BUG_ON(!intel_iov_is_pf(iov));
-
-	mutex_lock(pf_provisioning_mutex(iov));
-
-	if (!drm_mm_node_allocated(node)) {
-		ret = -EINVAL;
-		goto out;
-	}
-
-	with_intel_runtime_pm(rpm, wakeref)
-		ret = i915_ggtt_save_ptes(ggtt, node, buf, size, I915_GGTT_SAVE_PTES_NO_VFID);
-
-out:
-	mutex_unlock(pf_provisioning_mutex(iov));
-
-	return ret;
-}
-
-/**
- * intel_iov_state_restore_ggtt - Restore VF GGTT.
- * @iov: the IOV struct
- * @vfid: VF identifier
- * @buf: buffer with VF GGTT to restore
- * @size: size of buffer with VF GGTT
- *
- * This function is for PF only.
- *
- * Return: 0 on success or a negative error code on failure.
- */
-int intel_iov_state_restore_ggtt(struct intel_iov *iov, u32 vfid, const void *buf, size_t size)
-{
-	struct drm_mm_node *node = &iov->pf.provisioning.configs[vfid].ggtt_region;
-	struct intel_runtime_pm *rpm = iov_to_gt(iov)->uncore->rpm;
-	struct i915_ggtt *ggtt = iov_to_gt(iov)->ggtt;
-	intel_wakeref_t wakeref;
-	int ret;
-
-	GEM_BUG_ON(!intel_iov_is_pf(iov));
-
-	mutex_lock(pf_provisioning_mutex(iov));
-
-	with_intel_runtime_pm(rpm, wakeref)
-		ret = i915_ggtt_restore_ptes(ggtt, node, buf, size,
-					     FIELD_PREP(I915_GGTT_RESTORE_PTES_VFID_MASK, vfid) |
-					     I915_GGTT_RESTORE_PTES_NEW_VFID);
-
-	mutex_unlock(pf_provisioning_mutex(iov));
-
-	return ret;
-}
diff --git a/drivers/gpu/drm/i915/gt/iov/intel_iov_state.h b/drivers/gpu/drm/i915/gt/iov/intel_iov_state.h
index 2306f39472c7..1b0db54e4baf 100644
--- a/drivers/gpu/drm/i915/gt/iov/intel_iov_state.h
+++ b/drivers/gpu/drm/i915/gt/iov/intel_iov_state.h
@@ -20,8 +20,6 @@ bool intel_iov_state_no_flr(struct intel_iov *iov, u32 vfid);
 int intel_iov_state_pause_vf(struct intel_iov *iov, u32 vfid);
 int intel_iov_state_resume_vf(struct intel_iov *iov, u32 vfid);
 int intel_iov_state_stop_vf(struct intel_iov *iov, u32 vfid);
-ssize_t intel_iov_state_save_ggtt(struct intel_iov *iov, u32 vfid, void *buf, size_t size);
-int intel_iov_state_restore_ggtt(struct intel_iov *iov, u32 vfid, const void *buf, size_t size);
 
 int intel_iov_state_process_guc2pf(struct intel_iov *iov,
 				   const u32 *msg, u32 len);
-- 
2.25.1

