From 37644a154979837bdb0be2b7b7d62fc504ee4e3a Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Tue, 12 Apr 2022 14:33:21 +0800
Subject: [PATCH 08/40] media: intel-ipu6: get TSC clock freqency in
 buttress_init()

Change Description:
The ref_clk is a static value per platform, no need to read
each timestamp calculation, so move it into buttress_init()

Signed-off-by: Bingbu Cao <bingbu.cao@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu-buttress.c | 54 +++++++++++++++-----------
 drivers/media/pci/intel/ipu-buttress.h |  1 +
 2 files changed, 32 insertions(+), 23 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-buttress.c b/drivers/media/pci/intel/ipu-buttress.c
index d0bb95c77174..f4c708240dba 100644
--- a/drivers/media/pci/intel/ipu-buttress.c
+++ b/drivers/media/pci/intel/ipu-buttress.c
@@ -1260,31 +1260,16 @@ int ipu_buttress_debugfs_init(struct ipu_device *isp)
 
 u64 ipu_buttress_tsc_ticks_to_ns(u64 ticks, const struct ipu_device *isp)
 {
-	u32 ref_clk, val;
 	u64 ns = ticks * 10000;
 
-	val = readl(isp->base + BUTTRESS_REG_BTRS_CTRL);
-	val &= BUTTRESS_REG_BTRS_CTRL_REF_CLK_IND;
-	val >>= 8;
-
-	switch (val) {
-	case 0x0:
-		ref_clk = 240;
-		break;
-	case 0x1:
-		ref_clk = 192;
-		break;
-	case 0x2:
-		ref_clk = 384;
-		break;
-	default:
-		dev_warn(&isp->pdev->dev,
-			 "Unsupported ref clock, use 19.2Mhz by default.\n");
-		ref_clk = 192;
-		break;
-	}
-
-	do_div(ns, ref_clk);
+	/*
+	 * converting TSC tick count to ns is calculated by:
+	 * Example (TSC clock frequency is 19.2MHz):
+	 * ns = ticks * 1000 000 000 / 19.2Mhz
+	 *    = ticks * 1000 000 000 / 19200000Hz
+	 *    = ticks * 10000 / 192 ns
+	 */
+	do_div(ns, isp->buttress.ref_clk);
 
 	return ns;
 }
@@ -1340,6 +1325,7 @@ int ipu_buttress_restore(struct ipu_device *isp)
 int ipu_buttress_init(struct ipu_device *isp)
 {
 	struct ipu_buttress *b = &isp->buttress;
+	u32 val;
 	int rval, ipc_reset_retry = BUTTRESS_CSE_IPC_RESET_RETRY;
 
 	mutex_init(&b->power_mutex);
@@ -1376,6 +1362,28 @@ int ipu_buttress_init(struct ipu_device *isp)
 	writel(BUTTRESS_IRQS, isp->base + BUTTRESS_REG_ISR_CLEAR);
 	writel(BUTTRESS_IRQS, isp->base + BUTTRESS_REG_ISR_ENABLE);
 
+	/* get ref_clk frequency by reading the indication in btrs control */
+	val = readl(isp->base + BUTTRESS_REG_BTRS_CTRL);
+	val &= BUTTRESS_REG_BTRS_CTRL_REF_CLK_IND;
+	val >>= 8;
+
+	switch (val) {
+	case 0x0:
+		b->ref_clk = 240;
+		break;
+	case 0x1:
+		b->ref_clk = 192;
+		break;
+	case 0x2:
+		b->ref_clk = 384;
+		break;
+	default:
+		dev_warn(&isp->pdev->dev,
+			 "Unsupported ref clock, use 19.2Mhz by default.\n");
+		b->ref_clk = 192;
+		break;
+	}
+
 	rval = device_create_file(&isp->pdev->dev,
 				  &dev_attr_psys_fused_min_freq);
 	if (rval) {
diff --git a/drivers/media/pci/intel/ipu-buttress.h b/drivers/media/pci/intel/ipu-buttress.h
index 6b49804f940c..5865a35eae7e 100644
--- a/drivers/media/pci/intel/ipu-buttress.h
+++ b/drivers/media/pci/intel/ipu-buttress.h
@@ -66,6 +66,7 @@ struct ipu_buttress {
 	u32 wdt_cached_value;
 	u8 psys_force_ratio;
 	bool force_suspend;
+	u32 ref_clk;
 };
 
 struct ipu_buttress_sensor_clk_freq {
-- 
2.25.1

