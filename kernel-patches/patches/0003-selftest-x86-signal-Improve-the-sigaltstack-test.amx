From 11aea9188f1ec0ad000fb25f38e784bf82a0b949 Mon Sep 17 00:00:00 2001
From: "Chang S. Bae" <chang.seok.bae@intel.com>
Date: Tue, 18 Jan 2022 16:16:09 -0800
Subject: [PATCH 3/5] selftest/x86/signal: Improve the sigaltstack test

With the STRICT_SIGALTSTACK_SIZE option, the kernel disallows any altstack
size below the minimum requirement advertised via AT_MINSIGSTKSZ. This is
new behavior with recent code changes.

Adjust to skip the test with an insufficient size when sigaltstack()
returns the ENOMEM error.

Also, add code to ensure the AT_MINSIGSTKSZ value is valid at first.

Signed-off-by: Chang S. Bae <chang.seok.bae@intel.com>
---
 tools/testing/selftests/x86/sigaltstack.c | 20 ++++++++++++++++++--
 1 file changed, 18 insertions(+), 2 deletions(-)

diff --git a/tools/testing/selftests/x86/sigaltstack.c b/tools/testing/selftests/x86/sigaltstack.c
index f689af75e979..e81431a495e6 100644
--- a/tools/testing/selftests/x86/sigaltstack.c
+++ b/tools/testing/selftests/x86/sigaltstack.c
@@ -88,8 +88,18 @@ static void sigalrm(int sig, siginfo_t *info, void *ctx_void)
 
 static void test_sigaltstack(void *altstack, unsigned long size)
 {
-	if (setup_altstack(altstack, size))
-		err(1, "sigaltstack()");
+	if (setup_altstack(altstack, size)) {
+		/*
+		 * With the STRICT_SIGALTSTACK_SIZE option, sigaltstack()
+		 * returns ENOMEM when a size less than at_minstack_size is
+		 * given.
+		 */
+		if (errno != ENOMEM || size > at_minstack_size)
+			err(1, "sigaltstack()");
+
+		printf("[NOTE]\tThe running kernel disallows an insufficient altstack.\n");
+		return;
+	}
 
 	sigalrm_expected = (size > at_minstack_size) ? true : false;
 
@@ -113,6 +123,12 @@ int main(void)
 	void *altstack;
 
 	at_minstack_size = getauxval(AT_MINSIGSTKSZ);
+	/*
+	 * getauxval() returns 0 for failure or success. But AT_MINSIGSTKSZ
+	 * will return non-zero value if implemented. Check for 0:
+	 */
+	if (at_minstack_size == 0)
+		err(1, "getauxval(AT_MINSIGSTKSZ)");
 
 	altstack = mmap(NULL, at_minstack_size + SIGSTKSZ, PROT_READ | PROT_WRITE,
 			MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);
-- 
2.32.0

