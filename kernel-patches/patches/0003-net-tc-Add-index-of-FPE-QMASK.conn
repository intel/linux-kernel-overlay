From 24ded6c9aeff54005ea00c2c7d6547a23c62c0e0 Mon Sep 17 00:00:00 2001
From: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
Date: Tue, 27 Jul 2021 17:03:09 +0800
Subject: [PATCH 03/13] net: tc: Add index of FPE QMASK

This is temporary workaround to cater EHL Kernel 5.4 which is using
same Iproute2-5.11.

The reason why this patch is needed is because the kernel space enum
index must be tally and sync with userspace.

This patch shall be revert back once EHL move to Kernel 5.10.

Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
---
 include/uapi/linux/pkt_sched.h | 1 +
 net/sched/sch_taprio.c         | 7 +++++++
 2 files changed, 8 insertions(+)

diff --git a/include/uapi/linux/pkt_sched.h b/include/uapi/linux/pkt_sched.h
index 2cad44d76eb2..04ff84684808 100644
--- a/include/uapi/linux/pkt_sched.h
+++ b/include/uapi/linux/pkt_sched.h
@@ -1243,6 +1243,7 @@ enum {
 	TCA_TAPRIO_ATTR_SCHED_CYCLE_TIME_EXTENSION, /* s64 */
 	TCA_TAPRIO_ATTR_FLAGS, /* u32 */
 	TCA_TAPRIO_ATTR_TXTIME_DELAY, /* u32 */
+	TCA_TAPRIO_ATTR_FPE_QMASK, /* u32 */
 	TCA_TAPRIO_ATTR_PREEMPT_TCS, /* u32 */
 	__TCA_TAPRIO_ATTR_MAX,
 };
diff --git a/net/sched/sch_taprio.c b/net/sched/sch_taprio.c
index e764d8167619..bf3c21837471 100644
--- a/net/sched/sch_taprio.c
+++ b/net/sched/sch_taprio.c
@@ -791,6 +791,7 @@ static const struct nla_policy taprio_policy[TCA_TAPRIO_ATTR_MAX + 1] = {
 	[TCA_TAPRIO_ATTR_SCHED_CYCLE_TIME_EXTENSION] = { .type = NLA_S64 },
 	[TCA_TAPRIO_ATTR_FLAGS]                      = { .type = NLA_U32 },
 	[TCA_TAPRIO_ATTR_TXTIME_DELAY]		     = { .type = NLA_U32 },
+	[TCA_TAPRIO_ATTR_FPE_QMASK]                  = { .type = NLA_S32 },
 	[TCA_TAPRIO_ATTR_PREEMPT_TCS]                = { .type = NLA_U32 },
 };
 
@@ -1539,6 +1540,12 @@ static int taprio_change(struct Qdisc *sch, struct nlattr *opt,
 					       mqprio->prio_tc_map[i]);
 	}
 
+	if (tb[TCA_TAPRIO_ATTR_FPE_QMASK]) {
+		NL_SET_ERR_MSG(extack, "fpe-qmask is only supported in 5.4 Kernel");
+		err = -EOPNOTSUPP;
+		goto free_sched;
+	}
+
 	/* It's valid to enable frame preemption without any kind of
 	 * offloading being enabled, so keep it separated.
 	 */
-- 
2.17.1

