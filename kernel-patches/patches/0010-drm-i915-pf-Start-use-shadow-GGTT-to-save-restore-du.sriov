From bacc91b5bbef5f29e002d241ab84e1cf3ce5e19b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Piotr=20Pi=C3=B3rkowski?= <piotr.piorkowski@intel.com>
Date: Fri, 26 Apr 2024 09:26:47 +0200
Subject: [PATCH 10/14] drm/i915/pf: Start use shadow GGTT to save/restore
 during migration for Media gen13
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

For paltform with Media gen13, we need another way to access GGTT than
through BAR0 to be able to do GGTT save/restore during migration.
Let's start using a shadow copy of GGTT that we store on PF for this purpose.

HSDES: 22018453856

Signed-off-by: Piotr Pi√≥rkowski <piotr.piorkowski@intel.com>
Signed-off-by: Zawawi, Muhammad Zul Husni <muhammad.zul.husni.zawawi@intel.com>
---
 drivers/gpu/drm/i915/gt/iov/intel_iov_state.c | 25 ++++++++++++++-----
 1 file changed, 19 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/iov/intel_iov_state.c b/drivers/gpu/drm/i915/gt/iov/intel_iov_state.c
index c29a56c5d605..67430fb1ce4d 100644
--- a/drivers/gpu/drm/i915/gt/iov/intel_iov_state.c
+++ b/drivers/gpu/drm/i915/gt/iov/intel_iov_state.c
@@ -578,8 +578,15 @@ ssize_t intel_iov_state_save_ggtt(struct intel_iov *iov, u32 vfid, void *buf, si
 		goto out;
 	}
 
-	with_intel_runtime_pm(rpm, wakeref)
-		ret = i915_ggtt_save_ptes(ggtt, node, buf, size, I915_GGTT_SAVE_PTES_NO_VFID);
+	with_intel_runtime_pm(rpm, wakeref) {
+		unsigned int flags = I915_GGTT_SAVE_PTES_NO_VFID;
+
+		/* Wa_22018453856 */
+		if (i915_ggtt_require_binder(iov_to_i915(iov)))
+			ret = intel_iov_ggtt_shadow_save(iov, vfid, buf, size, flags);
+		else
+			ret = i915_ggtt_save_ptes(ggtt, node, buf, size, flags);
+	}
 
 out:
 	mutex_unlock(pf_provisioning_mutex(iov));
@@ -610,10 +617,16 @@ int intel_iov_state_restore_ggtt(struct intel_iov *iov, u32 vfid, const void *bu
 
 	mutex_lock(pf_provisioning_mutex(iov));
 
-	with_intel_runtime_pm(rpm, wakeref)
-		ret = i915_ggtt_restore_ptes(ggtt, node, buf, size,
-					     FIELD_PREP(I915_GGTT_RESTORE_PTES_VFID_MASK, vfid) |
-					     I915_GGTT_RESTORE_PTES_NEW_VFID);
+	with_intel_runtime_pm(rpm, wakeref) {
+		unsigned int flags = FIELD_PREP(I915_GGTT_RESTORE_PTES_VFID_MASK, vfid) |
+						I915_GGTT_RESTORE_PTES_NEW_VFID;
+
+		/* Wa_22018453856 */
+		if (i915_ggtt_require_binder(iov_to_i915(iov)))
+			ret = intel_iov_ggtt_shadow_restore(iov, vfid, buf, size, flags);
+		else
+			ret = i915_ggtt_restore_ptes(ggtt, node, buf, size, flags);
+	}
 
 	mutex_unlock(pf_provisioning_mutex(iov));
 
-- 
2.25.1

