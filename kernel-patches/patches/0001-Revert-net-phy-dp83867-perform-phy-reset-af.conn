From 1e735fe55b0aae5387bc70c3904e498d15ac5834 Mon Sep 17 00:00:00 2001
From: Choong Yong Liang <yong.liang.choong@intel.com>
Date: Thu, 3 Aug 2023 16:06:20 +0800
Subject: [PATCH 1/3] Revert "net: phy: dp83867: perform phy reset after
 modifying auto-neg setting"

This reverts commit c5f09a5ad09e2c0737d13d6fae2ecd92c96042ae.

The recent commit "22cc989f2b10327a39943ff16a7d1baf290e6421"
("Revert "net: phy: dp83867: perform soft reset and retain established
link"") changed "DP83867_SW_RESTART" to "DP83867_SW_RESET" in the
"dp83867_phy_reset" function. This change resulted in a failure to change
the speed from 1000Mbps to 100Mbps and 10Mbps for TI PHY.

In the commit "c5f09a5ad09e2c0737d13d6fae2ecd92c96042ae"
("net: phy: dp83867: perform phy reset after modifying auto-neg setting"),
"dp83867_config_aneg" function was introduced to modify the
auto-negotiation setting. The "dp83867_phy_reset" function was called after
modifying the auto-negotiation setting. To fix commit
"c5f09a5ad09e2c0737d13d6fae2ecd92c96042ae", "DP83867_SW_RESTART" setting in
"dp83867_phy_reset" was needed.

However, it was found that the solution introduced in commit
"c5f09a5ad09e2c0737d13d6fae2ecd92c96042ae" did not fully fix the
long time to complete auto-negotiation issue, and it also caused a new
issue where the speed could not be changed from 1000Mbps to
100Mbps and 10Mbps.

As a result, the decision was made to revert the commit
"c5f09a5ad09e2c0737d13d6fae2ecd92c96042ae" to address the
introduced issues.

Fixes: 22cc989f2b10 ("Revert "net: phy: dp83867: perform soft reset and retain established link"")
Signed-off-by: Choong Yong Liang <yong.liang.choong@intel.com>
---
 drivers/net/phy/dp83867.c | 12 ------------
 1 file changed, 12 deletions(-)

diff --git a/drivers/net/phy/dp83867.c b/drivers/net/phy/dp83867.c
index 7591334e997a..76fe7e7d9ac9 100644
--- a/drivers/net/phy/dp83867.c
+++ b/drivers/net/phy/dp83867.c
@@ -966,17 +966,6 @@ static int dp83867_loopback(struct phy_device *phydev, bool enable)
 			  enable ? BMCR_LOOPBACK : 0);
 }
 
-static int dp83867_config_aneg(struct phy_device *phydev)
-{
-	int err;
-
-	err = genphy_config_aneg(phydev);
-	if (err < 0)
-		return err;
-
-	return dp83867_phy_reset(phydev);
-}
-
 static struct phy_driver dp83867_driver[] = {
 	{
 		.phy_id		= DP83867_PHY_ID,
@@ -1004,7 +993,6 @@ static struct phy_driver dp83867_driver[] = {
 
 		.link_change_notify = dp83867_link_change_notify,
 		.set_loopback	= dp83867_loopback,
-		.config_aneg	= dp83867_config_aneg,
 	},
 };
 module_phy_driver(dp83867_driver);
-- 
2.17.1

