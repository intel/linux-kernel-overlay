From e872adc2bfad6abfc049618387ebcbf635192d57 Mon Sep 17 00:00:00 2001
From: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date: Fri, 6 Sep 2019 13:42:46 +0300
Subject: [PATCH 3/8] serial: 8250_dwlib: Support for 9-bit transfer mode

Interim. As the ABI is not final, this patch is
"proof-of-concept" only.

This enables 9-bit transfer mode if the user requests it
with the new (temporary) flags in struct serial_rs485.

Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
---
 drivers/tty/serial/8250/8250_dwlib.c | 27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/drivers/tty/serial/8250/8250_dwlib.c b/drivers/tty/serial/8250/8250_dwlib.c
index ef50ee8fb018..4ae33744da85 100644
--- a/drivers/tty/serial/8250/8250_dwlib.c
+++ b/drivers/tty/serial/8250/8250_dwlib.c
@@ -16,6 +16,9 @@
 #define DW_UART_DE_EN	0xb0 /* Driver Output Enable Register */
 #define DW_UART_RE_EN	0xb4 /* Receiver Output Enable Register */
 #define DW_UART_DLF	0xc0 /* Divisor Latch Fraction Register */
+#define DW_UART_RAR	0xc4 /* Receive Address Register */
+#define DW_UART_TAR	0xc8 /* Transmit Address Register */
+#define DW_UART_LCR_EXT	0xcc /* Line Extended Control Register */
 #define DW_UART_CPR	0xf4 /* Component Parameter Register */
 #define DW_UART_UCV	0xf8 /* UART Component Version */
 
@@ -25,6 +28,12 @@
 #define DW_UART_TCR_DE_POL		BIT(2)
 #define DW_UART_TCR_XFER_MODE(_mode_)	((_mode_) << 3)
 
+/* Line Extended Control Register bits */
+#define DW_UART_LCR_EXT_DLS_E		BIT(0)
+#define DW_UART_LCR_EXT_ADDR_MATCH	BIT(1)
+#define DW_UART_LCR_EXT_SEND_ADDR	BIT(2)
+#define DW_UART_LCR_EXT_TRANSMIT_MODE	BIT(3)
+
 /* Component Parameter Register bits */
 #define DW_UART_CPR_ABP_DATA_WIDTH	(3 << 0)
 #define DW_UART_CPR_AFCE_MODE		(1 << 4)
@@ -98,10 +107,12 @@ void dw8250_do_set_termios(struct uart_port *p, struct ktermios *termios, struct
 EXPORT_SYMBOL_GPL(dw8250_do_set_termios);
 static int dw8250_rs485_config(struct uart_port *p, struct serial_rs485 *rs485)
 {
+	u32 lcr = 0;
 	u32 tcr;
 
 	/* Clearing unsupported flags. */
-	rs485->flags &= SER_RS485_ENABLED;
+	rs485->flags &= SER_RS485_ENABLED | SER_RS485_9BIT_ENABLED |
+			SER_RS485_9BIT_TX_ADDR | SER_RS485_9BIT_RX_ADDR;
 
 	tcr = dw8250_readl_ext(p, DW_UART_TCR);
 
@@ -132,6 +143,20 @@ static int dw8250_rs485_config(struct uart_port *p, struct serial_rs485 *rs485)
 	rs485->delay_rts_before_send = 0;
 	rs485->delay_rts_after_send = 0;
 
+	/* XXX: Proof of concept for 9-bit transfer mode. */
+	if (rs485->flags & SER_RS485_9BIT_ENABLED) {
+		lcr = DW_UART_LCR_EXT_DLS_E;
+		if (SER_RS485_9BIT_TX_ADDR) {
+			dw8250_writel_ext(p, DW_UART_TAR, rs485->padding[0]);
+			lcr |= DW_UART_LCR_EXT_SEND_ADDR;
+		} else if (SER_RS485_9BIT_RX_ADDR) {
+			dw8250_writel_ext(p, DW_UART_RAR, rs485->padding[0]);
+			lcr |= DW_UART_LCR_EXT_ADDR_MATCH;
+		}
+	}
+
+	dw8250_writel_ext(p, DW_UART_LCR_EXT, lcr);
+
 	p->rs485 = *rs485;
 
 	return 0;
-- 
2.25.1

