From e084822fd32eda46cf1c758ef3115703b998337e Mon Sep 17 00:00:00 2001
From: "D, Lakshmi Sowjanya" <lakshmi.sowjanya.d@intel.com>
Date: Thu, 27 May 2021 22:00:16 +0530
Subject: [PATCH 25/42] ptp: S/W workaround for PMC TGPIO h/w bug

Returns the previous device time if the event count is not incremented
with change in TCV value.

Signed-off-by: D, Lakshmi Sowjanya <lakshmi.sowjanya.d@intel.com>
---
 drivers/ptp/ptp-intel-pmc-tgpio.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/drivers/ptp/ptp-intel-pmc-tgpio.c b/drivers/ptp/ptp-intel-pmc-tgpio.c
index b15b7d676e09..8d4f0d403677 100644
--- a/drivers/ptp/ptp-intel-pmc-tgpio.c
+++ b/drivers/ptp/ptp-intel-pmc-tgpio.c
@@ -486,6 +486,9 @@ static int intel_pmc_tgpio_counttstamp(struct ptp_clock_info *info,
 	u32 dt_lo;
 	struct timespec64 dt_ts;
 	struct timespec64 tsc_now;
+	static u32 dt_lo_prev[2] = { 0, 0 };
+	static struct timespec64 dt_ts_prev[2] = {{ 0, 0 }};
+	static unsigned long long prev_count[2] = { 0, 0 };
 
 	mutex_lock(&intel_pmc_tgpio->lock);
 	while (intel_pmc_tgpio->pin[count->index].busy) {
@@ -515,7 +518,20 @@ static int intel_pmc_tgpio_counttstamp(struct ptp_clock_info *info,
 	else
 		dt_ts = convert_art_to_tsc_ns(((u64)dt_hi_e << 32) | dt_lo);
 
+	/* Return previous device time if the event_count
+	 * isn't incremented with TCV value
+	 */
+	if (count->event_count == prev_count[count->index] ||
+			dt_lo_prev[count->index] == dt_lo) {
+		count->event_count = prev_count[count->index];
+		dt_lo = dt_lo_prev[count->index];
+		dt_ts = dt_ts_prev[count->index];
+	}
+
 	count->device_time = ts64_to_ptp_clock_time(dt_ts);
+	prev_count[count->index] = count->event_count;
+	dt_lo_prev[count->index] = dt_lo;
+	dt_ts_prev[count->index] = dt_ts;
 
 	mutex_lock(&intel_pmc_tgpio->lock);
 	intel_pmc_tgpio->pin[count->index].busy = false;
-- 
2.25.1

