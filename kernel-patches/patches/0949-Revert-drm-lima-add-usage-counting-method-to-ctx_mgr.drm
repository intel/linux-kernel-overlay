From 45fcc92bf6221bab13444328e209dbcac4acabbc Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Tue, 4 Apr 2023 08:26:01 +0800
Subject: [PATCH 0949/2071] Revert "drm/lima: add usage counting method to
 ctx_mgr"

This reverts commit bccafec957a5c4b22ac29e53a39e82d0a0008348.

This is due to the depend commit has been reverted on upstream:
commit baad10973fdb ("Revert "drm/scheduler: track GPU active time per entity"")

Acked-by: Emil Velikov <emil.l.velikov@gmail.com>
Signed-off-by: Qiang Yu <yuq825@gmail.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20230404002601.24136-4-yq882255@163.com
---
 drivers/gpu/drm/lima/lima_ctx.c | 30 +-----------------------------
 drivers/gpu/drm/lima/lima_ctx.h |  3 ---
 2 files changed, 1 insertion(+), 32 deletions(-)

diff --git a/drivers/gpu/drm/lima/lima_ctx.c b/drivers/gpu/drm/lima/lima_ctx.c
index e008e586fad0..891d5cd5019a 100644
--- a/drivers/gpu/drm/lima/lima_ctx.c
+++ b/drivers/gpu/drm/lima/lima_ctx.c
@@ -15,7 +15,6 @@ int lima_ctx_create(struct lima_device *dev, struct lima_ctx_mgr *mgr, u32 *id)
 	if (!ctx)
 		return -ENOMEM;
 	ctx->dev = dev;
-	ctx->mgr = mgr;
 	kref_init(&ctx->refcnt);
 
 	for (i = 0; i < lima_pipe_num; i++) {
@@ -43,17 +42,10 @@ int lima_ctx_create(struct lima_device *dev, struct lima_ctx_mgr *mgr, u32 *id)
 static void lima_ctx_do_release(struct kref *ref)
 {
 	struct lima_ctx *ctx = container_of(ref, struct lima_ctx, refcnt);
-	struct lima_ctx_mgr *mgr = ctx->mgr;
 	int i;
 
-	for (i = 0; i < lima_pipe_num; i++) {
-		struct lima_sched_context *context = &ctx->context[i];
-		struct drm_sched_entity *entity = &context->base;
-
-		mgr->elapsed_ns[i] += entity->elapsed_ns;
-
+	for (i = 0; i < lima_pipe_num; i++)
 		lima_sched_context_fini(ctx->dev->pipe + i, ctx->context + i);
-	}
 	kfree(ctx);
 }
 
@@ -107,23 +99,3 @@ void lima_ctx_mgr_fini(struct lima_ctx_mgr *mgr)
 	xa_destroy(&mgr->handles);
 	mutex_destroy(&mgr->lock);
 }
-
-void lima_ctx_mgr_usage(struct lima_ctx_mgr *mgr, u64 usage[lima_pipe_num])
-{
-	struct lima_ctx *ctx;
-	unsigned long id;
-
-	for (int i = 0; i < lima_pipe_num; i++)
-		usage[i] = mgr->elapsed_ns[i];
-
-	mutex_lock(&mgr->lock);
-	xa_for_each(&mgr->handles, id, ctx) {
-		for (int i = 0; i < lima_pipe_num; i++) {
-			struct lima_sched_context *context = &ctx->context[i];
-			struct drm_sched_entity *entity = &context->base;
-
-			usage[i] += entity->elapsed_ns;
-		}
-	}
-	mutex_unlock(&mgr->lock);
-}
diff --git a/drivers/gpu/drm/lima/lima_ctx.h b/drivers/gpu/drm/lima/lima_ctx.h
index 6068863880eb..74e2be09090f 100644
--- a/drivers/gpu/drm/lima/lima_ctx.h
+++ b/drivers/gpu/drm/lima/lima_ctx.h
@@ -12,7 +12,6 @@
 struct lima_ctx {
 	struct kref refcnt;
 	struct lima_device *dev;
-	struct lima_ctx_mgr *mgr;
 	struct lima_sched_context context[lima_pipe_num];
 	atomic_t guilty;
 
@@ -24,7 +23,6 @@ struct lima_ctx {
 struct lima_ctx_mgr {
 	struct mutex lock;
 	struct xarray handles;
-	u64 elapsed_ns[lima_pipe_num];
 };
 
 int lima_ctx_create(struct lima_device *dev, struct lima_ctx_mgr *mgr, u32 *id);
@@ -33,6 +31,5 @@ struct lima_ctx *lima_ctx_get(struct lima_ctx_mgr *mgr, u32 id);
 void lima_ctx_put(struct lima_ctx *ctx);
 void lima_ctx_mgr_init(struct lima_ctx_mgr *mgr);
 void lima_ctx_mgr_fini(struct lima_ctx_mgr *mgr);
-void lima_ctx_mgr_usage(struct lima_ctx_mgr *mgr, u64 usage[lima_pipe_num]);
 
 #endif
-- 
2.25.1

