From 6f0c6f497542fe56179933b123e09a6872bcaf30 Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Tue, 12 Apr 2022 14:33:29 +0800
Subject: [PATCH 10/40] media: intel-ipu6: try to get lock before do runtime pm
 ops in poll thread

Change Description:
The psys irq poll thread has a race condition with psys
release, it may cause the psys has no chance to suspend
as the PM usage counter is greater than 0 after psys release.
This patch try to get lock before do runtime pm ops in
poll thread to fix this potential issue.

Signed-off-by: Bingbu Cao <bingbu.cao@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu-psys.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-psys.c b/drivers/media/pci/intel/ipu-psys.c
index 242be1f8131a..7bfe301384eb 100644
--- a/drivers/media/pci/intel/ipu-psys.c
+++ b/drivers/media/pci/intel/ipu-psys.c
@@ -1613,15 +1613,17 @@ static int ipu_psys_isr_run(void *data)
 
 	while (!kthread_should_stop()) {
 		usleep_range(100, 500);
-#ifdef CONFIG_PM
-		r = pm_runtime_get_if_in_use(&psys->adev->dev);
-		if (!r || WARN_ON_ONCE(r < 0))
-			continue;
-#endif
 
 		r = mutex_trylock(&psys->mutex);
 		if (!r)
 			continue;
+#ifdef CONFIG_PM
+		r = pm_runtime_get_if_in_use(&psys->adev->dev);
+		if (!r || WARN_ON_ONCE(r < 0)) {
+			mutex_unlock(&psys->mutex);
+			continue;
+		}
+#endif
 
 		ipu_psys_handle_events(psys);
 
-- 
2.25.1

