From dcb4b792c8923d3b6f1fe463e373011cab83f7f3 Mon Sep 17 00:00:00 2001
From: Ankit Nautiyal <ankit.k.nautiyal@intel.com>
Date: Wed, 27 Apr 2022 15:03:55 +0530
Subject: [PATCH 1061/1096] drm/i915/hdmi21/mtl: Add provision for FRL mode
 while computing output format

Currently the output format computation during hdmi compute config works
for the TMDS mode of transmission. New helpers are required to compute
output format and clock for FRL mode.
This patch adds tmds prefix to the function to distinguish from helper
to compute clock for FRL mode of transmission, and make changes to
existing helpers to pass flag for enabling FRL mode.

Signed-off-by: Ankit Nautiyal <ankit.k.nautiyal@intel.com>
---
 drivers/gpu/drm/i915/display/intel_hdmi.c | 28 ++++++++++++++++-------
 1 file changed, 20 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/i915/display/intel_hdmi.c b/drivers/gpu/drm/i915/display/intel_hdmi.c
index 7cae765b944b..ca758d7a4f7c 100644
--- a/drivers/gpu/drm/i915/display/intel_hdmi.c
+++ b/drivers/gpu/drm/i915/display/intel_hdmi.c
@@ -2116,9 +2116,9 @@ static int intel_hdmi_compute_bpc(struct intel_encoder *encoder,
 	return -EINVAL;
 }
 
-static int intel_hdmi_compute_clock(struct intel_encoder *encoder,
-				    struct intel_crtc_state *crtc_state,
-				    bool respect_downstream_limits)
+static int intel_hdmi_compute_tmds_clock(struct intel_encoder *encoder,
+					 struct intel_crtc_state *crtc_state,
+					 bool respect_downstream_limits)
 {
 	struct drm_i915_private *i915 = to_i915(encoder->base.dev);
 	const struct drm_display_mode *adjusted_mode =
@@ -2150,6 +2150,17 @@ static int intel_hdmi_compute_clock(struct intel_encoder *encoder,
 	return 0;
 }
 
+static int intel_hdmi_compute_clock(struct intel_encoder *encoder,
+				    struct intel_crtc_state *crtc_state,
+				    bool respect_downstream_limits,
+				    bool enable_frl)
+{
+	if (enable_frl)
+		return -EINVAL;
+
+	return intel_hdmi_compute_tmds_clock(encoder, crtc_state, respect_downstream_limits);
+}
+
 bool intel_hdmi_limited_color_range(const struct intel_crtc_state *crtc_state,
 				    const struct drm_connector_state *conn_state)
 {
@@ -2212,7 +2223,8 @@ intel_hdmi_output_format(const struct intel_crtc_state *crtc_state,
 static int intel_hdmi_compute_output_format(struct intel_encoder *encoder,
 					    struct intel_crtc_state *crtc_state,
 					    const struct drm_connector_state *conn_state,
-					    bool respect_downstream_limits)
+					    bool respect_downstream_limits,
+					    bool enable_frl)
 {
 	struct intel_connector *connector = to_intel_connector(conn_state->connector);
 	const struct drm_display_mode *adjusted_mode = &crtc_state->hw.adjusted_mode;
@@ -2230,7 +2242,7 @@ static int intel_hdmi_compute_output_format(struct intel_encoder *encoder,
 		crtc_state->output_format = INTEL_OUTPUT_FORMAT_RGB;
 	}
 
-	ret = intel_hdmi_compute_clock(encoder, crtc_state, respect_downstream_limits);
+	ret = intel_hdmi_compute_clock(encoder, crtc_state, respect_downstream_limits, enable_frl);
 	if (ret) {
 		if (intel_hdmi_is_ycbcr420(crtc_state) ||
 		    !connector->base.ycbcr_420_allowed ||
@@ -2238,7 +2250,7 @@ static int intel_hdmi_compute_output_format(struct intel_encoder *encoder,
 			return ret;
 
 		crtc_state->output_format = intel_hdmi_output_format(crtc_state, connector, true);
-		ret = intel_hdmi_compute_clock(encoder, crtc_state, respect_downstream_limits);
+		ret = intel_hdmi_compute_clock(encoder, crtc_state, respect_downstream_limits, enable_frl);
 	}
 
 	return ret;
@@ -2329,9 +2341,9 @@ int intel_hdmi_compute_config(struct intel_encoder *encoder,
 	 * Try to respect downstream TMDS clock limits first, if
 	 * that fails assume the user might know something we don't.
 	 */
-	ret = intel_hdmi_compute_output_format(encoder, pipe_config, conn_state, true);
+	ret = intel_hdmi_compute_output_format(encoder, pipe_config, conn_state, true, false);
 	if (ret)
-		ret = intel_hdmi_compute_output_format(encoder, pipe_config, conn_state, false);
+		ret = intel_hdmi_compute_output_format(encoder, pipe_config, conn_state, false, false);
 	if (ret) {
 		drm_dbg_kms(&dev_priv->drm,
 			    "unsupported HDMI clock (%d kHz), rejecting mode\n",
-- 
2.25.1

