From fc4c1aa5f7a2cd81ae48e62ad49fe7cd80410218 Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Tue, 21 Sep 2021 12:30:20 +0800
Subject: [PATCH 06/30] Revert "drm: mxsfb: Increase number of outstanding
 requests on V4 and newer HW"

This reverts commit 1a0014c1c62cb2d7d8cc0d9d6ffd398c7ba79ccc.
---
 drivers/gpu/drm/mxsfb/mxsfb_drv.c  | 3 ---
 drivers/gpu/drm/mxsfb/mxsfb_drv.h  | 1 -
 drivers/gpu/drm/mxsfb/mxsfb_kms.c  | 8 --------
 drivers/gpu/drm/mxsfb/mxsfb_regs.h | 8 --------
 4 files changed, 20 deletions(-)

diff --git a/drivers/gpu/drm/mxsfb/mxsfb_drv.c b/drivers/gpu/drm/mxsfb/mxsfb_drv.c
index f31e8ef3c258..17f26052e845 100644
--- a/drivers/gpu/drm/mxsfb/mxsfb_drv.c
+++ b/drivers/gpu/drm/mxsfb/mxsfb_drv.c
@@ -51,7 +51,6 @@ static const struct mxsfb_devdata mxsfb_devdata[] = {
 		.hs_wdth_mask	= 0xff,
 		.hs_wdth_shift	= 24,
 		.has_overlay	= false,
-		.has_ctrl2	= false,
 	},
 	[MXSFB_V4] = {
 		.transfer_count	= LCDC_V4_TRANSFER_COUNT,
@@ -60,7 +59,6 @@ static const struct mxsfb_devdata mxsfb_devdata[] = {
 		.hs_wdth_mask	= 0x3fff,
 		.hs_wdth_shift	= 18,
 		.has_overlay	= false,
-		.has_ctrl2	= true,
 	},
 	[MXSFB_V6] = {
 		.transfer_count	= LCDC_V4_TRANSFER_COUNT,
@@ -69,7 +67,6 @@ static const struct mxsfb_devdata mxsfb_devdata[] = {
 		.hs_wdth_mask	= 0x3fff,
 		.hs_wdth_shift	= 18,
 		.has_overlay	= true,
-		.has_ctrl2	= true,
 	},
 };
 
diff --git a/drivers/gpu/drm/mxsfb/mxsfb_drv.h b/drivers/gpu/drm/mxsfb/mxsfb_drv.h
index 7c720e226fdf..399d23e91ed1 100644
--- a/drivers/gpu/drm/mxsfb/mxsfb_drv.h
+++ b/drivers/gpu/drm/mxsfb/mxsfb_drv.h
@@ -22,7 +22,6 @@ struct mxsfb_devdata {
 	unsigned int	hs_wdth_mask;
 	unsigned int	hs_wdth_shift;
 	bool		has_overlay;
-	bool		has_ctrl2;
 };
 
 struct mxsfb_drm_private {
diff --git a/drivers/gpu/drm/mxsfb/mxsfb_kms.c b/drivers/gpu/drm/mxsfb/mxsfb_kms.c
index 007ea29abfcc..bc6d19d999ac 100644
--- a/drivers/gpu/drm/mxsfb/mxsfb_kms.c
+++ b/drivers/gpu/drm/mxsfb/mxsfb_kms.c
@@ -107,14 +107,6 @@ static void mxsfb_enable_controller(struct mxsfb_drm_private *mxsfb)
 		clk_prepare_enable(mxsfb->clk_disp_axi);
 	clk_prepare_enable(mxsfb->clk);
 
-	/* Increase number of outstanding requests on all supported IPs */
-	if (mxsfb->devdata->has_ctrl2) {
-		reg = readl(mxsfb->base + LCDC_V4_CTRL2);
-		reg &= ~CTRL2_SET_OUTSTANDING_REQS_MASK;
-		reg |= CTRL2_SET_OUTSTANDING_REQS_16;
-		writel(reg, mxsfb->base + LCDC_V4_CTRL2);
-	}
-
 	/* If it was disabled, re-enable the mode again */
 	writel(CTRL_DOTCLK_MODE, mxsfb->base + LCDC_CTRL + REG_SET);
 
diff --git a/drivers/gpu/drm/mxsfb/mxsfb_regs.h b/drivers/gpu/drm/mxsfb/mxsfb_regs.h
index 694fea13e893..df90e960f495 100644
--- a/drivers/gpu/drm/mxsfb/mxsfb_regs.h
+++ b/drivers/gpu/drm/mxsfb/mxsfb_regs.h
@@ -15,7 +15,6 @@
 #define LCDC_CTRL			0x00
 #define LCDC_CTRL1			0x10
 #define LCDC_V3_TRANSFER_COUNT		0x20
-#define LCDC_V4_CTRL2			0x20
 #define LCDC_V4_TRANSFER_COUNT		0x30
 #define LCDC_V4_CUR_BUF			0x40
 #define LCDC_V4_NEXT_BUF		0x50
@@ -62,13 +61,6 @@
 #define CTRL1_CUR_FRAME_DONE_IRQ_EN	BIT(13)
 #define CTRL1_CUR_FRAME_DONE_IRQ	BIT(9)
 
-#define CTRL2_SET_OUTSTANDING_REQS_1	0
-#define CTRL2_SET_OUTSTANDING_REQS_2	(0x1 << 21)
-#define CTRL2_SET_OUTSTANDING_REQS_4	(0x2 << 21)
-#define CTRL2_SET_OUTSTANDING_REQS_8	(0x3 << 21)
-#define CTRL2_SET_OUTSTANDING_REQS_16	(0x4 << 21)
-#define CTRL2_SET_OUTSTANDING_REQS_MASK	(0x7 << 21)
-
 #define TRANSFER_COUNT_SET_VCOUNT(x)	(((x) & 0xffff) << 16)
 #define TRANSFER_COUNT_GET_VCOUNT(x)	(((x) >> 16) & 0xffff)
 #define TRANSFER_COUNT_SET_HCOUNT(x)	((x) & 0xffff)
-- 
2.27.0

