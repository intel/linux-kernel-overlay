From 67f7504ac1521c4e21e7f835f661cd121a4c6d2a Mon Sep 17 00:00:00 2001
From: Chen Meng J <meng.j.chen@intel.com>
Date: Tue, 8 Aug 2023 13:24:42 +0800
Subject: [PATCH 05/20] intel_ipu6_isys: Add video_nr module parameter

Add a video_nr module int array parameter so that the isys /dev/video#
nodes can be assigned a fixed number instead of taking the first
available free number.

Both Ubuntu and Fedora by default use the IPU6 camera stack
together with v4l2loopback for compat with apps which expect
a regular video4linux2 device.

Most apps open /dev/video0 by default so we want that to be
the v4l2loopback device. But currently if the ipu6-drivers
load first they become /dev/video0.

This new video_nr module parameter allows distros to specify different
fixed numbers for the intel_ipu6_isys /dev/video# nodes, so that
v4l2loopback becomes /dev/video0 independent of the probe ordering.

Signed-off-by: Hans de Goede <hdegoede@redhat.com>
Signed-off-by: Hao Yao <hao.yao@intel.com>
Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
---
 drivers/media/pci/intel/ipu-isys-video.c | 18 ++++++++++++++++--
 1 file changed, 16 insertions(+), 2 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-isys-video.c b/drivers/media/pci/intel/ipu-isys-video.c
index 2e912693620d..a3bf08cbdeed 100644
--- a/drivers/media/pci/intel/ipu-isys-video.c
+++ b/drivers/media/pci/intel/ipu-isys-video.c
@@ -30,6 +30,13 @@
 #include "ipu-fw-isys.h"
 #include "ipu-fw-com.h"
 
+#define MAX_VIDEO_DEVICES	8
+
+static int video_nr[MAX_VIDEO_DEVICES] = { [0 ...(MAX_VIDEO_DEVICES - 1)] = -1 };
+module_param_array(video_nr, int, NULL, 0444);
+MODULE_PARM_DESC(video_nr,
+		 "video device numbers (-1=auto, 0=/dev/video0, etc.)");
+
 const struct ipu_isys_pixelformat ipu_isys_pfmts_be_soc[] = {
 	{V4L2_PIX_FMT_Y10, 16, 10, 0, MEDIA_BUS_FMT_Y10_1X10,
 	 IPU_FW_ISYS_FRAME_FORMAT_RAW16},
@@ -2026,8 +2033,9 @@ int ipu_isys_video_init(struct ipu_isys_video *av,
 			unsigned int pad, unsigned long pad_flags,
 			unsigned int flags)
 {
+	static atomic_t video_dev_count = ATOMIC_INIT(0);
 	const struct v4l2_ioctl_ops *ioctl_ops = NULL;
-	int rval;
+	int rval, video_dev_nr;
 	int i;
 
 	mutex_init(&av->mutex);
@@ -2079,9 +2087,15 @@ int ipu_isys_video_init(struct ipu_isys_video *av,
 	set_bit(V4L2_FL_USES_V4L2_FH, &av->vdev.flags);
 	video_set_drvdata(&av->vdev, av);
 
+	video_dev_nr = atomic_inc_return(&video_dev_count) - 1;
+	if (video_dev_nr < MAX_VIDEO_DEVICES)
+		video_dev_nr = video_nr[video_dev_nr];
+	else
+		video_dev_nr = -1;
+
 	mutex_lock(&av->mutex);
 
-	rval = video_register_device(&av->vdev, VFL_TYPE_VIDEO, -1);
+	rval = video_register_device(&av->vdev, VFL_TYPE_VIDEO, video_dev_nr);
 	if (rval)
 		goto out_media_entity_cleanup;
 
-- 
2.25.1

