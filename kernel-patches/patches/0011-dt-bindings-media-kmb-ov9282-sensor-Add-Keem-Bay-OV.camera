From 0f6318d7b44f12a455e127f41ac813d2640405f7 Mon Sep 17 00:00:00 2001
From: Martina Krasteva <martinax.krasteva@intel.com>
Date: Fri, 26 Jun 2020 11:43:04 +0100
Subject: [PATCH 11/42] dt-bindings: media: kmb-ov9282-sensor: Add Keem Bay
 OV9282 sensor

The Keem Bay ov9282 sensor is an OmniVision Black&White CMOS active
pixel digital image sensor with an active array size of 1280H x 800V. It
is programmable through I2C interface. The I2C address is fixed to 0x60
or 0x70  as per sensor data sheet. Image data is sent through MIPI
CSI-2, which is configured as 2 lanes at 400 Mbps.

Signed-off-by: Martina Krasteva <martinax.krasteva@intel.com>
Signed-off-by: Daniele Alessandrelli <daniele.alessandrelli@intel.com>
---
 .../media/i2c/intel,kmb-ov9282-sensor.yaml    | 112 ++++++++++++++++++
 1 file changed, 112 insertions(+)
 create mode 100644 Documentation/devicetree/bindings/media/i2c/intel,kmb-ov9282-sensor.yaml

diff --git a/Documentation/devicetree/bindings/media/i2c/intel,kmb-ov9282-sensor.yaml b/Documentation/devicetree/bindings/media/i2c/intel,kmb-ov9282-sensor.yaml
new file mode 100644
index 000000000000..34a326a1c9fb
--- /dev/null
+++ b/Documentation/devicetree/bindings/media/i2c/intel,kmb-ov9282-sensor.yaml
@@ -0,0 +1,112 @@
+# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
+# Copyright (C) 2020 Intel Corporation
+%YAML 1.2
+---
+$id: http://devicetree.org/schemas/media/i2c/intel,kmb-ov9282-sensor.yaml#
+$schema: http://devicetree.org/meta-schemas/core.yaml#
+
+title: KeemBay OV9282 Sensor
+
+maintainers:
+  - Daniele Alessandrelli <daniele.alessandrelli@intel.com>
+
+description: |-
+  The KeemBay ov9282 sensor is an OmniVision Black&White CMOS active pixel
+  digital image sensor with an active array size of 1280H x 800V. It is
+  programmable through I2C interface. The I2C client address is fixed to 0x60
+  or 0x70 as per sensor data sheet. Image data is sent through MIPI CSI-2,
+  which is configured as 2 lanes at 400 Mbps.
+
+  The sensor can also be probed as platform device and later on registered to
+  the I2C bus. Probing as platform device is used when different sensors with
+  the same I2C client address must be able to be attached to one slot. They are
+  probed with priority. Example slot with multiple sensors attached
+
+properties:
+  compatible:
+    oneOf:
+      - items:
+        - const: intel,kmb-ov9282-sensor
+      - items:
+        - const: intel,kmb-ov9282-sensor-p
+  reg:
+    description: I2C address
+    maxItems: 1
+
+  # See ../video-interfaces.txt for more details
+  flash-leds:
+    description: See ../video-interfaces.txt
+  lens-focus:
+    description: See ../video-interfaces.txt
+  port:
+    type: object
+    properties:
+      endpoint:
+        type: object
+        properties:
+          data-lanes:
+              description: See ../video-interfaces.txt
+          clock-lanes:
+              description: See ../video-interfaces.txt
+          link-frequencies:
+            $ref: /schemas/types.yaml#/definitions/uint64-array
+            description: See ../video-interfaces.txt
+          remote-endpoint:
+              description: See ../video-interfaces.txt
+
+        required:
+          - link-frequencies
+
+required:
+  - compatible
+  - port
+
+examples:
+  - |
+    i2c0 {
+          #address-cells = <1>;
+          #size-cells = <0>;
+          label = "LS-I2C1";
+
+          kmb-camera-sensor {
+                reg = <0x60>;
+                compatible = "intel,kmb-ov9282-sensor";
+                port {
+                      kmb_sen_i2c:endpoint {
+                            remote-endpoint = <&cam>;
+                            link-frequencies =
+                                  /bits/ 64 <199200000 210000000 499200000>;
+                            clock-lanes = <0>;
+                            data-lanes = <1 2>;
+                      };
+                };
+          };
+    };
+  - |
+    #include <dt-bindings/gpio/gpio.h>
+    keembay_cam_a {
+          #address-cells = <1>;
+          #size-cells = <0>;
+          compatible = "intel,kmb-ov9282-sensor-p",
+          i2c-bus = <&i2c1>;
+          lens-focus = <&kmb_lens2>;
+          flash-leds = <&kmb_flash2>;
+          eeprom = <&cama_eeprom>;
+
+          reset-gpios = <&pca0 6 GPIO_ACTIVE_HIGH>;
+
+          detect-gpios = <&pca1 17 GPIO_ACTIVE_HIGH>,
+                <&pca1 6 GPIO_ACTIVE_HIGH>,
+                <&pca1 16 GPIO_ACTIVE_HIGH>;
+          clock-names = "inclk";
+          clocks = <&kmb_clock_buff 0x0>;
+
+          port {
+                cam_a: endpoint {
+                      remote-endpoint = <&cam0>;
+                      link-frequencies = /bits/ 64 <210000000>;
+                      clock-lanes = <0>;
+                      data-lanes = <1 2 3 4>;
+                };
+          };
+    };
-- 
2.17.1

