From f256170196bd8850489acae373cfd60f2f966de3 Mon Sep 17 00:00:00 2001
From: Mika Westerberg <mika.westerberg@linux.intel.com>
Date: Tue, 28 Sep 2021 15:07:36 +0300
Subject: [PATCH 14/20] EMBARGO: pinctrl: meteorlake: Add Meteor Lake SoC M/P
 support

Taken from Chap03_MTLS-MP_IOE-MP_Pins_Chap18_GPIO_Automation_r152.xlsx.

Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
---
 drivers/pinctrl/intel/pinctrl-meteorlake.c | 333 ++++++++++++++++++++-
 1 file changed, 332 insertions(+), 1 deletion(-)

diff --git a/drivers/pinctrl/intel/pinctrl-meteorlake.c b/drivers/pinctrl/intel/pinctrl-meteorlake.c
index 7591de73d2a4..df1c12c5abdb 100644
--- a/drivers/pinctrl/intel/pinctrl-meteorlake.c
+++ b/drivers/pinctrl/intel/pinctrl-meteorlake.c
@@ -41,6 +41,337 @@
 		.ngpps = ARRAY_SIZE(g),			\
 	}
 
+/* Meteor Lake-P */
+static const struct pinctrl_pin_desc mtlp_pins[] = {
+	/* GPP_V */
+	PINCTRL_PIN(0, "BATLOW_B"),
+	PINCTRL_PIN(1, "AC_PRESENT"),
+	PINCTRL_PIN(2, "SOC_WAKE_B"),
+	PINCTRL_PIN(3, "PWRBTN_B"),
+	PINCTRL_PIN(4, "SLP_S3_B"),
+	PINCTRL_PIN(5, "SLP_S4_B"),
+	PINCTRL_PIN(6, "SLP_A_B"),
+	PINCTRL_PIN(7, "GPP_V_7"),
+	PINCTRL_PIN(8, "SUSCLK"),
+	PINCTRL_PIN(9, "SLP_WLAN_B"),
+	PINCTRL_PIN(10, "SLP_S5_B"),
+	PINCTRL_PIN(11, "LANPHYPC"),
+	PINCTRL_PIN(12, "SLP_LAN_B"),
+	PINCTRL_PIN(13, "GPP_V_13"),
+	PINCTRL_PIN(14, "WAKE_B"),
+	PINCTRL_PIN(15, "GPP_V_15"),
+	PINCTRL_PIN(16, "GPP_V_16"),
+	PINCTRL_PIN(17, "GPP_V_17"),
+	PINCTRL_PIN(18, "GPP_V_18"),
+	PINCTRL_PIN(19, "CATERR_B"),
+	PINCTRL_PIN(20, "GPP_V_20"),
+	PINCTRL_PIN(21, "GPP_V_21"),
+	PINCTRL_PIN(22, "GPP_V_22"),
+	PINCTRL_PIN(23, "DSI_DE_TE_1_DISP_UTILS"),
+	/* GPP_C */
+	PINCTRL_PIN(24, "SMBCLK"),
+	PINCTRL_PIN(25, "SMBDATA"),
+	PINCTRL_PIN(26, "SMBALERT_B"),
+	PINCTRL_PIN(27, "SML0CLK"),
+	PINCTRL_PIN(28, "SML0DATA"),
+	PINCTRL_PIN(29, "SML0ALERT_B"),
+	PINCTRL_PIN(30, "SML1CLK"),
+	PINCTRL_PIN(31, "SML1DATA"),
+	PINCTRL_PIN(32, "SML1ALERT_B"),
+	PINCTRL_PIN(33, "SRCCLKREQ0_B"),
+	PINCTRL_PIN(34, "SRCCLKREQ1_B"),
+	PINCTRL_PIN(35, "SRCCLKREQ2_B"),
+	PINCTRL_PIN(36, "SRCCLKREQ3_B"),
+	PINCTRL_PIN(37, "SRCCLKREQ4_B"),
+	PINCTRL_PIN(38, "GPP_C_14"),
+	PINCTRL_PIN(39, "GPP_C_15"),
+	PINCTRL_PIN(40, "TBT_LSX0_A"),
+	PINCTRL_PIN(41, "TBT_LSX0_B"),
+	PINCTRL_PIN(42, "TBT_LSX1_A"),
+	PINCTRL_PIN(43, "TBT_LSX1_B"),
+	PINCTRL_PIN(44, "TBT_LSX2_A"),
+	PINCTRL_PIN(45, "TBT_LSX2_B"),
+	PINCTRL_PIN(46, "TBT_LSX3_A"),
+	PINCTRL_PIN(47, "I2S1_SCLK"),
+	/* GPP_A */
+	PINCTRL_PIN(48, "I2S1_SFRM"),
+	PINCTRL_PIN(49, "I2S1_RXD"),
+	PINCTRL_PIN(50, "I2S1_TXD"),
+	PINCTRL_PIN(51, "ESPI_IO_3"),
+	PINCTRL_PIN(52, "ESPI_CS0_B"),
+	PINCTRL_PIN(53, "ESPI_CLK"),
+	PINCTRL_PIN(54, "ESPI_RESET_B"),
+	PINCTRL_PIN(55, "GPP_A_7"),
+	PINCTRL_PIN(56, "GPP_A_8"),
+	PINCTRL_PIN(57, "GPP_A_9"),
+	PINCTRL_PIN(58, "GPP_A_10"),
+	PINCTRL_PIN(59, "PMC_I2C_SDA"),
+	PINCTRL_PIN(60, "PMC_I2C_SCL"),
+	PINCTRL_PIN(61, "ESPI_CS1_B"),
+	PINCTRL_PIN(62, "ESPI_CS2_B"),
+	PINCTRL_PIN(63, "ESPI_CS3_B"),
+	PINCTRL_PIN(64, "ESPI_ALERT0_B"),
+	PINCTRL_PIN(65, "ESPI_ALERT1_B"),
+	PINCTRL_PIN(66, "ESPI_ALERT2_B"),
+	PINCTRL_PIN(67, "ESPI_ALERT3_B"),
+	PINCTRL_PIN(68, "ADR_COMPLETE"),
+	PINCTRL_PIN(69, "PMCALERT_B"),
+	PINCTRL_PIN(70, "GPP_A_22"),
+	PINCTRL_PIN(71, "GPP_A_23"),
+	PINCTRL_PIN(72, "ESPI_CLK_LOOPBK"),
+	/* GPP_E */
+	PINCTRL_PIN(73, "SATAXPCIE_0"),
+	PINCTRL_PIN(74, "USBC_SMLACLK"),
+	PINCTRL_PIN(75, "USBC_SMLADATA"),
+	PINCTRL_PIN(76, "CPU_GP_0"),
+	PINCTRL_PIN(77, "SATA_DEVSLP_0"),
+	PINCTRL_PIN(78, "SATA_DEVSLP_1"),
+	PINCTRL_PIN(79, "GPP_E_6"),
+	PINCTRL_PIN(80, "GPP_E_7"),
+	PINCTRL_PIN(81, "DDPA_CTRLDATA"),
+	PINCTRL_PIN(82, "USB2_OC0_B"),
+	PINCTRL_PIN(83, "GPP_E_10"),
+	PINCTRL_PIN(84, "GPP_E_11"),
+	PINCTRL_PIN(85, "GPP_E_12"),
+	PINCTRL_PIN(86, "GPP_E_13"),
+	PINCTRL_PIN(87, "DDSP_HPDA"),
+	PINCTRL_PIN(88, "CPU_GP_2"),
+	PINCTRL_PIN(89, "CPU_GP_3"),
+	PINCTRL_PIN(90, "GPP_E_17"),
+	PINCTRL_PIN(91, "GPP_E_18"),
+	PINCTRL_PIN(92, "GPP_E_19"),
+	PINCTRL_PIN(93, "GPP_E_20"),
+	PINCTRL_PIN(94, "GPP_E_21"),
+	PINCTRL_PIN(95, "DDPA_CTRLCLK"),
+	PINCTRL_PIN(96, "GPP_E_23"),
+	PINCTRL_PIN(97, "THC0_GSPI0_CLK_LOOPBK"),
+	/* GPP_H */
+	PINCTRL_PIN(98, "GPP_H_0"),
+	PINCTRL_PIN(99, "GPP_H_1"),
+	PINCTRL_PIN(100, "GPP_H_2"),
+	PINCTRL_PIN(101, "GPP_H_3"),
+	PINCTRL_PIN(102, "I2C2_SDA"),
+	PINCTRL_PIN(103, "I2C2_SCL"),
+	PINCTRL_PIN(104, "I2C3_SDA"),
+	PINCTRL_PIN(105, "I2C3_SCL"),
+	PINCTRL_PIN(106, "UART0_RXD"),
+	PINCTRL_PIN(107, "UART0_TXD"),
+	PINCTRL_PIN(108, "UART0_RTS_B"),
+	PINCTRL_PIN(109, "UART0_CTS_B"),
+	PINCTRL_PIN(110, "GPP_H_12"),
+	PINCTRL_PIN(111, "CPU_C10_GATE_B"),
+	PINCTRL_PIN(112, "ISH_UART1_RXD"),
+	PINCTRL_PIN(113, "ISH_UART1_TXD"),
+	PINCTRL_PIN(114, "DDPB_CTRLCLK"),
+	PINCTRL_PIN(115, "DDPB_CTRLDATA"),
+	PINCTRL_PIN(116, "GPP_H_18"),
+	PINCTRL_PIN(117, "I2C0_SDA"),
+	PINCTRL_PIN(118, "I2C0_SCL"),
+	PINCTRL_PIN(119, "I2C1_SDA"),
+	PINCTRL_PIN(120, "I2C1_SCL"),
+	PINCTRL_PIN(121, "GPP_H_23"),
+	PINCTRL_PIN(122, "LPI3C1_CLK_LOOPBK"),
+	PINCTRL_PIN(123, "LPI3C0_CLK_LOOPBK"),
+	/* GPP_F */
+	PINCTRL_PIN(124, "CNV_BRI_DT"),
+	PINCTRL_PIN(125, "CNV_BRI_RSP"),
+	PINCTRL_PIN(126, "CNV_RGI_DT"),
+	PINCTRL_PIN(127, "CNV_RGI_RSP"),
+	PINCTRL_PIN(128, "CNV_RF_RESET_B"),
+	PINCTRL_PIN(129, "GPP_F_5"),
+	PINCTRL_PIN(130, "CNV_PA_BLANKING"),
+	PINCTRL_PIN(131, "FUSA_DIAGTEST_EN"),
+	PINCTRL_PIN(132, "FUSA_DIAGTEST_MODE"),
+	PINCTRL_PIN(133, "BOOTMPC"),
+	PINCTRL_PIN(134, "SATAXPCIE_1"),
+	PINCTRL_PIN(135, "GPP_F_11"),
+	PINCTRL_PIN(136, "GSXDOUT"),
+	PINCTRL_PIN(137, "GSXSLOAD"),
+	PINCTRL_PIN(138, "GSXDIN"),
+	PINCTRL_PIN(139, "GSXSRESETB"),
+	PINCTRL_PIN(140, "GSXCLK"),
+	PINCTRL_PIN(141, "GMII_MDC_0"),
+	PINCTRL_PIN(142, "GMII_MDIO_0"),
+	PINCTRL_PIN(143, "GPP_F_19"),
+	PINCTRL_PIN(144, "GPP_F_20"),
+	PINCTRL_PIN(145, "GPP_F_21"),
+	PINCTRL_PIN(146, "GPP_F_22"),
+	PINCTRL_PIN(147, "GPP_F_23"),
+	PINCTRL_PIN(148, "THC1_GSPI1_CLK_LOOPBK"),
+	PINCTRL_PIN(149, "GSPI0A_CLK_LOOPBK"),
+	/* SPI0 */
+	PINCTRL_PIN(150, "SPI0_IO_2"),
+	PINCTRL_PIN(151, "SPI0_IO_3"),
+	PINCTRL_PIN(152, "SPI0_MOSI_IO_0"),
+	PINCTRL_PIN(153, "SPI0_MISO_IO_1"),
+	PINCTRL_PIN(154, "SPI0_TPM_CS_B"),
+	PINCTRL_PIN(155, "SPI0_FLASH_0_CS_B"),
+	PINCTRL_PIN(156, "SPI0_FLASH_1_CS_B"),
+	PINCTRL_PIN(157, "SPI0_CLK"),
+	PINCTRL_PIN(158, "L_BKLTEN"),
+	PINCTRL_PIN(159, "L_BKLTCTL"),
+	PINCTRL_PIN(160, "L_VDDEN"),
+	PINCTRL_PIN(161, "SYS_PWROK"),
+	PINCTRL_PIN(162, "SYS_RESET_B"),
+	PINCTRL_PIN(163, "MLK_RST_B"),
+	PINCTRL_PIN(164, "SPI0_CLK_LOOPBK"),
+	/* vGPIO_3 */
+	PINCTRL_PIN(165, "ESPI_USB_OCB_0"),
+	PINCTRL_PIN(166, "ESPI_USB_OCB_1"),
+	PINCTRL_PIN(167, "ESPI_USB_OCB_2"),
+	PINCTRL_PIN(168, "ESPI_USB_OCB_3"),
+	PINCTRL_PIN(169, "USB_CPU_OCB_0"),
+	PINCTRL_PIN(170, "USB_CPU_OCB_1"),
+	PINCTRL_PIN(171, "USB_CPU_OCB_2"),
+	PINCTRL_PIN(172, "USB_CPU_OCB_3"),
+	PINCTRL_PIN(173, "TS0_IN_INT"),
+	PINCTRL_PIN(174, "TS1_IN_INT"),
+	PINCTRL_PIN(175, "THC0_WOT_INT"),
+	PINCTRL_PIN(176, "THC1_WOT_INT"),
+	PINCTRL_PIN(177, "THC0_WHC_INT"),
+	PINCTRL_PIN(178, "THC1_WHC_INT"),
+	/* GPP_S */
+	PINCTRL_PIN(179, "SNDW0_CLK"),
+	PINCTRL_PIN(180, "SNDW0_DATA0"),
+	PINCTRL_PIN(181, "SNDW1_CLK"),
+	PINCTRL_PIN(182, "SNDW1_DATA"),
+	PINCTRL_PIN(183, "SNDW2_CLK"),
+	PINCTRL_PIN(184, "SNDW2_DATA"),
+	PINCTRL_PIN(185, "SNDW3_CLK"),
+	PINCTRL_PIN(186, "SNDW3_DATA"),
+	/* GPP_B */
+	PINCTRL_PIN(187, "ADM_VID_0"),
+	PINCTRL_PIN(188, "ADM_VID_1"),
+	PINCTRL_PIN(189, "GPP_B_2"),
+	PINCTRL_PIN(190, "GPP_B_3"),
+	PINCTRL_PIN(191, "GPP_B_4"),
+	PINCTRL_PIN(192, "GPP_B_5"),
+	PINCTRL_PIN(193, "GPP_B_6"),
+	PINCTRL_PIN(194, "GPP_B_7"),
+	PINCTRL_PIN(195, "GPP_B_8"),
+	PINCTRL_PIN(196, "GPP_B_9"),
+	PINCTRL_PIN(197, "GPP_B_10"),
+	PINCTRL_PIN(198, "USB2_OC1_B"),
+	PINCTRL_PIN(199, "SLP_S0_B"),
+	PINCTRL_PIN(200, "PLTRST_B"),
+	PINCTRL_PIN(201, "USB2_OC2_B"),
+	PINCTRL_PIN(202, "USB2_OC3_B"),
+	PINCTRL_PIN(203, "GPP_B_16"),
+	PINCTRL_PIN(204, "GPP_B_17"),
+	PINCTRL_PIN(205, "ISH_I2C2_SDA"),
+	PINCTRL_PIN(206, "ISH_I2C2_SCL"),
+	PINCTRL_PIN(207, "GPP_B_20"),
+	PINCTRL_PIN(208, "GPP_B_21"),
+	PINCTRL_PIN(209, "TIME_SYNC_0"),
+	PINCTRL_PIN(210, "TIME_SYNC_1"),
+	PINCTRL_PIN(211, "ISHI3C0_CLK_LOOPBK"),
+	/* GPP_D */
+	PINCTRL_PIN(212, "IMGCLKOUT_1"),
+	PINCTRL_PIN(213, "I2C3A_SDA"),
+	PINCTRL_PIN(214, "I2C3A_SCL"),
+	PINCTRL_PIN(215, "CPU_GP_1"),
+	PINCTRL_PIN(216, "IMGCLKOUT_0"),
+	PINCTRL_PIN(217, "GPP_D_5"),
+	PINCTRL_PIN(218, "GPP_D_6"),
+	PINCTRL_PIN(219, "IMGCLKOUT_4"),
+	PINCTRL_PIN(220, "GPP_D_8"),
+	PINCTRL_PIN(221, "GPP_D_9"),
+	PINCTRL_PIN(222, "HDA_BCLK"),
+	PINCTRL_PIN(223, "HDA_SYNC"),
+	PINCTRL_PIN(224, "HDA_SDO"),
+	PINCTRL_PIN(225, "HDA_SDI_0"),
+	PINCTRL_PIN(226, "GPP_D_14"),
+	PINCTRL_PIN(227, "GPP_D_15"),
+	PINCTRL_PIN(228, "HDA_SDI_1"),
+	PINCTRL_PIN(229, "HDA_RST_B"),
+	PINCTRL_PIN(230, "SRCCLKREQ6_B"),
+	PINCTRL_PIN(231, "SRCCLKREQ7_B"),
+	PINCTRL_PIN(232, "SRCCLKREQ8_B"),
+	PINCTRL_PIN(233, "UFS_REFCLK"),
+	PINCTRL_PIN(234, "BPKI3C_SDA"),
+	PINCTRL_PIN(235, "BPKI3C_SCL"),
+	PINCTRL_PIN(236, "BOOTHALT_B"),
+	/* vGPIO */
+	PINCTRL_PIN(237, "CNV_BTEN"),
+	PINCTRL_PIN(238, "CNV_BT_HOST_WAKEB"),
+	PINCTRL_PIN(239, "CNV_BT_IF_SELECT"),
+	PINCTRL_PIN(240, "vCNV_BT_UART_TXD"),
+	PINCTRL_PIN(241, "vCNV_BT_UART_RXD"),
+	PINCTRL_PIN(242, "vCNV_BT_UART_CTS_B"),
+	PINCTRL_PIN(243, "vCNV_BT_UART_RTS_B"),
+	PINCTRL_PIN(244, "vCNV_MFUART1_TXD"),
+	PINCTRL_PIN(245, "vCNV_MFUART1_RXD"),
+	PINCTRL_PIN(246, "vCNV_MFUART1_CTS_B"),
+	PINCTRL_PIN(247, "vCNV_MFUART1_RTS_B"),
+	PINCTRL_PIN(248, "vUART0_TXD"),
+	PINCTRL_PIN(249, "vUART0_RXD"),
+	PINCTRL_PIN(250, "vUART0_CTS_B"),
+	PINCTRL_PIN(251, "vUART0_RTS_B"),
+	PINCTRL_PIN(252, "vISH_UART0_TXD"),
+	PINCTRL_PIN(253, "vISH_UART0_RXD"),
+	PINCTRL_PIN(254, "vISH_UART0_CTS_B"),
+	PINCTRL_PIN(255, "vISH_UART0_RTS_B"),
+	PINCTRL_PIN(256, "vCNV_BT_I2S_BCLK"),
+	PINCTRL_PIN(257, "vCNV_BT_I2S_WS_SYNC"),
+	PINCTRL_PIN(258, "vCNV_BT_I2S_SDO"),
+	PINCTRL_PIN(259, "vCNV_BT_I2S_SDI"),
+	PINCTRL_PIN(260, "vI2S2_SCLK"),
+	PINCTRL_PIN(261, "vI2S2_SFRM"),
+	PINCTRL_PIN(262, "vI2S2_TXD"),
+	PINCTRL_PIN(263, "vI2S2_RXD"),
+	PINCTRL_PIN(264, "vCNV_BT_I2S_BCLK_2"),
+	PINCTRL_PIN(265, "vCNV_BT_I2S_WS_SYNC_2"),
+	PINCTRL_PIN(266, "vCNV_BT_I2S_SDO_2"),
+	PINCTRL_PIN(267, "vCNV_BT_I2S_SDI_2"),
+	PINCTRL_PIN(268, "vI2S2_SCLK_2"),
+	PINCTRL_PIN(269, "vI2S2_SFRM_2"),
+	PINCTRL_PIN(270, "vI2S2_TXD_2"),
+	PINCTRL_PIN(271, "vI2S2_RXD_2"),
+};
+
+static const struct intel_padgroup mtlp_community0_gpps[] = {
+	MTL_GPP(0, 0, 23),	/* GPP_V */
+	MTL_GPP(1, 24, 47),	/* GPP_C */
+};
+
+static const struct intel_padgroup mtlp_community1_gpps[] = {
+	MTL_GPP(0, 48, 72),	/* GPP_A */
+	MTL_GPP(1, 73, 97),	/* GPP_E */
+};
+
+static const struct intel_padgroup mtlp_community3_gpps[] = {
+	MTL_GPP(0, 98, 123),	/* GPP_H */
+	MTL_GPP(1, 124, 149),	/* GPP_F */
+	MTL_GPP(2, 150, 164),	/* SPI0 */
+	MTL_GPP(3, 165, 178),	/* vGPIO_3 */
+};
+
+static const struct intel_padgroup mtlp_community4_gpps[] = {
+	MTL_GPP(0, 179, 186),	/* GPP_S */
+};
+
+static const struct intel_padgroup mtlp_community5_gpps[] = {
+	MTL_GPP(0, 187, 211),	/* GPP_B */
+	MTL_GPP(1, 212, 236),	/* GPP_D */
+	MTL_GPP(2, 237, 268),	/* vGPIO_0 */
+	MTL_GPP(3, 269, 271),	/* vGPIO_1 */
+};
+
+static const struct intel_community mtlp_communities[] = {
+	MTL_COMMUNITY(0, 0, 47, mtlp_community0_gpps),
+	MTL_COMMUNITY(1, 48, 97, mtlp_community1_gpps),
+	MTL_COMMUNITY(2, 98, 178, mtlp_community3_gpps),
+	MTL_COMMUNITY(3, 179, 186, mtlp_community4_gpps),
+	MTL_COMMUNITY(4, 187, 271, mtlp_community5_gpps),
+};
+
+static const struct intel_pinctrl_soc_data mtlp_soc_data = {
+	.pins = mtlp_pins,
+	.npins = ARRAY_SIZE(mtlp_pins),
+	.communities = mtlp_communities,
+	.ncommunities = ARRAY_SIZE(mtlp_communities),
+};
+
 /* Meteor Lake-S */
 static const struct pinctrl_pin_desc mtls_pins[] = {
 	/* GPP_D */
@@ -428,7 +759,7 @@ static const struct intel_pinctrl_soc_data mtls_soc_data = {
 };
 
 static const struct acpi_device_id mtl_pinctrl_acpi_match[] = {
-	{ "INTC1083", (kernel_ulong_t)&mtls_soc_data },
+	{ "INTC1083", (kernel_ulong_t)&mtlp_soc_data },
 	{ "INTC1086", (kernel_ulong_t)&mtls_soc_data },
 	{ }
 };
-- 
2.32.0

