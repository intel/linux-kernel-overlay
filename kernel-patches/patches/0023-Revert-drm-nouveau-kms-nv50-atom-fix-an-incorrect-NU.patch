From 950c586e464c4c18e06b1410308ae9540be25a84 Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Tue, 19 Jul 2022 14:49:48 +0800
Subject: [PATCH 23/62] Revert "drm/nouveau/kms/nv50-: atom: fix an incorrect
 NULL check on list iterator"

This reverts commit addf0ae792589f33b2d7daabd53e30fc5bc33780.
---
 drivers/gpu/drm/nouveau/dispnv50/atom.h |  6 +++---
 drivers/gpu/drm/nouveau/dispnv50/crc.c  | 27 +++++--------------------
 2 files changed, 8 insertions(+), 25 deletions(-)

diff --git a/drivers/gpu/drm/nouveau/dispnv50/atom.h b/drivers/gpu/drm/nouveau/dispnv50/atom.h
index 93f8f4f64578..3d82b3c67dec 100644
--- a/drivers/gpu/drm/nouveau/dispnv50/atom.h
+++ b/drivers/gpu/drm/nouveau/dispnv50/atom.h
@@ -160,14 +160,14 @@ nv50_head_atom_get(struct drm_atomic_state *state, struct drm_crtc *crtc)
 static inline struct drm_encoder *
 nv50_head_atom_get_encoder(struct nv50_head_atom *atom)
 {
-	struct drm_encoder *encoder;
+	struct drm_encoder *encoder = NULL;
 
 	/* We only ever have a single encoder */
 	drm_for_each_encoder_mask(encoder, atom->state.crtc->dev,
 				  atom->state.encoder_mask)
-		return encoder;
+		break;
 
-	return NULL;
+	return encoder;
 }
 
 #define nv50_wndw_atom(p) container_of((p), struct nv50_wndw_atom, state)
diff --git a/drivers/gpu/drm/nouveau/dispnv50/crc.c b/drivers/gpu/drm/nouveau/dispnv50/crc.c
index 5624a716e11c..66f32d965c72 100644
--- a/drivers/gpu/drm/nouveau/dispnv50/crc.c
+++ b/drivers/gpu/drm/nouveau/dispnv50/crc.c
@@ -411,18 +411,9 @@ void nv50_crc_atomic_check_outp(struct nv50_atom *atom)
 		struct nv50_head_atom *armh = nv50_head_atom(old_crtc_state);
 		struct nv50_head_atom *asyh = nv50_head_atom(new_crtc_state);
 		struct nv50_outp_atom *outp_atom;
-		struct nouveau_encoder *outp;
-		struct drm_encoder *encoder, *enc;
-
-		enc = nv50_head_atom_get_encoder(armh);
-		if (!enc)
-			continue;
-
-		outp = nv50_real_outp(enc);
-		if (!outp)
-			continue;
-
-		encoder = &outp->base.base;
+		struct nouveau_encoder *outp =
+			nv50_real_outp(nv50_head_atom_get_encoder(armh));
+		struct drm_encoder *encoder = &outp->base.base;
 
 		if (!asyh->clr.crc)
 			continue;
@@ -473,16 +464,8 @@ void nv50_crc_atomic_set(struct nv50_head *head,
 	struct drm_device *dev = crtc->dev;
 	struct nv50_crc *crc = &head->crc;
 	const struct nv50_crc_func *func = nv50_disp(dev)->core->func->crc;
-	struct nouveau_encoder *outp;
-	struct drm_encoder *encoder;
-
-	encoder = nv50_head_atom_get_encoder(asyh);
-	if (!encoder)
-		return;
-
-	outp = nv50_real_outp(encoder);
-	if (!outp)
-		return;
+	struct nouveau_encoder *outp =
+		nv50_real_outp(nv50_head_atom_get_encoder(asyh));
 
 	func->set_src(head, outp->or,
 		      nv50_crc_source_type(outp, asyh->crc.src),
-- 
2.27.0

