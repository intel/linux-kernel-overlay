From 0b8403e7016e95aec1783aa9418a534038c6a246 Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Thu, 6 Jul 2023 15:04:17 +0800
Subject: [PATCH 0076/2351] Revert "FIXME: drm/i915/mtl: Add temporary WA for
 MTL lost H2G"

This reverts commit 3be5f2a8e9f9344be7682a140e58d72064544907.
---
 drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c | 89 -----------------------
 drivers/gpu/drm/i915/gt/uc/intel_guc_ct.h | 19 ++---
 2 files changed, 5 insertions(+), 103 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c b/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c
index 5071b8a5ba56b..1803a633ed648 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c
@@ -18,16 +18,6 @@ static inline struct intel_guc *ct_to_guc(struct intel_guc_ct *ct)
 	return container_of(ct, struct intel_guc, ct);
 }
 
-static inline struct intel_gt *ct_to_gt(struct intel_guc_ct *ct)
-{
-	return guc_to_gt(ct_to_guc(ct));
-}
-
-static inline struct drm_i915_private *ct_to_i915(struct intel_guc_ct *ct)
-{
-	return ct_to_gt(ct)->i915;
-}
-
 #define CT_ERROR(_ct, _fmt, ...) \
 	guc_err(ct_to_guc(_ct), "CT: " _fmt, ##__VA_ARGS__)
 #ifdef CONFIG_DRM_I915_DEBUG_GUC
@@ -89,8 +79,6 @@ enum { CTB_SEND = 0, CTB_RECV = 1 };
 
 enum { CTB_OWNER_HOST = 0 };
 
-/* FIXME: MTL cache coherency issue - HSD 22016122933 */
-static noinline void mtl_workaround_worker_func(struct work_struct *wrk);
 static void ct_receive_tasklet_func(struct tasklet_struct *t);
 static void ct_incoming_request_worker_func(struct work_struct *w);
 
@@ -108,13 +96,6 @@ void intel_guc_ct_init_early(struct intel_guc_ct *ct)
 	INIT_WORK(&ct->requests.worker, ct_incoming_request_worker_func);
 	tasklet_setup(&ct->receive_tasklet, ct_receive_tasklet_func);
 	init_waitqueue_head(&ct->wq);
-
-	/* FIXME: MTL cache coherency issue - HSD 22016122933 */
-	if (IS_METEORLAKE(ct_to_i915(ct))) {
-		ct->mtl_workaround.delay = msecs_to_jiffies(100); /* 100 ms */
-		INIT_DELAYED_WORK(&ct->mtl_workaround.work,
-				  mtl_workaround_worker_func);
-	}
 }
 
 static void guc_ct_buffer_desc_init(struct guc_ct_buffer_desc *desc)
@@ -271,15 +252,6 @@ int intel_guc_ct_init(struct intel_guc_ct *ct)
 	return 0;
 }
 
-void intel_guc_ct_sanitize(struct intel_guc_ct *ct)
-{
-	ct->enabled = false;
-
-	/* FIXME: MTL cache coherency issue - HSD 22016122933 */
-	if (IS_METEORLAKE(ct_to_i915(ct)) && ct->mtl_workaround.work.wq)
-		cancel_delayed_work_sync(&ct->mtl_workaround.work);
-}
-
 /**
  * intel_guc_ct_fini - Fini buffer-based communication
  * @ct: pointer to CT struct
@@ -290,10 +262,6 @@ void intel_guc_ct_fini(struct intel_guc_ct *ct)
 {
 	GEM_BUG_ON(ct->enabled);
 
-	/* FIXME: MTL cache coherency issue - HSD 22016122933 */
-	if (IS_METEORLAKE(ct_to_i915(ct)) && ct->mtl_workaround.work.wq)
-		cancel_delayed_work_sync(&ct->mtl_workaround.work);
-
 	tasklet_kill(&ct->receive_tasklet);
 	i915_vma_unpin_and_release(&ct->vma, I915_VMA_RELEASE_MAP);
 	memset(ct, 0, sizeof(*ct));
@@ -352,11 +320,6 @@ int intel_guc_ct_enable(struct intel_guc_ct *ct)
 	ct->enabled = true;
 	ct->stall_time = KTIME_MAX;
 
-	/* FIXME: MTL cache coherency issue - HSD 22016122933 */
-	if (IS_METEORLAKE(ct_to_i915(ct)))
-		mod_delayed_work(system_highpri_wq, &ct->mtl_workaround.work,
-				 ct->mtl_workaround.delay);
-
 	return 0;
 
 err_out:
@@ -375,9 +338,6 @@ void intel_guc_ct_disable(struct intel_guc_ct *ct)
 	GEM_BUG_ON(!ct->enabled);
 
 	ct->enabled = false;
-	/* FIXME: MTL cache coherency issue - HSD 22016122933 */
-	if (IS_METEORLAKE(ct_to_i915(ct)))
-		cancel_delayed_work_sync(&ct->mtl_workaround.work);
 
 	if (intel_guc_is_fw_running(guc)) {
 		ct_control_enable(ct, false);
@@ -468,18 +428,6 @@ static int ct_write(struct intel_guc_ct *ct,
 
 	/* now update descriptor */
 	WRITE_ONCE(desc->tail, tail);
-	/* FIXME: MTL cache coherency issue - HSD 22016122933 */
-	if (IS_METEORLAKE(ct_to_i915(ct))) {
-		u32 desc_tail = READ_ONCE(desc->tail);
-
-		if (tail != desc_tail) {
-			CT_ERROR(ct, "Lost H2G: %u/%u\n", tail, desc_tail);
-			WRITE_ONCE(desc->tail, tail);
-			READ_ONCE(desc->tail);
-			intel_uncore_read(ct_to_gt(ct)->uncore,
-					  ct_to_guc(ct)->notify_reg);
-		}
-	}
 
 	return 0;
 
@@ -1264,43 +1212,6 @@ void intel_guc_ct_event_handler(struct intel_guc_ct *ct)
 	ct_try_receive_message(ct);
 }
 
-/* FIXME: There is an known H2G loss issue that may be
- * caused by MTL cache coherence issue. This temporary WA will:
- * 1. Detect H2G loss and print to dmesg.
- * 2. When triggered, rewrite CTB to resume communication
- * HSD: 22016122933
- */
-static noinline void mtl_workaround_worker_func(struct work_struct *wrk)
-{
-	struct intel_guc_ct *ct = container_of(wrk, typeof(*ct),
-					     mtl_workaround.work.work);
-
-	if (ct->enabled) {
-		struct intel_guc_ct_buffer *send_ctb = &ct->ctbs.send;
-		struct guc_ct_buffer_desc *send_desc = send_ctb->desc;
-		u32 send_tail;
-		u32 desc_tail;
-		unsigned long spin_flags;
-
-		spin_lock_irqsave(&send_ctb->lock, spin_flags);
-
-		send_tail = send_ctb->tail;
-		desc_tail = READ_ONCE(send_desc->tail);
-		if (send_tail != desc_tail) {
-			CT_ERROR(ct, "Lost H2G: %u/%u\n", send_tail, desc_tail);
-			WRITE_ONCE(send_desc->tail, send_tail);
-			READ_ONCE(send_desc->tail);
-			intel_uncore_read(ct_to_gt(ct)->uncore,
-					  ct_to_guc(ct)->notify_reg);
-			intel_guc_notify(ct_to_guc(ct));
-		}
-		spin_unlock_irqrestore(&send_ctb->lock, spin_flags);
-
-		mod_delayed_work(system_highpri_wq, &ct->mtl_workaround.work,
-				 ct->mtl_workaround.delay);
-	}
-}
-
 void intel_guc_ct_print_info(struct intel_guc_ct *ct,
 			     struct drm_printer *p)
 {
diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.h b/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.h
index 6599cee3a3c4e..f709a19c7e214 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.h
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.h
@@ -85,19 +85,6 @@ struct intel_guc_ct {
 
 	/** @stall_time: time of first time a CTB submission is stalled */
 	ktime_t stall_time;
-
-	/* FIXME: MTL cache coherency issue - HSD 22016122933 */
-	struct {
-		/**
-		 * @delay: Period for polling the CTB tail
-		 */
-		unsigned long delay;
-
-		/**
-		 * @work: Periodic work to detect and fix CTB tail loss.
-		 */
-		struct delayed_work work;
-	} mtl_workaround;
 };
 
 void intel_guc_ct_init_early(struct intel_guc_ct *ct);
@@ -105,7 +92,11 @@ int intel_guc_ct_init(struct intel_guc_ct *ct);
 void intel_guc_ct_fini(struct intel_guc_ct *ct);
 int intel_guc_ct_enable(struct intel_guc_ct *ct);
 void intel_guc_ct_disable(struct intel_guc_ct *ct);
-void intel_guc_ct_sanitize(struct intel_guc_ct *ct);
+
+static inline void intel_guc_ct_sanitize(struct intel_guc_ct *ct)
+{
+	ct->enabled = false;
+}
 
 static inline bool intel_guc_ct_enabled(struct intel_guc_ct *ct)
 {
-- 
2.25.1

