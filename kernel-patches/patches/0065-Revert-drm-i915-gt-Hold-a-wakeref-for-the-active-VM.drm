From b27a954b4b26855877ecd5c9df5e7371d010d892 Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Thu, 6 Jul 2023 15:04:15 +0800
Subject: [PATCH 0065/2351] Revert "drm/i915/gt: Hold a wakeref for the active
 VM"

This reverts commit c7e5500e09b61523267c10f4a470ed9357ed5013.
---
 drivers/gpu/drm/i915/gt/intel_context.h       | 15 ++++-----------
 drivers/gpu/drm/i915/gt/intel_context_types.h |  2 --
 drivers/gpu/drm/i915/gt/intel_engine_pm.c     |  4 ----
 3 files changed, 4 insertions(+), 17 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/intel_context.h b/drivers/gpu/drm/i915/gt/intel_context.h
index 582faa21181e5..0a8d553da3f43 100644
--- a/drivers/gpu/drm/i915/gt/intel_context.h
+++ b/drivers/gpu/drm/i915/gt/intel_context.h
@@ -14,7 +14,6 @@
 #include "i915_drv.h"
 #include "intel_context_types.h"
 #include "intel_engine_types.h"
-#include "intel_gt_pm.h"
 #include "intel_ring_types.h"
 #include "intel_timeline_types.h"
 #include "i915_trace.h"
@@ -208,11 +207,8 @@ void intel_context_exit_engine(struct intel_context *ce);
 static inline void intel_context_enter(struct intel_context *ce)
 {
 	lockdep_assert_held(&ce->timeline->mutex);
-	if (ce->active_count++)
-		return;
-
-	ce->ops->enter(ce);
-	ce->wakeref = intel_gt_pm_get(ce->vm->gt);
+	if (!ce->active_count++)
+		ce->ops->enter(ce);
 }
 
 static inline void intel_context_mark_active(struct intel_context *ce)
@@ -226,11 +222,8 @@ static inline void intel_context_exit(struct intel_context *ce)
 {
 	lockdep_assert_held(&ce->timeline->mutex);
 	GEM_BUG_ON(!ce->active_count);
-	if (--ce->active_count)
-		return;
-
-	intel_gt_pm_put_async(ce->vm->gt, ce->wakeref);
-	ce->ops->exit(ce);
+	if (!--ce->active_count)
+		ce->ops->exit(ce);
 }
 
 static inline struct intel_context *intel_context_get(struct intel_context *ce)
diff --git a/drivers/gpu/drm/i915/gt/intel_context_types.h b/drivers/gpu/drm/i915/gt/intel_context_types.h
index 5dc39a9d7a501..e36670f2e6260 100644
--- a/drivers/gpu/drm/i915/gt/intel_context_types.h
+++ b/drivers/gpu/drm/i915/gt/intel_context_types.h
@@ -17,7 +17,6 @@
 #include "i915_utils.h"
 #include "intel_engine_types.h"
 #include "intel_sseu.h"
-#include "intel_wakeref.h"
 
 #include "uc/intel_guc_fwif.h"
 
@@ -111,7 +110,6 @@ struct intel_context {
 	u32 ring_size;
 	struct intel_ring *ring;
 	struct intel_timeline *timeline;
-	intel_wakeref_t wakeref;
 
 	unsigned long flags;
 #define CONTEXT_BARRIER_BIT		0
diff --git a/drivers/gpu/drm/i915/gt/intel_engine_pm.c b/drivers/gpu/drm/i915/gt/intel_engine_pm.c
index c2d17c97bfe98..7063dea211294 100644
--- a/drivers/gpu/drm/i915/gt/intel_engine_pm.c
+++ b/drivers/gpu/drm/i915/gt/intel_engine_pm.c
@@ -114,10 +114,6 @@ __queue_and_release_pm(struct i915_request *rq,
 
 	ENGINE_TRACE(engine, "parking\n");
 
-	GEM_BUG_ON(rq->context->active_count != 1);
-	__intel_gt_pm_get(engine->gt);
-	rq->context->wakeref = intel_wakeref_track(&engine->gt->wakeref);
-
 	/*
 	 * We have to serialise all potential retirement paths with our
 	 * submission, as we don't want to underflow either the
-- 
2.25.1

