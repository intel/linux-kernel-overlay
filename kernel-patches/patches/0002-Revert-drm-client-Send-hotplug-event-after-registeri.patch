From 3816b0a1afdb36c5c2461bf918d4b522cdf5fa4e Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Fri, 15 Sep 2023 11:55:03 +0800
Subject: [PATCH 2/2] Revert "drm/client: Send hotplug event after registering
 a client"

This reverts commit 7c880188c71066449a76de71de772198a0c30a7c.
---
 drivers/gpu/drm/drm_client.c    | 21 ---------------------
 drivers/gpu/drm/drm_fb_helper.c |  4 ++++
 2 files changed, 4 insertions(+), 21 deletions(-)

diff --git a/drivers/gpu/drm/drm_client.c b/drivers/gpu/drm/drm_client.c
index dcbeeb68ca64..2b230b4d6942 100644
--- a/drivers/gpu/drm/drm_client.c
+++ b/drivers/gpu/drm/drm_client.c
@@ -122,34 +122,13 @@ EXPORT_SYMBOL(drm_client_init);
  * drm_client_register() it is no longer permissible to call drm_client_release()
  * directly (outside the unregister callback), instead cleanup will happen
  * automatically on driver unload.
- *
- * Registering a client generates a hotplug event that allows the client
- * to set up its display from pre-existing outputs. The client must have
- * initialized its state to able to handle the hotplug event successfully.
  */
 void drm_client_register(struct drm_client_dev *client)
 {
 	struct drm_device *dev = client->dev;
-	int ret;
 
 	mutex_lock(&dev->clientlist_mutex);
 	list_add(&client->list, &dev->clientlist);
-
-	if (client->funcs && client->funcs->hotplug) {
-		/*
-		 * Perform an initial hotplug event to pick up the
-		 * display configuration for the client. This step
-		 * has to be performed *after* registering the client
-		 * in the list of clients, or a concurrent hotplug
-		 * event might be lost; leaving the display off.
-		 *
-		 * Hold the clientlist_mutex as for a regular hotplug
-		 * event.
-		 */
-		ret = client->funcs->hotplug(client);
-		if (ret)
-			drm_dbg_kms(dev, "client hotplug ret=%d\n", ret);
-	}
 	mutex_unlock(&dev->clientlist_mutex);
 }
 EXPORT_SYMBOL(drm_client_register);
diff --git a/drivers/gpu/drm/drm_fb_helper.c b/drivers/gpu/drm/drm_fb_helper.c
index 442746d9777a..76e46713b2f0 100644
--- a/drivers/gpu/drm/drm_fb_helper.c
+++ b/drivers/gpu/drm/drm_fb_helper.c
@@ -2634,6 +2634,10 @@ void drm_fbdev_generic_setup(struct drm_device *dev,
 		preferred_bpp = 32;
 	fb_helper->preferred_bpp = preferred_bpp;
 
+	ret = drm_fbdev_client_hotplug(&fb_helper->client);
+	if (ret)
+		drm_dbg_kms(dev, "client hotplug ret=%d\n", ret);
+
 	drm_client_register(&fb_helper->client);
 }
 EXPORT_SYMBOL(drm_fbdev_generic_setup);
-- 
2.25.1

