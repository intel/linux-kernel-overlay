From ddb97443be0331145155ba4732a21a7c6074c29f Mon Sep 17 00:00:00 2001
From: Li Wei <wei.l.li@intel.com>
Date: Wed, 17 Jan 2018 00:19:41 +0800
Subject: [PATCH 14/27] media: v4l2-mc: fix entity use_count issue for dual
 sensors

[Issue]
In dual sensors mode, if one sensor is closed, the runtime
suspend function of this sensor will not be called. So this
sensor is not able to enter low power mode.

[Root Cause]
Pipeline power management manages the power state of entities
of the pipeline. It calls s_power() to power on/off entities
according to entity use_count field.
In dual sensor mode, when one sensor pipeline is closed, the
entity use_count is still bigger than 0. So s_power can not
be called, sensor can not enter low power mode.
When calculating use_count, it always start from entity->pad[0].
For 2nd sensor pipeline, the use_count in 1nd sensor pipeline
is also added. So use_count in 2nd sensor pipeline is bigger
than actual users(includes the users in 1nd sensor pipeline).

[Changes]
One pipeline_pm_use_count() parameter is changed to pass
the starting pad to graph traverse.

[Test Platform]
Leafhill

Signed-off-by: Li Wei <wei.l.li@intel.com>
Signed-off-by: wu xia <xia.wu@intel.com>
Signed-off-by: wanhui sun <wanhui.sun@intel.com>
Signed-off-by: Meng Wei <wei.meng@intel.com>
Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/v4l2-core/v4l2-mc.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/media/v4l2-core/v4l2-mc.c b/drivers/media/v4l2-core/v4l2-mc.c
index 82f7646b2b01..63263888ecdf 100644
--- a/drivers/media/v4l2-core/v4l2-mc.c
+++ b/drivers/media/v4l2-core/v4l2-mc.c
@@ -431,12 +431,13 @@ EXPORT_SYMBOL_GPL(v4l2_create_fwnode_links);
  *
  * Return the total number of users of all video device nodes in the pipeline.
  */
-static int pipeline_pm_use_count(struct media_entity *entity,
+static int pipeline_pm_use_count(struct media_pad *pad,
 	struct media_graph *graph)
 {
+	struct media_entity *entity = pad->entity;
 	int use = 0;
 
-	media_graph_walk_start(graph, &entity->pads[0]);
+	media_graph_walk_start(graph, pad);
 
 	while ((entity = media_graph_walk_next(graph))) {
 		if (is_media_entity_v4l2_video_device(entity))
@@ -563,14 +564,17 @@ int v4l2_pipeline_link_notify(struct media_link *link, u32 flags,
 	int sink_use;
 	int ret = 0;
 
-	source_use = pipeline_pm_use_count(source, graph);
-	sink_use = pipeline_pm_use_count(sink, graph);
+	source_use = pipeline_pm_use_count(link->source, graph);
+	sink_use = pipeline_pm_use_count(link->sink, graph);
 
 	if (notification == MEDIA_DEV_NOTIFY_POST_LINK_CH &&
 	    !(flags & MEDIA_LNK_FL_ENABLED)) {
 		/* Powering off entities is assumed to never fail. */
 		pipeline_pm_power(source, -sink_use, graph);
 		pipeline_pm_power(sink, -source_use, graph);
+
+		source->use_count = 0;
+		sink->use_count = 0;
 		return 0;
 	}
 
-- 
2.25.1

