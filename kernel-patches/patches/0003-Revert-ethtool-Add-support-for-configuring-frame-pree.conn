From d2c27b03ab9fc65d8e1fd9c9c73693d5a7ba11c0 Mon Sep 17 00:00:00 2001
From: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
Date: Wed, 28 Sep 2022 08:05:55 +0800
Subject: [PATCH 3/5] Revert "ethtool: Add support for configuring frame
 preemption via ioctl"

This reverts commit 581b86551212701bf1eafecd10b8a8cb6f7d2b0f.i

Remove ioctl implementation.

Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
---
 include/linux/ethtool.h      | 16 ++++++++++++++++
 include/uapi/linux/ethtool.h | 19 -------------------
 net/ethtool/ioctl.c          | 36 ------------------------------------
 3 files changed, 16 insertions(+), 55 deletions(-)

diff --git a/include/linux/ethtool.h b/include/linux/ethtool.h
index 975f87dc8031..4b50e98acd27 100644
--- a/include/linux/ethtool.h
+++ b/include/linux/ethtool.h
@@ -84,6 +84,7 @@ struct netlink_ext_ack;
 u32 ethtool_op_get_link(struct net_device *dev);
 int ethtool_op_get_ts_info(struct net_device *dev, struct ethtool_ts_info *eti);
 
+
 /* Link extended state and substate. */
 struct ethtool_link_ext_state_info {
 	enum ethtool_link_ext_state link_ext_state;
@@ -414,6 +415,21 @@ struct ethtool_module_eeprom {
 	u8	*data;
 };
 
+/**
+ * struct ethtool_fp - Frame Preemption information
+ *
+ * @enabled: Enable frame preemption.
+ * @add_frag_size: Minimum size for additional (non-final) fragments
+ * in bytes, for the value defined in the IEEE 802.3-2018 standard see
+ * ethtool_frag_size_to_mult().
+ */
+struct ethtool_fp {
+	u8 enabled;
+	u32 add_frag_size;
+	u8 disable_verify;
+	u8 verified;
+};
+
 /**
  * struct ethtool_ops - optional netdev operations
  * @cap_link_lanes_supported: indicates if the driver supports lanes
diff --git a/include/uapi/linux/ethtool.h b/include/uapi/linux/ethtool.h
index 07520e72f05b..b6db6590baf0 100644
--- a/include/uapi/linux/ethtool.h
+++ b/include/uapi/linux/ethtool.h
@@ -380,22 +380,6 @@ struct ethtool_eee {
 	__u32	reserved[2];
 };
 
-/**
- * struct ethtool_fp - Frame Preemption information
- * @cmd: ETHTOOL_{G,S}FP
- * @enabled: If frame preemption should be advertised to the link partner
- *	as enabled.
- * @add_frag_size: Minimum size for all non-final fragment size.
- */
-struct ethtool_fp {
-	__u32	cmd;
-	__u8	enabled;
-	__u32	add_frag_size;
-	__u8	disable_verify;
-	__u8	verified;
-	__u32	reserved[2];
-};
-
 /**
  * struct ethtool_modinfo - plugin module eeprom information
  * @cmd: %ETHTOOL_GMODULEINFO
@@ -1571,9 +1555,6 @@ enum ethtool_fec_config_bits {
 #define ETHTOOL_GFECPARAM	0x00000050 /* Get FEC settings */
 #define ETHTOOL_SFECPARAM	0x00000051 /* Set FEC settings */
 
-#define ETHTOOL_GFP		0x00000052 /* Get Frame Preemption settings */
-#define ETHTOOL_SFP		0x00000053 /* Set Frame Preemption settings */
-
 /* compatibility with older code */
 #define SPARC_ETH_GSET		ETHTOOL_GSET
 #define SPARC_ETH_SSET		ETHTOOL_SSET
diff --git a/net/ethtool/ioctl.c b/net/ethtool/ioctl.c
index e14573d1274d..e4983f473a3c 100644
--- a/net/ethtool/ioctl.c
+++ b/net/ethtool/ioctl.c
@@ -2693,36 +2693,6 @@ static int ethtool_set_fecparam(struct net_device *dev, void __user *useraddr)
 	return dev->ethtool_ops->set_fecparam(dev, &fecparam);
 }
 
-static int ethtool_get_preempt(struct net_device *dev, void __user *useraddr)
-{
-	struct ethtool_fp fpparam = { .cmd = ETHTOOL_GFP };
-	int rc;
-
-	if (!dev->ethtool_ops->get_preempt)
-		return -EOPNOTSUPP;
-
-	rc = dev->ethtool_ops->get_preempt(dev, &fpparam);
-	if (rc)
-		return rc;
-
-	if (copy_to_user(useraddr, &fpparam, sizeof(fpparam)))
-		return -EFAULT;
-	return 0;
-}
-
-static int ethtool_set_preempt(struct net_device *dev, void __user *useraddr)
-{
-	struct ethtool_fp fpparam;
-
-	if (!dev->ethtool_ops->set_preempt)
-		return -EOPNOTSUPP;
-
-	if (copy_from_user(&fpparam, useraddr, sizeof(fpparam)))
-		return -EFAULT;
-
-	return dev->ethtool_ops->set_preempt(dev, &fpparam, NULL);
-}
-
 /* The main entry point in this file.  Called from net/core/dev_ioctl.c */
 
 int dev_ethtool(struct net *net, struct ifreq *ifr, void __user *useraddr)
@@ -3009,12 +2979,6 @@ int dev_ethtool(struct net *net, struct ifreq *ifr, void __user *useraddr)
 	case ETHTOOL_SFECPARAM:
 		rc = ethtool_set_fecparam(dev, useraddr);
 		break;
-	case ETHTOOL_GFP:
-		rc = ethtool_get_preempt(dev, useraddr);
-		break;
-	case ETHTOOL_SFP:
-		rc = ethtool_set_preempt(dev, useraddr);
-		break;
 	default:
 		rc = -EOPNOTSUPP;
 	}
-- 
2.25.1

