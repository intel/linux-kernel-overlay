From 26cb6ff61b754cce170dc88bb5f139b683a4f04c Mon Sep 17 00:00:00 2001
From: Voon Weifeng <weifeng.voon@intel.com>
Date: Mon, 1 Mar 2021 16:01:47 +0800
Subject: [PATCH 09/32] net: stmmac: Add module param to del/keep est hw conf

Added module param del_est as a workaround for get combination of Qav and
Qbv to work. Set del_est to 0 means keep the EST HW configuration when
deleting tc taprio qdisc and vice-versa. Default is 1.

Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac.h  |  3 +++
 .../net/ethernet/stmicro/stmmac/stmmac_main.c |  5 +++++
 .../net/ethernet/stmicro/stmmac/stmmac_tc.c   | 20 ++++++++++---------
 3 files changed, 19 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac.h b/drivers/net/ethernet/stmicro/stmmac/stmmac.h
index dddcaa9220cc..ee7dcdf8aafd 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac.h
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac.h
@@ -314,6 +314,9 @@ struct stmmac_priv {
 	char int_name_rx_irq[MTL_MAX_TX_QUEUES][IFNAMSIZ + 14];
 	char int_name_tx_irq[MTL_MAX_TX_QUEUES][IFNAMSIZ + 18];
 
+	/* WA for skipping disabling EST during TAPRIO deletion */
+	bool est_hw_del_wa;
+
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *dbgfs_dir;
 #endif
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 2c33df9c691c..a681ec6489a6 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -62,6 +62,10 @@
 #define	TSO_MAX_BUFF_SIZE	(SZ_16K - 1)
 
 /* Module parameters */
+static int del_est = 1;
+module_param(del_est, int, 0644);
+MODULE_PARM_DESC(del_est, "Delete est settings when deleting tc TAPRIO qdisc");
+
 #define TX_TIMEO	5000
 static int watchdog = TX_TIMEO;
 module_param(watchdog, int, 0644);
@@ -6269,6 +6273,7 @@ static int stmmac_setup_tc(struct net_device *ndev, enum tc_setup_type type,
 	case TC_SETUP_QDISC_CBS:
 		return stmmac_tc_setup_cbs(priv, priv, type_data);
 	case TC_SETUP_QDISC_TAPRIO:
+		priv->est_hw_del_wa = del_est;
 		return stmmac_tc_setup_taprio(priv, priv, type_data);
 	case TC_SETUP_QDISC_ETF:
 		return stmmac_tc_setup_etf(priv, priv, type_data);
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_tc.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_tc.c
index 574b59014f3e..be09b73af3d3 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_tc.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_tc.c
@@ -1176,16 +1176,18 @@ static int tc_taprio_configure(struct stmmac_priv *priv,
 
 disable:
 	if (priv->plat->est) {
-		mutex_lock(&priv->plat->est->lock);
-		priv->plat->est->enable = false;
-		stmmac_est_configure(priv, priv, priv->plat->est,
-				     priv->plat->clk_ptp_rate);
-		/* Reset taprio status */
-		for (i = 0; i < priv->plat->tx_queues_to_use; i++) {
-			priv->xstats.max_sdu_txq_drop[i] = 0;
-			priv->xstats.mtl_est_txq_hlbf[i] = 0;
+		if (priv->est_hw_del_wa) {
+			mutex_lock(&priv->plat->est->lock);
+			priv->plat->est->enable = false;
+			stmmac_est_configure(priv, priv, priv->plat->est,
+					priv->plat->clk_ptp_rate);
+			/* Reset taprio status */
+			for (i = 0; i < priv->plat->tx_queues_to_use; i++) {
+				priv->xstats.max_sdu_txq_drop[i] = 0;
+				priv->xstats.mtl_est_txq_hlbf[i] = 0;
+			}
+			mutex_unlock(&priv->plat->est->lock);
 		}
-		mutex_unlock(&priv->plat->est->lock);
 	}
 
 	priv->plat->fpe_cfg->enable = false;
-- 
2.25.1

