From ee5ca5d451df82d7be9da9e2aa7108f611ff7207 Mon Sep 17 00:00:00 2001
From: Lakshmi Sowjanya D <lakshmi.sowjanya.d@intel.com>
Date: Mon, 4 Apr 2022 17:05:59 +0530
Subject: [PATCH 11/11] ptp: Enable preempt if it is disabled

Enable preempt if it is disabled in all the cases. In the existing code,
the preemption isn't enabled though disabled in the case where TGPIO is
disabled which results in crash.

Signed-off-by: Lakshmi Sowjanya D <lakshmi.sowjanya.d@intel.com>
---
 drivers/ptp/ptp-intel-pmc-tgpio.c | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

diff --git a/drivers/ptp/ptp-intel-pmc-tgpio.c b/drivers/ptp/ptp-intel-pmc-tgpio.c
index f9bc64a34453..6e5ee6e1ecc8 100644
--- a/drivers/ptp/ptp-intel-pmc-tgpio.c
+++ b/drivers/ptp/ptp-intel-pmc-tgpio.c
@@ -236,10 +236,9 @@ struct intel_pmc_tgpio_t *tgpio, unsigned int index,
 struct timespec64 new_start_ns, struct timespec64 new_period_ns,
 unsigned int flags, int on)
 {
-	u32			ctrl, ctrl_new;
-	u64			new_period;
-	int			enable_toggle;
-	bool			enable_preempt = false;
+	u32 ctrl, ctrl_new;
+	u64 new_period;
+	int enable_toggle;
 
 	/*
 	 * enable_toggle meaning:
@@ -300,7 +299,6 @@ unsigned int flags, int on)
 		ktime_t			delta;
 
 		preempt_disable();
-		enable_preempt = true;
 
 		/* Calculate time delta until next edge */
 		tsc_tmp = get_tsc_ns_now(NULL);
@@ -322,6 +320,8 @@ unsigned int flags, int on)
 		delta = timespec64_to_ktime
 			(timespec64_sub(next_edge_tsc, tsc_now));
 
+		preempt_enable();
+
 		/* If there's a chance our write will get stepped on, wait */
 		if (delta < FREQ_CHANGE_BLACKOUT_THRESH) {
 			unsigned long		min, max;
@@ -368,8 +368,6 @@ unsigned int flags, int on)
 			(TGPIOPIV31_0, index, new_period & 0xFFFFFFFF);
 		INTEL_PMC_TGPIO_WR_REG
 			(TGPIOPIV63_32, index, new_period >> 32);
-		if (enable_preempt)
-			preempt_enable();
 		tgpio->pin[index].curr_ns = timespec64_to_ktime(new_period_ns);
 		tgpio->pin[index].curr_art = new_period;
 	}
-- 
2.17.1

