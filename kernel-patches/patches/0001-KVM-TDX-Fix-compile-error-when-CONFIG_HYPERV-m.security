From 69db5216bafba7b4d2de928fa7da7ae884505630 Mon Sep 17 00:00:00 2001
From: "Qiao, Wei" <wei.qiao@intel.com>
Date: Wed, 13 Mar 2024 09:09:42 +0800
Subject: [PATCH] KVM: TDX: Fix compile error when CONFIG_HYPERV != m

According to below patch, TLB flushes when running under Hyper-V
if and only if CONFIG_HYPERV!=n. This is the reason to wap code
with IS_ENABLED(CONFIG_HYPERV).
https://lore.kernel.org/all/20231018192325.1893896-1-seanjc@google.com/

Fixes: 980090c97924 ("KVM: TDX: TDP MMU TDX support")
Signed-off-by: Qiao, Wei <wei.qiao@intel.com>
---
 arch/x86/kvm/vmx/main.c | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kvm/vmx/main.c b/arch/x86/kvm/vmx/main.c
index c7452274b387..e605680706d0 100644
--- a/arch/x86/kvm/vmx/main.c
+++ b/arch/x86/kvm/vmx/main.c
@@ -28,7 +28,10 @@ static int vt_max_vcpus(struct kvm *kvm)
 
 	return kvm->max_vcpus;
 }
+
+#if IS_ENABLED(CONFIG_HYPERV)
 static int vt_flush_remote_tlbs(struct kvm *kvm);
+#endif
 
 static int vt_hardware_enable(void)
 {
@@ -83,6 +86,7 @@ static __init int vt_hardware_setup(void)
 		pr_warn_ratelimited("TDX requires mmio caching.  Please enable mmio caching for TDX.\n");
 	}
 
+#if IS_ENABLED(CONFIG_HYPERV)
 	/*
 	 * TDX KVM overrides flush_remote_tlbs method and assumes
 	 * flush_remote_tlbs_range = NULL that falls back to
@@ -93,12 +97,16 @@ static __init int vt_hardware_setup(void)
 		enable_tdx = false;
 		pr_warn_ratelimited("TDX requires baremetal. Not Supported on VMM guest.\n");
 	}
+#endif
 
 	enable_tdx = enable_tdx && !tdx_hardware_setup(&vt_x86_ops);
 
+#if IS_ENABLED(CONFIG_HYPERV)
 	if (enable_tdx)
 		vt_x86_ops.flush_remote_tlbs = vt_flush_remote_tlbs;
-	else
+#endif
+
+	if (!enable_tdx)
 		vt_x86_ops.protected_apic_has_interrupt = NULL;
 
 	return 0;
@@ -670,6 +678,7 @@ static void vt_flush_tlb_current(struct kvm_vcpu *vcpu)
 	vmx_flush_tlb_current(vcpu);
 }
 
+#if IS_ENABLED(CONFIG_HYPERV)
 static int vt_flush_remote_tlbs(struct kvm *kvm)
 {
 	if (is_td(kvm))
@@ -681,6 +690,7 @@ static int vt_flush_remote_tlbs(struct kvm *kvm)
 	 */
 	return -EOPNOTSUPP;
 }
+#endif
 
 static void vt_flush_tlb_gva(struct kvm_vcpu *vcpu, gva_t addr)
 {
-- 
2.25.1

