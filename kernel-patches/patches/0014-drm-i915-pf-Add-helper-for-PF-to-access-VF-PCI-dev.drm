From 3ba6871c7c6bebd0330eb350ddd6b446b18c6cef Mon Sep 17 00:00:00 2001
From: Michal Wajdeczko <michal.wajdeczko@intel.com>
Date: Tue, 1 Aug 2023 11:09:00 +0200
Subject: [PATCH 14/52] drm/i915/pf: Add helper for PF to access VF PCI dev
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

To be used for save/restore of VF-specific state.

Signed-off-by: Michal Wajdeczko <michal.wajdeczko@intel.com>
Signed-off-by: Micha≈Ç Winiarski <michal.winiarski@intel.com>
---
 drivers/gpu/drm/i915/i915_pci.c | 22 ++++++++++++++++++++++
 drivers/gpu/drm/i915/i915_pci.h | 10 ++++++++++
 2 files changed, 32 insertions(+)

diff --git a/drivers/gpu/drm/i915/i915_pci.c b/drivers/gpu/drm/i915/i915_pci.c
index 0d5c1b4516d0..c523c1fe14ad 100644
--- a/drivers/gpu/drm/i915/i915_pci.c
+++ b/drivers/gpu/drm/i915/i915_pci.c
@@ -1141,6 +1141,28 @@ static struct pci_driver i915_pci_driver = {
 	.sriov_configure = i915_pci_sriov_configure,
 };
 
+#ifdef CONFIG_PCI_IOV
+/* our Gen12 SR-IOV platforms are simple */
+#define GEN12_VF_OFFSET 1
+#define GEN12_VF_STRIDE 1
+#define GEN12_VF_ROUTING_OFFSET(id) (GEN12_VF_OFFSET + ((id) - 1) * GEN12_VF_STRIDE)
+
+struct pci_dev *i915_pci_pf_get_vf_dev(struct pci_dev *pdev, unsigned int id)
+{
+	u16 vf_devid = pci_dev_id(pdev) + GEN12_VF_ROUTING_OFFSET(id);
+
+	GEM_BUG_ON(!dev_is_pf(&pdev->dev));
+	GEM_BUG_ON(!id);
+	GEM_BUG_ON(id > pci_num_vf(pdev));
+
+	/* caller must use pci_dev_put() */
+	return pci_get_domain_bus_and_slot(pci_domain_nr(pdev->bus),
+					   PCI_BUS_NUM(vf_devid),
+					   PCI_DEVFN(PCI_SLOT(vf_devid),
+					   PCI_FUNC(vf_devid)));
+}
+#endif
+
 int i915_pci_register_driver(void)
 {
 	return pci_register_driver(&i915_pci_driver);
diff --git a/drivers/gpu/drm/i915/i915_pci.h b/drivers/gpu/drm/i915/i915_pci.h
index 8dfe19f9a775..1ec94df9c915 100644
--- a/drivers/gpu/drm/i915/i915_pci.h
+++ b/drivers/gpu/drm/i915/i915_pci.h
@@ -6,10 +6,20 @@
 #ifndef __I915_PCI_H__
 #define __I915_PCI_H__
 
+#include <linux/err.h>
 #include <linux/types.h>
 
 struct pci_dev;
 
+#ifdef CONFIG_PCI_IOV
+struct pci_dev *i915_pci_pf_get_vf_dev(struct pci_dev *pdev, unsigned int id);
+#else
+static inline struct pci_dev *i915_pci_pf_get_vf_dev(struct pci_dev *pdev, unsigned int id)
+{
+	return ERR_PTR(-ENODEV);
+}
+#endif
+
 int i915_pci_register_driver(void);
 void i915_pci_unregister_driver(void);
 
-- 
2.25.1

