From df4140daecae6d33d932fd2daaf5526c02368bba Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Thu, 6 Jul 2023 15:03:03 +0800
Subject: [PATCH 0057/2351] Revert "drm/i915/pxp: Add GSC-CS back-end resource
 init and cleanup"

This reverts commit f0eb4fd2f84eea72b08544e2ecd7dc4cf872b320.
---
 drivers/gpu/drm/i915/Makefile              |  1 -
 drivers/gpu/drm/i915/pxp/intel_pxp.c       | 17 ++----
 drivers/gpu/drm/i915/pxp/intel_pxp_gsccs.c | 65 ----------------------
 drivers/gpu/drm/i915/pxp/intel_pxp_gsccs.h | 29 ----------
 drivers/gpu/drm/i915/pxp/intel_pxp_types.h |  8 ---
 5 files changed, 4 insertions(+), 116 deletions(-)
 delete mode 100644 drivers/gpu/drm/i915/pxp/intel_pxp_gsccs.c
 delete mode 100644 drivers/gpu/drm/i915/pxp/intel_pxp_gsccs.h

diff --git a/drivers/gpu/drm/i915/Makefile b/drivers/gpu/drm/i915/Makefile
index 6f9546bb2c2b5..f6145effc7952 100644
--- a/drivers/gpu/drm/i915/Makefile
+++ b/drivers/gpu/drm/i915/Makefile
@@ -334,7 +334,6 @@ i915-y += \
 i915-$(CONFIG_DRM_I915_PXP) += \
 	pxp/intel_pxp_cmd.o \
 	pxp/intel_pxp_debugfs.o \
-	pxp/intel_pxp_gsccs.o \
 	pxp/intel_pxp_irq.o \
 	pxp/intel_pxp_pm.o \
 	pxp/intel_pxp_session.o
diff --git a/drivers/gpu/drm/i915/pxp/intel_pxp.c b/drivers/gpu/drm/i915/pxp/intel_pxp.c
index 5d173a2cac613..9d4c7724e98ed 100644
--- a/drivers/gpu/drm/i915/pxp/intel_pxp.c
+++ b/drivers/gpu/drm/i915/pxp/intel_pxp.c
@@ -12,7 +12,6 @@
 #include "i915_drv.h"
 
 #include "intel_pxp.h"
-#include "intel_pxp_gsccs.h"
 #include "intel_pxp_irq.h"
 #include "intel_pxp_session.h"
 #include "intel_pxp_tee.h"
@@ -133,10 +132,7 @@ static void pxp_init_full(struct intel_pxp *pxp)
 	if (ret)
 		return;
 
-	if (HAS_ENGINE(pxp->ctrl_gt, GSC0))
-		ret = intel_pxp_gsccs_init(pxp);
-	else
-		ret = intel_pxp_tee_component_init(pxp);
+	ret = intel_pxp_tee_component_init(pxp);
 	if (ret)
 		goto out_context;
 
@@ -169,11 +165,9 @@ static struct intel_gt *find_gt_for_required_protected_content(struct drm_i915_p
 	/*
 	 * For MTL onwards, PXP-controller-GT needs to have a valid GSC engine
 	 * on the media GT. NOTE: if we have a media-tile with a GSC-engine,
-	 * the VDBOX is already present so skip that check. We also have to
-	 * ensure the GSC firmware is coming online
+	 * the VDBOX is already present so skip that check
 	 */
-	if (i915->media_gt && HAS_ENGINE(i915->media_gt, GSC0) &&
-	    intel_uc_fw_is_loadable(&i915->media_gt->uc.gsc.fw))
+	if (i915->media_gt && HAS_ENGINE(i915->media_gt, GSC0))
 		return i915->media_gt;
 
 	/*
@@ -235,10 +229,7 @@ void intel_pxp_fini(struct drm_i915_private *i915)
 
 	i915->pxp->arb_is_valid = false;
 
-	if (HAS_ENGINE(i915->pxp->ctrl_gt, GSC0))
-		intel_pxp_gsccs_fini(i915->pxp);
-	else
-		intel_pxp_tee_component_fini(i915->pxp);
+	intel_pxp_tee_component_fini(i915->pxp);
 
 	destroy_vcs_context(i915->pxp);
 
diff --git a/drivers/gpu/drm/i915/pxp/intel_pxp_gsccs.c b/drivers/gpu/drm/i915/pxp/intel_pxp_gsccs.c
deleted file mode 100644
index b304864902c89..0000000000000
--- a/drivers/gpu/drm/i915/pxp/intel_pxp_gsccs.c
+++ /dev/null
@@ -1,65 +0,0 @@
-// SPDX-License-Identifier: MIT
-/*
- * Copyright(c) 2023 Intel Corporation.
- */
-
-#include "gem/i915_gem_internal.h"
-
-#include "gt/intel_context.h"
-
-#include "i915_drv.h"
-#include "intel_pxp_cmd_interface_43.h"
-#include "intel_pxp_gsccs.h"
-#include "intel_pxp_types.h"
-
-static void
-gsccs_destroy_execution_resource(struct intel_pxp *pxp)
-{
-	struct gsccs_session_resources *strm_res = &pxp->gsccs_res;
-
-	if (strm_res->ce)
-		intel_context_put(strm_res->ce);
-
-	memset(strm_res, 0, sizeof(*strm_res));
-}
-
-static int
-gsccs_allocate_execution_resource(struct intel_pxp *pxp)
-{
-	struct intel_gt *gt = pxp->ctrl_gt;
-	struct gsccs_session_resources *strm_res = &pxp->gsccs_res;
-	struct intel_engine_cs *engine = gt->engine[GSC0];
-	struct intel_context *ce;
-
-	/*
-	 * First, ensure the GSC engine is present.
-	 * NOTE: Backend would only be called with the correct gt.
-	 */
-	if (!engine)
-		return -ENODEV;
-
-	mutex_init(&pxp->tee_mutex);
-
-	/* Finally, create an intel_context to be used during the submission */
-	ce = intel_context_create(engine);
-	if (IS_ERR(ce)) {
-		drm_err(&gt->i915->drm, "Failed creating gsccs backend ctx\n");
-		return PTR_ERR(ce);
-	}
-	i915_vm_put(ce->vm);
-	ce->vm = i915_vm_get(pxp->ctrl_gt->vm);
-
-	strm_res->ce = ce;
-
-	return 0;
-}
-
-void intel_pxp_gsccs_fini(struct intel_pxp *pxp)
-{
-	gsccs_destroy_execution_resource(pxp);
-}
-
-int intel_pxp_gsccs_init(struct intel_pxp *pxp)
-{
-	return gsccs_allocate_execution_resource(pxp);
-}
diff --git a/drivers/gpu/drm/i915/pxp/intel_pxp_gsccs.h b/drivers/gpu/drm/i915/pxp/intel_pxp_gsccs.h
deleted file mode 100644
index 354ea9a8f9403..0000000000000
--- a/drivers/gpu/drm/i915/pxp/intel_pxp_gsccs.h
+++ /dev/null
@@ -1,29 +0,0 @@
-/* SPDX-License-Identifier: MIT */
-/*
- * Copyright(c) 2022, Intel Corporation. All rights reserved.
- */
-
-#ifndef __INTEL_PXP_GSCCS_H__
-#define __INTEL_PXP_GSCCS_H__
-
-#include <linux/types.h>
-
-struct intel_pxp;
-
-#ifdef CONFIG_DRM_I915_PXP
-void intel_pxp_gsccs_fini(struct intel_pxp *pxp);
-int intel_pxp_gsccs_init(struct intel_pxp *pxp);
-
-#else
-static inline void intel_pxp_gsccs_fini(struct intel_pxp *pxp)
-{
-}
-
-static inline int intel_pxp_gsccs_init(struct intel_pxp *pxp)
-{
-	return 0;
-}
-
-#endif
-
-#endif /*__INTEL_PXP_GSCCS_H__ */
diff --git a/drivers/gpu/drm/i915/pxp/intel_pxp_types.h b/drivers/gpu/drm/i915/pxp/intel_pxp_types.h
index 1e01036d04553..007de49e1ea42 100644
--- a/drivers/gpu/drm/i915/pxp/intel_pxp_types.h
+++ b/drivers/gpu/drm/i915/pxp/intel_pxp_types.h
@@ -26,14 +26,6 @@ struct intel_pxp {
 	 */
 	struct intel_gt *ctrl_gt;
 
-	/**
-	 * @gsccs_res: resources for request submission for platforms that have a GSC engine.
-	 */
-	struct gsccs_session_resources {
-		u64 host_session_handle; /* used by firmware to link commands to sessions */
-		struct intel_context *ce; /* context for gsc command submission */
-	} gsccs_res;
-
 	/**
 	 * @pxp_component: i915_pxp_component struct of the bound mei_pxp
 	 * module. Only set and cleared inside component bind/unbind functions,
-- 
2.25.1

