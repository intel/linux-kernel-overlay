From 26beda988c76df309ba1e1974034905fc750a347 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ville=20Syrj=C3=A4l=C3=A4?= <ville.syrjala@linux.intel.com>
Date: Tue, 15 Mar 2022 15:27:48 +0200
Subject: [PATCH 173/877] drm/i915: Don't cancel/schedule drrs work if the pipe
 wasn't affected
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Skip all the DRRS work cancel/schedule stuff if the pipe's
frontbuffer bits were not among those affected by the frontbuffer
rendering.

Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20220315132752.11849-6-ville.syrjala@linux.intel.com
Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
---
 drivers/gpu/drm/i915/display/intel_drrs.c | 17 ++++++++---------
 1 file changed, 8 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/i915/display/intel_drrs.c b/drivers/gpu/drm/i915/display/intel_drrs.c
index 91aab77c495c..f36394fd85be 100644
--- a/drivers/gpu/drm/i915/display/intel_drrs.c
+++ b/drivers/gpu/drm/i915/display/intel_drrs.c
@@ -278,32 +278,31 @@ static void intel_drrs_frontbuffer_update(struct drm_i915_private *dev_priv,
 	for_each_intel_crtc(&dev_priv->drm, crtc) {
 		unsigned int frontbuffer_bits;
 
-		cancel_delayed_work(&crtc->drrs.work);
-
 		mutex_lock(&crtc->drrs.mutex);
 
-		if (!intel_drrs_is_enabled(crtc)) {
+		frontbuffer_bits = all_frontbuffer_bits & crtc->drrs.frontbuffer_bits;
+		if (!frontbuffer_bits) {
 			mutex_unlock(&crtc->drrs.mutex);
 			continue;
 		}
 
-		frontbuffer_bits = all_frontbuffer_bits & crtc->drrs.frontbuffer_bits;
 		if (invalidate)
 			crtc->drrs.busy_frontbuffer_bits |= frontbuffer_bits;
 		else
 			crtc->drrs.busy_frontbuffer_bits &= ~frontbuffer_bits;
 
 		/* flush/invalidate means busy screen hence upclock */
-		if (frontbuffer_bits)
-			intel_drrs_set_state(crtc, DRRS_REFRESH_RATE_HIGH);
+		intel_drrs_set_state(crtc, DRRS_REFRESH_RATE_HIGH);
 
 		/*
 		 * flush also means no more activity hence schedule downclock, if all
 		 * other fbs are quiescent too
 		 */
-		if (!invalidate && !crtc->drrs.busy_frontbuffer_bits)
-			schedule_delayed_work(&crtc->drrs.work,
-					      msecs_to_jiffies(1000));
+		if (!crtc->drrs.busy_frontbuffer_bits)
+			mod_delayed_work(system_wq, &crtc->drrs.work,
+					 msecs_to_jiffies(1000));
+		else
+			cancel_delayed_work(&crtc->drrs.work);
 
 		mutex_unlock(&crtc->drrs.mutex);
 	}
-- 
2.25.1

