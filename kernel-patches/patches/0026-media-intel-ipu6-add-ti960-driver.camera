From d2753af810c79927ae6a70fd532a0b19d9816dc5 Mon Sep 17 00:00:00 2001
From: Ng Khai Wen <khai.wen.ng@intel.com>
Date: Thu, 1 Jul 2021 15:34:20 +0800
Subject: [PATCH 26/48] media: intel-ipu6: add ti960 driver

Change Description:
add ti960 driver coupled with 4x imx390.

Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: Ng Khai Wen <khai.wen.ng@intel.com>
---
 drivers/media/i2c/imx390.c                    |  25 +++-
 drivers/media/i2c/ti960-des.c                 |  49 +++++++
 .../media/platform/intel/ipu6-tglrvp-pdata.c  | 128 +++++++++++++-----
 include/media/ti960.h                         |   4 +-
 4 files changed, 165 insertions(+), 41 deletions(-)

diff --git a/drivers/media/i2c/imx390.c b/drivers/media/i2c/imx390.c
index c4a51bebb6aa3..fe110e6e16347 100644
--- a/drivers/media/i2c/imx390.c
+++ b/drivers/media/i2c/imx390.c
@@ -415,7 +415,8 @@ static int imx390_update_digital_gain(struct imx390 *imx390, u32 d_gain)
 
 static u64 get_pixel_rate(struct imx390 *imx390)
 {
-	u64 pixel_rate;
+	u64 pixel_rate = 0;
+
 	return pixel_rate;
 }
 
@@ -425,9 +426,7 @@ static u64 get_pixel_rate(struct imx390 *imx390)
  */
 static u64 get_hblank(struct imx390 *imx390)
 {
-	u64 hblank;
-	u64 pixel_rate;
-	u64 pixel_clk;
+	u64 hblank = 0;
 
 	return hblank;
 }
@@ -818,6 +817,23 @@ static int imx390_get_format(struct v4l2_subdev *sd,
 	return 0;
 }
 
+static int imx390_get_frame_desc(struct v4l2_subdev *sd,
+	unsigned int pad, struct v4l2_mbus_frame_desc *desc)
+{
+	unsigned int i;
+
+	desc->num_entries = V4L2_FRAME_DESC_ENTRY_MAX;
+
+	for (i = 0; i < desc->num_entries; i++) {
+		desc->entry[i].flags = 0;
+		desc->entry[i].pixelcode = MEDIA_BUS_FMT_FIXED;
+		desc->entry[i].length = 0;
+		desc->entry[i].bus.csi2.channel = i;
+	}
+
+	return 0;
+}
+
 static int imx390_enum_mbus_code(struct v4l2_subdev *sd,
 				 struct v4l2_subdev_pad_config *cfg,
 				 struct v4l2_subdev_mbus_code_enum *code)
@@ -892,6 +908,7 @@ static const struct v4l2_subdev_video_ops imx390_video_ops = {
 static const struct v4l2_subdev_pad_ops imx390_pad_ops = {
 	.set_fmt = imx390_set_format,
 	.get_fmt = imx390_get_format,
+	.get_frame_desc = imx390_get_frame_desc,
 	.enum_mbus_code = imx390_enum_mbus_code,
 	.enum_frame_size = imx390_enum_frame_size,
 	.enum_frame_interval = imx390_enum_frame_interval,
diff --git a/drivers/media/i2c/ti960-des.c b/drivers/media/i2c/ti960-des.c
index 984a64a6bf418..a549125c47de3 100644
--- a/drivers/media/i2c/ti960-des.c
+++ b/drivers/media/i2c/ti960-des.c
@@ -127,6 +127,31 @@ static struct regmap_config ti960_reg_config16 = {
 	.reg_format_endian = REGMAP_ENDIAN_BIG,
 };
 
+int bus_switch(struct ti960 *va)
+{
+	int ret;
+	int retry, timeout = 10;
+	struct i2c_client *client = v4l2_get_subdevdata(&va->sd);
+
+	dev_dbg(&client->dev, "bus switch");
+	client->addr = 0x70;
+	for (retry = 0; retry < timeout; retry++) {
+		ret = i2c_smbus_write_byte(client, 0x01);
+		if (ret < 0)
+			usleep_range(5000, 6000);
+		else
+			break;
+	}
+
+	client->addr = TI960_I2C_ADDRESS;
+	if (retry >= timeout) {
+		dev_err(&client->dev, "bus switch failed");
+		return -EREMOTEIO;
+	}
+
+	return 0;
+}
+
 static int ti960_reg_read(struct ti960 *va, unsigned char reg, unsigned int *val)
 {
 	int ret, retry, timeout = 10;
@@ -450,6 +475,7 @@ static int ti960_get_frame_desc(struct v4l2_subdev *sd,
 		}
 	} else
 		dev_err(sd->dev, "can't find the frame desc\n");
+
 	return 0;
 }
 
@@ -1216,9 +1242,15 @@ static int ti960_init(struct ti960 *va)
 	int i, rval;
 	unsigned int val;
 
+#ifdef TI960_RESET_NEEDED
+	/* TI960 PDB pulled up to high by HW design in some board */
 	gpio_set_value(reset_gpio, 1);
 	usleep_range(2000, 3000);
 	dev_err(va->sd.dev, "Setting reset gpio %d to 1.\n", reset_gpio);
+#endif
+
+	bus_switch(va);
+	usleep_range(8000, 9000);
 
 	rval = ti960_reg_read(va, TI960_DEVID, &val);
 	if (rval) {
@@ -1241,6 +1273,10 @@ static int ti960_init(struct ti960 *va)
 	usleep_range(10000, 11000);
 
 	for (i = 0; i < ARRAY_SIZE(ti960_init_settings); i++) {
+		if (ti960_init_settings[i].reg == 0) {
+			usleep_range(ti960_init_settings[i].val * 1000, ti960_init_settings[i].val * 1000);
+			continue;
+		}
 		rval = regmap_write(va->regmap8,
 			ti960_init_settings[i].reg,
 			ti960_init_settings[i].val);
@@ -1386,12 +1422,25 @@ static int ti960_probe(struct i2c_client *client,
 		return rval;
 	}
 
+#ifdef TI960_RESET_NEEDED
 	if (devm_gpio_request_one(va->sd.dev, va->pdata->reset_gpio, 0,
 				  "ti960 reset") != 0) {
 		dev_err(va->sd.dev, "Unable to acquire gpio %d\n",
 			va->pdata->reset_gpio);
 		return -ENODEV;
 	}
+#endif
+
+	rval = devm_gpio_request_one(&client->dev,
+			258,
+			GPIOF_OUT_INIT_LOW, "Cam");
+	if (rval) {
+		dev_err(&client->dev, "camera power GPIO pin request failed!\n");
+		return rval;
+	}
+
+	/* pull up GPPC_B23 to high for FPD link power */
+	gpio_set_value(258, 1);
 
 	rval = ti960_init(va);
 	if (rval) {
diff --git a/drivers/media/platform/intel/ipu6-tglrvp-pdata.c b/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
index e55530142b1ce..4d5c4905bddad 100644
--- a/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
+++ b/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
@@ -8,6 +8,8 @@
 
 #include <media/ipu-isys.h>
 
+#include <media/crlmodule.h>
+#include <media/ti960.h>
 #include <media/ar0234.h>
 #include <media/imx390.h>
 
@@ -154,53 +156,108 @@ static struct ipu_isys_subdev_info ar0234_sd_4 = {
 };
 
 #define IMX390_LANES       4
-#define IMX390_I2C_ADDRESS 0x1e
+#define IMX390_I2C_ADDRESS 0x1a
+#define IMX390_I2C_ADDRESS_8BIT 0x34
 
-static struct ipu_isys_csi2_config imx390_csi2_cfg_1 = {
-	.nlanes = IMX390_LANES,
-	.port = 1,
+#if IS_ENABLED(CONFIG_VIDEO_TI960)
+#define TI960_I2C_ADAPTER	2
+#define TI960_I2C_ADAPTER_2	4
+#define TI960_LANES	4
+
+#define IMX390A_ADDRESS		0x44
+#define IMX390B_ADDRESS		0x45
+#define IMX390C_ADDRESS		0x46
+#define IMX390D_ADDRESS		0x47
+
+#define IMX390A_SER_ADDRESS	0x40
+#define IMX390B_SER_ADDRESS	0x41
+#define IMX390C_SER_ADDRESS	0x42
+#define IMX390D_SER_ADDRESS	0x43
+
+static struct crlmodule_platform_data imx390_pdata_stub = {
+	.lanes = 4,
+	.gpio_powerup_seq = {0, 0xa, -1, -1},
+	.module_flags = CRL_MODULE_FL_POWERUP,
+	//.module_flags = CRL_MODULE_FL_INIT_SER | CRL_MODULE_FL_POWERUP,
+	.fsin = 3, /* gpio 0 used for FSIN */
 };
 
-static struct imx390_platform_data imx390_pdata_1 = {
+static struct ipu_isys_csi2_config ti960_csi2_cfg = {
+	.nlanes = TI960_LANES,
 	.port = 1,
-	.lanes = 4,
-	.i2c_slave_address = IMX390_I2C_ADDRESS,
-	.suffix = 'a',
 };
 
-static struct ipu_isys_subdev_info imx390_sd_1 = {
-	.csi2 = &imx390_csi2_cfg_1,
-	.i2c = {
-	.board_info = {
-		I2C_BOARD_INFO("imx390", IMX390_I2C_ADDRESS),
-		.platform_data = &imx390_pdata_1,
-	},
-	.i2c_adapter_bdf = "0000:00:15.3",
-	},
+static struct ipu_isys_csi2_config ti960_csi2_cfg_2 = {
+	.nlanes = TI960_LANES,
+	.port = 4,
 };
 
-static struct ipu_isys_csi2_config imx390_csi2_cfg_2 = {
-	.nlanes = IMX390_LANES,
-	.port = 2,
+static struct ti960_subdev_info ti960_subdevs[] = {
+	{
+		.board_info = {
+			.type = "imx390",
+			.addr = IMX390A_ADDRESS,
+			.platform_data = &imx390_pdata_stub,
+		},
+		.rx_port = 0,
+		.phy_i2c_addr = IMX390_I2C_ADDRESS_8BIT,
+		.ser_alias = IMX390A_SER_ADDRESS,
+		.suffix = 'a',
+	},
+	{
+		.board_info = {
+			.type = "imx390",
+			.addr = IMX390B_ADDRESS,
+			.platform_data = &imx390_pdata_stub,
+		},
+		.rx_port = 1,
+		.phy_i2c_addr = IMX390_I2C_ADDRESS_8BIT,
+		.ser_alias = IMX390B_SER_ADDRESS,
+		.suffix = 'b',
+	},
+	{
+		.board_info = {
+			.type = "imx390",
+			.addr = IMX390C_ADDRESS,
+			.platform_data = &imx390_pdata_stub,
+		},
+		.rx_port = 2,
+		.phy_i2c_addr = IMX390_I2C_ADDRESS_8BIT,
+		.ser_alias = IMX390C_SER_ADDRESS,
+		.suffix = 'c',
+	},
+	{
+		.board_info = {
+			.type = "imx390",
+			.addr = IMX390D_ADDRESS,
+			.platform_data = &imx390_pdata_stub,
+		},
+		.rx_port = 3,
+		.phy_i2c_addr = IMX390_I2C_ADDRESS_8BIT,
+		.ser_alias = IMX390D_SER_ADDRESS,
+		.suffix = 'd',
+	},
 };
 
-static struct imx390_platform_data imx390_pdata_2 = {
-	.port = 2,
-	.lanes = 4,
-	.i2c_slave_address = IMX390_I2C_ADDRESS,
-	.suffix = 'b',
+static struct ti960_pdata ti960_pdata = {
+	.subdev_info = ti960_subdevs,
+	.subdev_num = ARRAY_SIZE(ti960_subdevs),
+	.reset_gpio = 0,
+	.suffix = 'a',
 };
 
-static struct ipu_isys_subdev_info imx390_sd_2 = {
-	.csi2 = &imx390_csi2_cfg_2,
+static struct ipu_isys_subdev_info ti960_sd = {
+	.csi2 = &ti960_csi2_cfg,
 	.i2c = {
-	.board_info = {
-		I2C_BOARD_INFO("imx390", IMX390_I2C_ADDRESS),
-		.platform_data = &imx390_pdata_2,
-	},
-	.i2c_adapter_bdf = "0000:00:19.1",
-	},
+		.board_info = {
+			 .type = "ti960",
+			 .addr = TI960_I2C_ADDRESS,
+			 .platform_data = &ti960_pdata,
+		},
+		.i2c_adapter_bdf = "0000:00:15.3",
+	}
 };
+#endif
 
 static struct ipu_isys_clk_mapping clk_mapping[] = {
 	{ CLKDEV_INIT(NULL, NULL, NULL), NULL }
@@ -212,8 +269,9 @@ static struct ipu_isys_subdev_pdata pdata = {
 		&ar0234_sd_2,
 		&ar0234_sd_3,
 		&ar0234_sd_4,
-		&imx390_sd_1,
-		&imx390_sd_2,
+#if IS_ENABLED(CONFIG_VIDEO_TI960)
+		&ti960_sd,
+#endif
 		NULL,
 	},
 	.clk_map = clk_mapping,
diff --git a/include/media/ti960.h b/include/media/ti960.h
index 1e9f83f9ab607..b63668ffd0add 100644
--- a/include/media/ti960.h
+++ b/include/media/ti960.h
@@ -12,7 +12,7 @@
 
 #define TI960_NAME "ti960"
 
-#define TI960_I2C_ADDRESS	0x38
+#define TI960_I2C_ADDRESS	0x32
 
 #define PIXEL_ORDER_GRBG	0
 #define PIXEL_ORDER_RGGB	1
@@ -38,7 +38,7 @@
 #define TI960_MIN_WIDTH		640
 #define TI960_MIN_HEIGHT	480
 #define TI960_MAX_WIDTH		1920
-#define TI960_MAX_HEIGHT	1080
+#define TI960_MAX_HEIGHT	1200
 
 struct ti960_csi_data_format {
 	u32 code;
-- 
2.25.1

