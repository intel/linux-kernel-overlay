From 4a129142a97f831bbe99a8f9f94921db80d2d885 Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Mon, 8 Jul 2024 08:25:39 +0800
Subject: [PATCH] drm/i915/guc: invalidate tlb only if guc submission is
 enabled
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

xa_alloc for guc tlb_lookup is initialized in guc submission. For
some platform which guc submission is not enabled by default,
xa_alloc for guc tlb_lookup might crash kernel.

Signed-off-by: Krystian Garli≈Ñski <krystian.garlinski@comarch.pl>
Signed-off-by: Junxiao Chang <junxiao.chang@intel.com>
---
 drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c b/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
index a84c717981d0..bd524fa3e2a4 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
@@ -1983,7 +1983,7 @@ static int number_mlrc_guc_id(struct intel_guc *guc);
 bool intel_guc_tlb_invalidation_is_available(struct intel_guc *guc)
 {
 	return HAS_GUC_TLB_INVALIDATION(guc_to_gt(guc)->i915) &&
-		intel_guc_is_ready(guc);
+		intel_guc_is_ready(guc) && guc_submission_initialized(guc);
 }
 
 static int init_tlb_lookup(struct intel_guc *guc)
@@ -4906,6 +4906,12 @@ static int guc_send_invalidate_tlb(struct intel_guc *guc,
 	if (!intel_gt_is_enabled(gt))
 		return -EINVAL;
 
+	/* If guc submission is not initialized, guc tlb lookup couldn't be
+	 * accessed either.
+	 */
+	if (!guc_submission_initialized(guc))
+		return -EINVAL;
+
 	init_waitqueue_head(&_wq.wq);
 
 	if (xa_alloc_cyclic_irq(&guc->tlb_lookup, &seqno, wq,
-- 
2.34.1

