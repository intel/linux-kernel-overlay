From b5af60c14cc4e86b91d4ea4d3970378d5b1b7efe Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Mon, 9 Nov 2020 07:53:25 -0800
Subject: [PATCH 33/41] DEBUG: sched/debug: Dump properties of the root domain

Dynamically dump properties of the root domain to observe its behavior.
For instance, it is possible to, while running a workload on the system,
observe if the root domain is overutilized or overloaded.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 kernel/sched/debug.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/kernel/sched/debug.c b/kernel/sched/debug.c
index d45c4b57360b..d421cd9cdd0b 100644
--- a/kernel/sched/debug.c
+++ b/kernel/sched/debug.c
@@ -713,6 +713,32 @@ void print_dl_rq(struct seq_file *m, int cpu, struct dl_rq *dl_rq)
 #undef PU
 }
 
+static void dump_rd_properties(struct seq_file *m, int cpu)
+{
+#ifdef CONFIG_SMP
+	struct rq *rq = cpu_rq(cpu);
+	struct root_domain *rd;
+
+	if (!rq) {
+		SEQ_printf(m, " rq of CPU%d is NULL\n", cpu);
+		return;
+	}
+
+	rd = rq->rd;
+	if (!rd) {
+		SEQ_printf(m, " rd of CPU% is NULL\n", cpu);
+		return;
+	}
+
+	SEQ_printf(m, " rd is at %p\n", rd);
+	SEQ_printf(m, " rd span = %*pbl\n", cpumask_pr_args(rd->span));
+	SEQ_printf(m, " rd online = %*pbl\n", cpumask_pr_args(rd->online));
+	SEQ_printf(m, " rd overload = %d\n", READ_ONCE(rd->overload));
+	SEQ_printf(m, " rd overutlized = %d\n", READ_ONCE(rd->overutilized));
+	SEQ_printf(m, " rd max_cpu_capacity = %lu\n", rd->max_cpu_capacity);
+#endif
+}
+
 static void dump_sd_properties(struct seq_file *m, int cpu)
 {
 #ifdef CONFIG_SMP
@@ -787,6 +813,7 @@ do {									\
 	SEQ_printf(m, "  .%-30s: %Ld.%06ld\n", #x, SPLIT_NS(rq->x))
 
 	dump_sd_properties(m, cpu);
+	dump_rd_properties(m, cpu);
 
 	P(nr_running);
 	P(nr_switches);
-- 
2.32.0

