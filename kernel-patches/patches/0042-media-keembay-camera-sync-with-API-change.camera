From 49fa3e4bf70e3787f53ec225a1f9962598606bb9 Mon Sep 17 00:00:00 2001
From: Zhou Furong <furong.zhou@intel.com>
Date: Wed, 20 Oct 2021 13:41:37 +0800
Subject: [PATCH 42/42] media: keembay-camera: sync with API change

Sync with updated camera API.

Signed-off-by: Zhou Furong <furong.zhou@intel.com>
---
 drivers/media/i2c/kmb-imx219.c                 | 16 ++++++++--------
 drivers/media/i2c/kmb-imx327.c                 | 16 ++++++++--------
 drivers/media/i2c/kmb-imx334.c                 | 16 ++++++++--------
 drivers/media/i2c/kmb-imx335.c                 | 16 ++++++++--------
 drivers/media/i2c/kmb-imx412.c                 | 16 ++++++++--------
 drivers/media/i2c/kmb-mvmx.c                   | 12 ++++++------
 drivers/media/i2c/kmb-ov9282.c                 | 16 ++++++++--------
 drivers/media/i2c/kmb-sensor.c                 | 12 ++++++------
 drivers/media/i2c/kmb-smart-driver.c           | 16 ++++++++--------
 drivers/media/platform/kmb-camera/kmb-camera.c |  2 +-
 drivers/media/platform/kmb-camera/kmb-isp.c    |  8 ++++----
 drivers/media/platform/kmb-camera/kmb-video.c  |  2 +-
 12 files changed, 74 insertions(+), 74 deletions(-)

diff --git a/drivers/media/i2c/kmb-imx219.c b/drivers/media/i2c/kmb-imx219.c
index 53a84a5a5cc5..42a1d47e52d8 100644
--- a/drivers/media/i2c/kmb-imx219.c
+++ b/drivers/media/i2c/kmb-imx219.c
@@ -545,7 +545,7 @@ static int kmb_imx219_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
 {
 	struct kmb_imx219 *kmb_imx219 = to_kmb_imx219(sd);
 	struct v4l2_mbus_framefmt *try_fmt =
-		v4l2_subdev_get_try_format(sd, fh->pad, 0);
+		v4l2_subdev_get_try_format(sd, fh->state, 0);
 
 	mutex_lock(&kmb_imx219->mutex);
 
@@ -787,7 +787,7 @@ static const struct kmb_imx219_mode *kmb_imx219_filter_supported_modes(struct km
  * Return: 0 if successful
  */
 static int kmb_imx219_enum_mbus_code(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct kmb_imx219 *kmb_imx219 = to_kmb_imx219(sd);
@@ -811,7 +811,7 @@ static int kmb_imx219_enum_mbus_code(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_imx219_enum_frame_size(struct v4l2_subdev *sd,
-				      struct v4l2_subdev_pad_config *cfg,
+				      struct v4l2_subdev_state *cfg,
 				      struct v4l2_subdev_frame_size_enum *fsize)
 {
 	struct kmb_imx219 *kmb_imx219 = to_kmb_imx219(sd);
@@ -846,7 +846,7 @@ static int kmb_imx219_enum_frame_size(struct v4l2_subdev *sd,
  */
 static int
 kmb_imx219_enum_frame_interval(struct v4l2_subdev *sd,
-			       struct v4l2_subdev_pad_config *cfg,
+			       struct v4l2_subdev_state *cfg,
 			       struct v4l2_subdev_frame_interval_enum *fie)
 {
 	struct kmb_imx219 *kmb_imx219 = to_kmb_imx219(sd);
@@ -963,7 +963,7 @@ static void kmb_imx219_update_controls(struct kmb_imx219 *kmb_imx219,
  * Return: 0 if successful
  */
 static int kmb_imx219_get_pad_format(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_format *fmt)
 {
 	struct kmb_imx219 *kmb_imx219 = to_kmb_imx219(sd);
@@ -996,7 +996,7 @@ static int kmb_imx219_get_pad_format(struct v4l2_subdev *sd,
  */
 static int
 kmb_imx219_set_pad_format(struct v4l2_subdev *sd,
-			  struct v4l2_subdev_pad_config *cfg,
+			  struct v4l2_subdev_state *cfg,
 			  struct v4l2_subdev_format *fmt)
 {
 	struct kmb_imx219 *kmb_imx219 = to_kmb_imx219(sd);
@@ -1549,7 +1549,7 @@ static int kmb_imx219_i2c_probe(struct i2c_client *client,
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_imx219->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_imx219->sd);
 	if (ret < 0) {
 		dev_err(&client->dev,
 				"failed to register async subdev: %d", ret);
@@ -1799,7 +1799,7 @@ static int kmb_imx219_pdev_probe(struct platform_device *pdev)
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_imx219->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_imx219->sd);
 	if (ret < 0) {
 		dev_err(&pdev->dev,
 				"failed to register async subdev: %d", ret);
diff --git a/drivers/media/i2c/kmb-imx327.c b/drivers/media/i2c/kmb-imx327.c
index 4a2280e5c92a..8bd2411c514e 100644
--- a/drivers/media/i2c/kmb-imx327.c
+++ b/drivers/media/i2c/kmb-imx327.c
@@ -655,7 +655,7 @@ static int kmb_imx327_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
 {
 	struct kmb_imx327 *kmb_imx327 = to_kmb_imx327(sd);
 	struct v4l2_mbus_framefmt *try_fmt =
-		v4l2_subdev_get_try_format(sd, fh->pad, 0);
+		v4l2_subdev_get_try_format(sd, fh->state, 0);
 
 	mutex_lock(&kmb_imx327->mutex);
 
@@ -977,7 +977,7 @@ kmb_imx327_select_camera_mode(struct kmb_imx327 *kmb_imx327,
  * Return: 0 if successful
  */
 static int kmb_imx327_enum_mbus_code(struct v4l2_subdev *sd,
-				     struct v4l2_subdev_pad_config *cfg,
+				     struct v4l2_subdev_state *cfg,
 				     struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct kmb_imx327 *kmb_imx327 = to_kmb_imx327(sd);
@@ -1001,7 +1001,7 @@ static int kmb_imx327_enum_mbus_code(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_imx327_enum_frame_size(struct v4l2_subdev *sd,
-				  struct v4l2_subdev_pad_config *cfg,
+				  struct v4l2_subdev_state *cfg,
 				  struct v4l2_subdev_frame_size_enum *fsize)
 {
 	struct kmb_imx327 *kmb_imx327 = to_kmb_imx327(sd);
@@ -1036,7 +1036,7 @@ static int kmb_imx327_enum_frame_size(struct v4l2_subdev *sd,
  */
 static int
 kmb_imx327_enum_frame_interval(struct v4l2_subdev *sd,
-			       struct v4l2_subdev_pad_config *cfg,
+			       struct v4l2_subdev_state *cfg,
 			       struct v4l2_subdev_frame_interval_enum *fie)
 {
 	struct kmb_imx327 *kmb_imx327 = to_kmb_imx327(sd);
@@ -1243,7 +1243,7 @@ static void kmb_imx327_update_controls(struct kmb_imx327 *kmb_imx327,
  * Return: 0 if successful
  */
 static int kmb_imx327_get_pad_format(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_format *fmt)
 {
 	struct kmb_imx327 *kmb_imx327 = to_kmb_imx327(sd);
@@ -1275,7 +1275,7 @@ static int kmb_imx327_get_pad_format(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_imx327_set_pad_format(struct v4l2_subdev *sd,
-				     struct v4l2_subdev_pad_config *cfg,
+				     struct v4l2_subdev_state *cfg,
 				     struct v4l2_subdev_format *fmt)
 {
 	struct kmb_imx327 *kmb_imx327 = to_kmb_imx327(sd);
@@ -1816,7 +1816,7 @@ static int kmb_imx327_i2c_probe(struct i2c_client *client,
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_imx327->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_imx327->sd);
 	if (ret < 0) {
 		dev_err(&client->dev,
 				"failed to register async subdev: %d", ret);
@@ -2042,7 +2042,7 @@ static int kmb_imx327_pdev_probe(struct platform_device *pdev)
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_imx327->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_imx327->sd);
 	if (ret < 0) {
 		dev_err(&pdev->dev, "failed to register async subdev: %d", ret);
 		goto error_media_entity;
diff --git a/drivers/media/i2c/kmb-imx334.c b/drivers/media/i2c/kmb-imx334.c
index 4e854603bff2..c8ace860f1df 100644
--- a/drivers/media/i2c/kmb-imx334.c
+++ b/drivers/media/i2c/kmb-imx334.c
@@ -763,7 +763,7 @@ static int kmb_imx334_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
 {
 	struct kmb_imx334 *kmb_imx334 = to_kmb_imx334(sd);
 	struct v4l2_mbus_framefmt *try_fmt =
-		v4l2_subdev_get_try_format(sd, fh->pad, 0);
+		v4l2_subdev_get_try_format(sd, fh->state, 0);
 
 	mutex_lock(&kmb_imx334->mutex);
 
@@ -1142,7 +1142,7 @@ kmb_imx334_select_camera_mode(struct kmb_imx334 *kmb_imx334,
  * Return: 0 if successful
  */
 static int kmb_imx334_enum_mbus_code(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct kmb_imx334 *kmb_imx334 = to_kmb_imx334(sd);
@@ -1166,7 +1166,7 @@ static int kmb_imx334_enum_mbus_code(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_imx334_enum_frame_size(struct v4l2_subdev *sd,
-				      struct v4l2_subdev_pad_config *cfg,
+				      struct v4l2_subdev_state *cfg,
 				      struct v4l2_subdev_frame_size_enum *fsize)
 {
 	struct kmb_imx334 *kmb_imx334 = to_kmb_imx334(sd);
@@ -1201,7 +1201,7 @@ static int kmb_imx334_enum_frame_size(struct v4l2_subdev *sd,
  */
 static int
 kmb_imx334_enum_frame_interval(struct v4l2_subdev *sd,
-			       struct v4l2_subdev_pad_config *cfg,
+			       struct v4l2_subdev_state *cfg,
 			       struct v4l2_subdev_frame_interval_enum *fie)
 {
 	struct kmb_imx334 *kmb_imx334 = to_kmb_imx334(sd);
@@ -1367,7 +1367,7 @@ static void kmb_imx334_update_controls(struct kmb_imx334 *kmb_imx334,
  * Return: 0 if successful
  */
 static int kmb_imx334_get_pad_format(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_format *fmt)
 {
 	struct kmb_imx334 *kmb_imx334 = to_kmb_imx334(sd);
@@ -1400,7 +1400,7 @@ static int kmb_imx334_get_pad_format(struct v4l2_subdev *sd,
  */
 static int
 kmb_imx334_set_pad_format(struct v4l2_subdev *sd,
-			  struct v4l2_subdev_pad_config *cfg,
+			  struct v4l2_subdev_state *cfg,
 			  struct v4l2_subdev_format *fmt)
 {
 	struct kmb_imx334 *kmb_imx334 = to_kmb_imx334(sd);
@@ -2001,7 +2001,7 @@ static int kmb_imx334_i2c_probe(struct i2c_client *client,
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_imx334->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_imx334->sd);
 	if (ret < 0) {
 		dev_err(&client->dev,
 				"failed to register async subdev: %d", ret);
@@ -2246,7 +2246,7 @@ static int kmb_imx334_pdev_probe(struct platform_device *pdev)
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_imx334->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_imx334->sd);
 	if (ret < 0) {
 		dev_err(&pdev->dev,
 				"failed to register async subdev: %d", ret);
diff --git a/drivers/media/i2c/kmb-imx335.c b/drivers/media/i2c/kmb-imx335.c
index 4257d29312a1..05c23f6f2884 100644
--- a/drivers/media/i2c/kmb-imx335.c
+++ b/drivers/media/i2c/kmb-imx335.c
@@ -978,7 +978,7 @@ static int kmb_imx335_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
 {
 	struct kmb_imx335 *kmb_imx335 = to_kmb_imx335(sd);
 	struct v4l2_mbus_framefmt *try_fmt =
-		v4l2_subdev_get_try_format(sd, fh->pad, 0);
+		v4l2_subdev_get_try_format(sd, fh->state, 0);
 
 	mutex_lock(&kmb_imx335->mutex);
 
@@ -1394,7 +1394,7 @@ kmb_imx335_select_camera_mode(struct kmb_imx335 *kmb_imx335,
  * Return: 0 if successful
  */
 static int kmb_imx335_enum_mbus_code(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct kmb_imx335 *kmb_imx335 = to_kmb_imx335(sd);
@@ -1418,7 +1418,7 @@ static int kmb_imx335_enum_mbus_code(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_imx335_enum_frame_size(struct v4l2_subdev *sd,
-				  struct v4l2_subdev_pad_config *cfg,
+				  struct v4l2_subdev_state *cfg,
 				  struct v4l2_subdev_frame_size_enum *fsize)
 {
 	struct kmb_imx335 *kmb_imx335 = to_kmb_imx335(sd);
@@ -1453,7 +1453,7 @@ static int kmb_imx335_enum_frame_size(struct v4l2_subdev *sd,
  */
 static int
 kmb_imx335_enum_frame_interval(struct v4l2_subdev *sd,
-			       struct v4l2_subdev_pad_config *cfg,
+			       struct v4l2_subdev_state *cfg,
 			       struct v4l2_subdev_frame_interval_enum *fie)
 {
 	struct kmb_imx335 *kmb_imx335 = to_kmb_imx335(sd);
@@ -1625,7 +1625,7 @@ static void kmb_imx335_update_controls(struct kmb_imx335 *kmb_imx335,
  * Return: 0 if successful
  */
 static int kmb_imx335_get_pad_format(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_format *fmt)
 {
 	struct kmb_imx335 *kmb_imx335 = to_kmb_imx335(sd);
@@ -1658,7 +1658,7 @@ static int kmb_imx335_get_pad_format(struct v4l2_subdev *sd,
  */
 static int
 kmb_imx335_set_pad_format(struct v4l2_subdev *sd,
-			  struct v4l2_subdev_pad_config *cfg,
+			  struct v4l2_subdev_state *cfg,
 			  struct v4l2_subdev_format *fmt)
 {
 	struct kmb_imx335 *kmb_imx335 = to_kmb_imx335(sd);
@@ -2258,7 +2258,7 @@ static int kmb_imx335_i2c_probe(struct i2c_client *client,
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_imx335->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_imx335->sd);
 	if (ret < 0) {
 		dev_err(&client->dev,
 				"failed to register async subdev: %d", ret);
@@ -2505,7 +2505,7 @@ static int kmb_imx335_pdev_probe(struct platform_device *pdev)
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_imx335->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_imx335->sd);
 	if (ret < 0) {
 		dev_err(&pdev->dev,
 				"failed to register async subdev: %d", ret);
diff --git a/drivers/media/i2c/kmb-imx412.c b/drivers/media/i2c/kmb-imx412.c
index a48bcfc8d0c3..7dbb7e0a1881 100644
--- a/drivers/media/i2c/kmb-imx412.c
+++ b/drivers/media/i2c/kmb-imx412.c
@@ -2248,7 +2248,7 @@ static int kmb_imx412_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
 {
 	struct kmb_imx412 *kmb_imx412 = to_kmb_imx412(sd);
 	struct v4l2_mbus_framefmt *try_fmt =
-		v4l2_subdev_get_try_format(sd, fh->pad, 0);
+		v4l2_subdev_get_try_format(sd, fh->state, 0);
 
 	mutex_lock(&kmb_imx412->mutex);
 
@@ -2882,7 +2882,7 @@ kmb_imx412_select_camera_mode(struct kmb_imx412 *kmb_imx412,
  * Return: 0 if successful
  */
 static int kmb_imx412_enum_mbus_code(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct kmb_imx412 *kmb_imx412 = to_kmb_imx412(sd);
@@ -2936,7 +2936,7 @@ kmb_imx412_get_mode_from_code(const struct kmb_imx412 *kmb_imx412,
  * Return: 0 if successful
  */
 static int kmb_imx412_enum_frame_size(struct v4l2_subdev *sd,
-				  struct v4l2_subdev_pad_config *cfg,
+				  struct v4l2_subdev_state *cfg,
 				  struct v4l2_subdev_frame_size_enum *fsize)
 {
 	struct kmb_imx412 *kmb_imx412 = to_kmb_imx412(sd);
@@ -2975,7 +2975,7 @@ static int kmb_imx412_enum_frame_size(struct v4l2_subdev *sd,
  */
 static int
 kmb_imx412_enum_frame_interval(struct v4l2_subdev *sd,
-			       struct v4l2_subdev_pad_config *cfg,
+			       struct v4l2_subdev_state *cfg,
 			       struct v4l2_subdev_frame_interval_enum *fie)
 {
 	struct kmb_imx412 *kmb_imx412 = to_kmb_imx412(sd);
@@ -3169,7 +3169,7 @@ static void kmb_imx412_update_controls(struct kmb_imx412 *kmb_imx412,
  * Return: 0 if successful
  */
 static int kmb_imx412_get_pad_format(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_format *fmt)
 {
 	struct kmb_imx412 *kmb_imx412 = to_kmb_imx412(sd);
@@ -3202,7 +3202,7 @@ static int kmb_imx412_get_pad_format(struct v4l2_subdev *sd,
  */
 static int
 kmb_imx412_set_pad_format(struct v4l2_subdev *sd,
-			  struct v4l2_subdev_pad_config *cfg,
+			  struct v4l2_subdev_state *cfg,
 			  struct v4l2_subdev_format *fmt)
 {
 	struct kmb_imx412 *kmb_imx412 = to_kmb_imx412(sd);
@@ -3856,7 +3856,7 @@ static int kmb_imx412_i2c_probe(struct i2c_client *client,
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_imx412->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_imx412->sd);
 	if (ret < 0) {
 		dev_err(&client->dev,
 				"failed to register async subdev: %d", ret);
@@ -4166,7 +4166,7 @@ static int kmb_imx412_pdev_probe(struct platform_device *pdev)
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_imx412->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_imx412->sd);
 	if (ret < 0) {
 		dev_err(&pdev->dev,
 				"failed to register async subdev: %d", ret);
diff --git a/drivers/media/i2c/kmb-mvmx.c b/drivers/media/i2c/kmb-mvmx.c
index c568d8b0579b..295c440ed6de 100644
--- a/drivers/media/i2c/kmb-mvmx.c
+++ b/drivers/media/i2c/kmb-mvmx.c
@@ -396,7 +396,7 @@ kmb_mvmx_write_reg(struct kmb_mvmx *kmb_mvmx, u16 reg, u32 len, u32 val)
  * Return: 0 if successful
  */
 static int kmb_mvmx_enum_mbus_code(struct v4l2_subdev *sd,
-				   struct v4l2_subdev_pad_config *cfg,
+				   struct v4l2_subdev_state *cfg,
 				   struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct kmb_mvmx *kmb_mvmx = container_of(sd, struct kmb_mvmx, subdev);
@@ -424,7 +424,7 @@ static int kmb_mvmx_enum_mbus_code(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_mvmx_enum_frame_sizes(struct v4l2_subdev *sd,
-				     struct v4l2_subdev_pad_config *cfg,
+				     struct v4l2_subdev_state *cfg,
 				     struct v4l2_subdev_frame_size_enum *fse)
 {
 	struct kmb_mvmx *kmb_mvmx = container_of(sd, struct kmb_mvmx, subdev);
@@ -457,7 +457,7 @@ static int kmb_mvmx_enum_frame_sizes(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_mvmx_get_fmt(struct v4l2_subdev *sd,
-			    struct v4l2_subdev_pad_config *cfg,
+			    struct v4l2_subdev_state *cfg,
 			    struct v4l2_subdev_format *fmt)
 {
 	struct kmb_mvmx *kmb_mvmx = container_of(sd, struct kmb_mvmx, subdev);
@@ -587,7 +587,7 @@ static u64 kmb_mvmx_get_lane_rate_mbps(const u32 pix_rate, const u32 bpp,
  * Return: 0 if successful
  */
 static int kmb_mvmx_set_fmt(struct v4l2_subdev *sd,
-			    struct v4l2_subdev_pad_config *cfg,
+			    struct v4l2_subdev_state *cfg,
 			    struct v4l2_subdev_format *fmt)
 {
 	struct kmb_mvmx *kmb_mvmx = container_of(sd, struct kmb_mvmx, subdev);
@@ -599,7 +599,7 @@ static int kmb_mvmx_set_fmt(struct v4l2_subdev *sd,
 
 	mutex_lock(&kmb_mvmx->mutex);
 	if (fmt->which == V4L2_SUBDEV_FORMAT_TRY) {
-		cfg->try_fmt = fmt->format;
+		cfg->pads->try_fmt = fmt->format;
 	} else {
 		kmb_mvmx->curr_fmt = *fmt;
 		w = fmt->format.width;
@@ -1222,7 +1222,7 @@ static int kmb_mvmx_pdev_probe(struct platform_device *pdev)
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_mvmx->subdev);
+	ret = v4l2_async_register_subdev_sensor(&kmb_mvmx->subdev);
 	if (ret < 0) {
 		dev_err(&pdev->dev,
 			"failed to register async subdev: %d", ret);
diff --git a/drivers/media/i2c/kmb-ov9282.c b/drivers/media/i2c/kmb-ov9282.c
index be7e7cc96842..11fd1c1d5094 100644
--- a/drivers/media/i2c/kmb-ov9282.c
+++ b/drivers/media/i2c/kmb-ov9282.c
@@ -469,7 +469,7 @@ static int kmb_ov9282_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
 {
 	struct kmb_ov9282 *kmb_ov9282 = to_kmb_ov9282(sd);
 	struct v4l2_mbus_framefmt *try_fmt =
-		v4l2_subdev_get_try_format(sd, fh->pad, 0);
+		v4l2_subdev_get_try_format(sd, fh->state, 0);
 
 	mutex_lock(&kmb_ov9282->mutex);
 
@@ -636,7 +636,7 @@ static const struct v4l2_ctrl_config hw_sync_start = {
  * Return: 0 if successful
  */
 static int kmb_ov9282_enum_mbus_code(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct kmb_ov9282 *kmb_ov9282 = to_kmb_ov9282(sd);
@@ -660,7 +660,7 @@ static int kmb_ov9282_enum_mbus_code(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_ov9282_enum_frame_size(struct v4l2_subdev *sd,
-				      struct v4l2_subdev_pad_config *cfg,
+				      struct v4l2_subdev_state *cfg,
 				      struct v4l2_subdev_frame_size_enum *fsize)
 {
 	struct kmb_ov9282 *kmb_ov9282 = to_kmb_ov9282(sd);
@@ -695,7 +695,7 @@ static int kmb_ov9282_enum_frame_size(struct v4l2_subdev *sd,
  */
 static int
 kmb_ov9282_enum_frame_interval(struct v4l2_subdev *sd,
-			       struct v4l2_subdev_pad_config *cfg,
+			       struct v4l2_subdev_state *cfg,
 			       struct v4l2_subdev_frame_interval_enum *fie)
 {
 	struct kmb_ov9282 *kmb_ov9282 = to_kmb_ov9282(sd);
@@ -814,7 +814,7 @@ static void kmb_ov9282_update_controls(struct kmb_ov9282 *kmb_ov9282,
  * Return: 0 if successful
  */
 static int kmb_ov9282_get_pad_format(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_format *fmt)
 {
 	struct kmb_ov9282 *kmb_ov9282 = to_kmb_ov9282(sd);
@@ -846,7 +846,7 @@ static int kmb_ov9282_get_pad_format(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_ov9282_set_pad_format(struct v4l2_subdev *sd,
-				     struct v4l2_subdev_pad_config *cfg,
+				     struct v4l2_subdev_state *cfg,
 				     struct v4l2_subdev_format *fmt)
 {
 	struct kmb_ov9282 *kmb_ov9282 = to_kmb_ov9282(sd);
@@ -1439,7 +1439,7 @@ static int kmb_ov9282_i2c_probe(struct i2c_client *client,
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_ov9282->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_ov9282->sd);
 	if (ret < 0) {
 		dev_err(&client->dev,
 				"failed to register async subdev: %d", ret);
@@ -1674,7 +1674,7 @@ static int kmb_ov9282_pdev_probe(struct platform_device *pdev)
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&kmb_ov9282->sd);
+	ret = v4l2_async_register_subdev_sensor(&kmb_ov9282->sd);
 	if (ret < 0) {
 		dev_err(&pdev->dev,
 				"failed to register async subdev: %d", ret);
diff --git a/drivers/media/i2c/kmb-sensor.c b/drivers/media/i2c/kmb-sensor.c
index 23e8df5848b1..27558d4ad9eb 100644
--- a/drivers/media/i2c/kmb-sensor.c
+++ b/drivers/media/i2c/kmb-sensor.c
@@ -41,7 +41,7 @@ static int kmb_sensor_set_params(struct kmb_sensor *kmb_sensor)
  * Return: 0 if successful
  */
 static int kmb_sensor_enum_mbus_code(struct v4l2_subdev *sd,
-		struct v4l2_subdev_pad_config *cfg,
+		struct v4l2_subdev_state *cfg,
 		struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct kmb_sensor *kmb_sensor =
@@ -70,7 +70,7 @@ static int kmb_sensor_enum_mbus_code(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_sensor_enum_frame_sizes(struct v4l2_subdev *sd,
-		struct v4l2_subdev_pad_config *cfg,
+		struct v4l2_subdev_state *cfg,
 		struct v4l2_subdev_frame_size_enum *fse)
 {
 	struct kmb_sensor *kmb_sensor =
@@ -104,7 +104,7 @@ static int kmb_sensor_enum_frame_sizes(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_sensor_get_fmt(struct v4l2_subdev *sd,
-		struct v4l2_subdev_pad_config *cfg,
+		struct v4l2_subdev_state *cfg,
 		struct v4l2_subdev_format *fmt)
 {
 	struct kmb_sensor *kmb_sensor =
@@ -130,7 +130,7 @@ static int kmb_sensor_get_fmt(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_sensor_set_fmt(struct v4l2_subdev *sd,
-		struct v4l2_subdev_pad_config *cfg,
+		struct v4l2_subdev_state *cfg,
 		struct v4l2_subdev_format *fmt)
 {
 	struct kmb_sensor *kmb_sensor =
@@ -140,7 +140,7 @@ static int kmb_sensor_set_fmt(struct v4l2_subdev *sd,
 
 	mutex_lock(&kmb_sensor->lock);
 	if (fmt->which == V4L2_SUBDEV_FORMAT_TRY)
-		cfg->try_fmt = fmt->format;
+		cfg->pads->try_fmt = fmt->format;
 	else
 		kmb_sensor->curr_fmt = fmt->format;
 	mutex_unlock(&kmb_sensor->lock);
@@ -474,7 +474,7 @@ static int kmb_sensor_probe(struct i2c_client *client,
 
 	v4l2_set_subdev_hostdata(sd, &kmb_sensor->subdev);
 
-	ret = v4l2_async_register_subdev_sensor_common(sd);
+	ret = v4l2_async_register_subdev_sensor(sd);
 	if (ret < 0)
 		goto error_free_ctrl_handler;
 
diff --git a/drivers/media/i2c/kmb-smart-driver.c b/drivers/media/i2c/kmb-smart-driver.c
index e3e184bfc5b7..1347106feb6a 100644
--- a/drivers/media/i2c/kmb-smart-driver.c
+++ b/drivers/media/i2c/kmb-smart-driver.c
@@ -488,7 +488,7 @@ static int kmb_smart_drv_open(struct v4l2_subdev *sd,
 {
 	struct kmb_smart_drv *smart_drv = to_kmb_smart_drv(sd);
 	struct v4l2_mbus_framefmt *try_fmt =
-		v4l2_subdev_get_try_format(sd, fh->pad, 0);
+		v4l2_subdev_get_try_format(sd, fh->state, 0);
 
 	mutex_lock(&smart_drv->mutex);
 
@@ -699,7 +699,7 @@ static const struct v4l2_ctrl_ops kmb_smart_drv_ctrl_ops = {
  * Return: 0 if successful
  */
 static int kmb_smart_drv_enum_mbus_code(struct v4l2_subdev *sd,
-		struct v4l2_subdev_pad_config *cfg,
+		struct v4l2_subdev_state *cfg,
 		struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct kmb_smart_drv *smart_drv = to_kmb_smart_drv(sd);
@@ -723,7 +723,7 @@ static int kmb_smart_drv_enum_mbus_code(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_smart_drv_enum_frame_size(struct v4l2_subdev *sd,
-				      struct v4l2_subdev_pad_config *cfg,
+				      struct v4l2_subdev_state *cfg,
 				      struct v4l2_subdev_frame_size_enum *fsize)
 {
 	struct kmb_smart_drv *smart_drv = to_kmb_smart_drv(sd);
@@ -758,7 +758,7 @@ static int kmb_smart_drv_enum_frame_size(struct v4l2_subdev *sd,
  */
 static int
 kmb_smart_drv_enum_frame_interval(struct v4l2_subdev *sd,
-			       struct v4l2_subdev_pad_config *cfg,
+			       struct v4l2_subdev_state *cfg,
 			       struct v4l2_subdev_frame_interval_enum *fie)
 {
 	struct kmb_smart_drv *smart_drv = to_kmb_smart_drv(sd);
@@ -878,7 +878,7 @@ static void kmb_smart_drv_update_controls(struct kmb_smart_drv *smart_drv,
  * Return: 0 if successful
  */
 static int kmb_smart_drv_get_pad_format(struct v4l2_subdev *sd,
-				 struct v4l2_subdev_pad_config *cfg,
+				 struct v4l2_subdev_state *cfg,
 				 struct v4l2_subdev_format *fmt)
 {
 	struct kmb_smart_drv *smart_drv = to_kmb_smart_drv(sd);
@@ -910,7 +910,7 @@ static int kmb_smart_drv_get_pad_format(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_smart_drv_set_pad_format(struct v4l2_subdev *sd,
-				     struct v4l2_subdev_pad_config *cfg,
+				     struct v4l2_subdev_state *cfg,
 				     struct v4l2_subdev_format *fmt)
 {
 	struct kmb_smart_drv *smart_drv = to_kmb_smart_drv(sd);
@@ -1519,7 +1519,7 @@ static int kmb_smart_drv_i2c_probe(struct i2c_client *client,
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&smart_drv->sd);
+	ret = v4l2_async_register_subdev_sensor(&smart_drv->sd);
 	if (ret < 0) {
 		dev_err(&client->dev,
 				"failed to register async subdev: %d", ret);
@@ -1755,7 +1755,7 @@ static int kmb_smart_drv_pdev_probe(struct platform_device *pdev)
 		goto error_handler_free;
 	}
 
-	ret = v4l2_async_register_subdev_sensor_common(&smart_drv->sd);
+	ret = v4l2_async_register_subdev_sensor(&smart_drv->sd);
 	if (ret < 0) {
 		dev_err(&pdev->dev,
 				"failed to register async subdev: %d", ret);
diff --git a/drivers/media/platform/kmb-camera/kmb-camera.c b/drivers/media/platform/kmb-camera/kmb-camera.c
index 705115babd7c..df390bdbd779 100644
--- a/drivers/media/platform/kmb-camera/kmb-camera.c
+++ b/drivers/media/platform/kmb-camera/kmb-camera.c
@@ -1411,7 +1411,7 @@ static int kmb_cam_parse_nodes(struct kmb_camera *kmb_cam)
 		remote = fwnode_graph_get_remote_port_parent(fwnode);
 		a_subdev = v4l2_async_notifier_add_fwnode_subdev(
 				n, remote,
-				sizeof(struct v4l2_async_subdev));
+				struct v4l2_async_subdev);
 		if (IS_ERR(a_subdev))
 			return PTR_ERR(a_subdev);
 
diff --git a/drivers/media/platform/kmb-camera/kmb-isp.c b/drivers/media/platform/kmb-camera/kmb-isp.c
index ab87fb6697fd..9c937e80bc8c 100644
--- a/drivers/media/platform/kmb-camera/kmb-isp.c
+++ b/drivers/media/platform/kmb-camera/kmb-isp.c
@@ -1303,7 +1303,7 @@ static void kmb_isp_align_fmt(struct kmb_isp *kmb_isp, u32 pad,
  * Return: 0 if successful
  */
 static int kmb_isp_subdev_get_fmt(struct v4l2_subdev *sd,
-				  struct v4l2_subdev_pad_config *cfg,
+				  struct v4l2_subdev_state *cfg,
 				  struct v4l2_subdev_format *format)
 {
 	struct kmb_isp *kmb_isp = v4l2_get_subdevdata(sd);
@@ -1340,7 +1340,7 @@ static int kmb_isp_subdev_get_fmt(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_isp_subdev_set_fmt(struct v4l2_subdev *sd,
-				  struct v4l2_subdev_pad_config *cfg,
+				  struct v4l2_subdev_state *cfg,
 				  struct v4l2_subdev_format *format)
 {
 	struct kmb_isp *kmb_isp = v4l2_get_subdevdata(sd);
@@ -1378,7 +1378,7 @@ static int kmb_isp_subdev_set_fmt(struct v4l2_subdev *sd,
  */
 static int
 kmb_isp_subdev_enum_frame_interval(struct v4l2_subdev *sd,
-				   struct v4l2_subdev_pad_config *cfg,
+				   struct v4l2_subdev_state *cfg,
 				   struct v4l2_subdev_frame_interval_enum *fie)
 {
 	struct kmb_isp *kmb_isp = v4l2_get_subdevdata(sd);
@@ -1428,7 +1428,7 @@ kmb_isp_subdev_enum_frame_interval(struct v4l2_subdev *sd,
  * Return: 0 if successful
  */
 static int kmb_isp_subdev_enum_mbus_code(struct v4l2_subdev *sd,
-					struct v4l2_subdev_pad_config *cfg,
+					struct v4l2_subdev_state *cfg,
 					struct v4l2_subdev_mbus_code_enum *code)
 {
 	struct kmb_isp *kmb_isp = v4l2_get_subdevdata(sd);
diff --git a/drivers/media/platform/kmb-camera/kmb-video.c b/drivers/media/platform/kmb-camera/kmb-video.c
index 7d78017d3e18..5c9f00f1f5cd 100644
--- a/drivers/media/platform/kmb-camera/kmb-video.c
+++ b/drivers/media/platform/kmb-camera/kmb-video.c
@@ -1540,7 +1540,7 @@ static int kmb_video_enum_frameintervals(struct file *file, void *fh,
 	struct kmb_video_fh *vid_fh = kmb_video_from_v4l2(fh);
 	struct kmb_video *kmb_vid = vid_fh->kmb_vid;
 	struct v4l2_subdev_frame_interval_enum interval;
-	struct v4l2_subdev_pad_config cfg;
+	struct v4l2_subdev_state cfg;
 	struct v4l2_subdev *subdev;
 	u32 pad;
 	int ret;
-- 
2.17.1

