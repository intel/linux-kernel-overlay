From 70bd2a00095e1393c19224e2a3fde7cb54e6c743 Mon Sep 17 00:00:00 2001
From: Ankit Nautiyal <ankit.k.nautiyal@intel.com>
Date: Tue, 24 Jan 2023 20:03:51 +0530
Subject: [PATCH 1075/1096] drm/i915/display/mtl: Separate DP VRR capability

Currently VRR is supported for eDP/DP and the VRR capability helper
tells the VRR capability from source and sink for DP/eDP.
A new generic helper function is added to get the VRR capability,
that can call connector specific VRR capability helper function.

v2: Updated commit message to reflect change in VRR capability helper
(Manasi)

Signed-off-by: Ankit Nautiyal <ankit.k.nautiyal@intel.com>
Reviewed-by: Manasi Navare <manasi.d.navare@intel.com>
---
 drivers/gpu/drm/i915/display/intel_display.c |  2 +-
 drivers/gpu/drm/i915/display/intel_dp.c      |  2 +-
 drivers/gpu/drm/i915/display/intel_vrr.c     | 24 +++++++++++---------
 drivers/gpu/drm/i915/i915_drv.h              |  2 +-
 4 files changed, 16 insertions(+), 14 deletions(-)

diff --git a/drivers/gpu/drm/i915/display/intel_display.c b/drivers/gpu/drm/i915/display/intel_display.c
index 3e5496434698..14bfb0a704b7 100644
--- a/drivers/gpu/drm/i915/display/intel_display.c
+++ b/drivers/gpu/drm/i915/display/intel_display.c
@@ -4037,7 +4037,7 @@ static bool hsw_get_pipe_config(struct intel_crtc *crtc,
 	    DISPLAY_VER(dev_priv) >= 11)
 		intel_get_transcoder_timings(crtc, pipe_config);
 
-	if (HAS_VRR(dev_priv) && !transcoder_is_dsi(pipe_config->cpu_transcoder))
+	if (HAS_DP_VRR(dev_priv) && !transcoder_is_dsi(pipe_config->cpu_transcoder))
 		intel_vrr_get_config(crtc, pipe_config);
 
 	intel_get_pipe_src_size(crtc, pipe_config);
diff --git a/drivers/gpu/drm/i915/display/intel_dp.c b/drivers/gpu/drm/i915/display/intel_dp.c
index 4bf95b285da7..e2e9792972b3 100644
--- a/drivers/gpu/drm/i915/display/intel_dp.c
+++ b/drivers/gpu/drm/i915/display/intel_dp.c
@@ -5212,7 +5212,7 @@ intel_dp_add_properties(struct intel_dp *intel_dp, struct drm_connector *connect
 	if (has_gamut_metadata_dip(dev_priv, port))
 		drm_connector_attach_hdr_output_metadata_property(connector);
 
-	if (HAS_VRR(dev_priv))
+	if (HAS_DP_VRR(dev_priv))
 		drm_connector_attach_vrr_capable_property(connector);
 }
 
diff --git a/drivers/gpu/drm/i915/display/intel_vrr.c b/drivers/gpu/drm/i915/display/intel_vrr.c
index 5ff6aed9575e..7c0d3da73935 100644
--- a/drivers/gpu/drm/i915/display/intel_vrr.c
+++ b/drivers/gpu/drm/i915/display/intel_vrr.c
@@ -10,11 +10,12 @@
 #include "intel_display_types.h"
 #include "intel_vrr.h"
 
-bool intel_vrr_is_capable(struct intel_connector *connector)
+static bool
+intel_vrr_dp_is_capable(struct intel_connector *connector)
 {
 	const struct drm_display_info *info = &connector->base.display_info;
 	struct drm_i915_private *i915 = to_i915(connector->base.dev);
-	struct intel_dp *intel_dp;
+	struct intel_dp *intel_dp = intel_attached_dp(connector);
 
 	/*
 	 * DP Sink is capable of VRR video timings if
@@ -22,24 +23,25 @@ bool intel_vrr_is_capable(struct intel_connector *connector)
 	 * EDID monitor range also should be atleast 10 for reasonable
 	 * Adaptive Sync or Variable Refresh Rate end user experience.
 	 */
+	if (!drm_dp_sink_can_do_video_without_timing_msa(intel_dp->dpcd))
+		return false;
+
+	return HAS_DP_VRR(i915) &&
+	       info->monitor_range.max_vfreq - info->monitor_range.min_vfreq > 10;
+}
+
+bool intel_vrr_is_capable(struct intel_connector *connector)
+{
 	switch (connector->base.connector_type) {
 	case DRM_MODE_CONNECTOR_eDP:
 		if (!connector->panel.vbt.vrr)
 			return false;
 		fallthrough;
 	case DRM_MODE_CONNECTOR_DisplayPort:
-		intel_dp = intel_attached_dp(connector);
-
-		if (!drm_dp_sink_can_do_video_without_timing_msa(intel_dp->dpcd))
-			return false;
-
-		break;
+		return intel_vrr_dp_is_capable(connector);
 	default:
 		return false;
 	}
-
-	return HAS_VRR(i915) &&
-		info->monitor_range.max_vfreq - info->monitor_range.min_vfreq > 10;
 }
 
 void
diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index 6b3a70415cd7..3338912cbe53 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -912,7 +912,7 @@ IS_SUBPLATFORM(const struct drm_i915_private *i915,
 
 #define HAS_DISPLAY(dev_priv) (RUNTIME_INFO(dev_priv)->pipe_mask != 0)
 
-#define HAS_VRR(i915)	(DISPLAY_VER(i915) >= 11)
+#define HAS_DP_VRR(i915)	(DISPLAY_VER(i915) >= 11)
 
 #define HAS_ASYNC_FLIPS(i915)		(DISPLAY_VER(i915) >= 5)
 
-- 
2.25.1

