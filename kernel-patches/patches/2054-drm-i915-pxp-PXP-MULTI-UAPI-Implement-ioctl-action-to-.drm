From e75d7a8eb5a49a9ebb1c406a1be7790f512f0305 Mon Sep 17 00:00:00 2001
From: "Huang, Sean Z" <sean.z.huang@intel.com>
Date: Wed, 9 Dec 2020 19:19:10 -0800
Subject: [PATCH 2054/2071] drm/i915/pxp:[PXP-MULTI-UAPI] Implement ioctl
 action to send TEE commands

Implement the ioctl action to allow userspace driver sends TEE
commands via PXP ioctl, instead of TEE iotcl. So we can
centralize those protection operations at PXP.

Signed-off-by: Huang, Sean Z <sean.z.huang@intel.com>
Signed-off-by: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
Reviewed by: Alan Previn <alan.previn.teres.alexis@intel.com>
Signed-off-by: Alan Previn <alan.previn.teres.alexis@intel.com>
---
 drivers/gpu/drm/i915/pxp/intel_pxp.c     | 32 ++++++++++++++
 drivers/gpu/drm/i915/pxp/intel_pxp_tee.c | 56 ++++++++++++++++++++++++
 drivers/gpu/drm/i915/pxp/intel_pxp_tee.h |  5 +++
 include/uapi/drm/i915_drm_prelim.h       | 12 +++++
 4 files changed, 105 insertions(+)

diff --git a/drivers/gpu/drm/i915/pxp/intel_pxp.c b/drivers/gpu/drm/i915/pxp/intel_pxp.c
index e25d62a8d306..92e782bffd6c 100644
--- a/drivers/gpu/drm/i915/pxp/intel_pxp.c
+++ b/drivers/gpu/drm/i915/pxp/intel_pxp.c
@@ -548,6 +548,34 @@ static int pxp_set_session_status(struct intel_pxp *pxp,
 	return ret;
 }
 
+static int pxp_send_tee_msg(struct intel_pxp *pxp,
+			    struct prelim_drm_i915_pxp_ops *pxp_ops,
+			    struct drm_file *drmfile)
+{
+	struct drm_i915_private *i915 = pxp->ctrl_gt->i915;
+	struct prelim_drm_i915_pxp_tee_io_message_params params;
+	struct prelim_drm_i915_pxp_tee_io_message_params __user *uparams =
+		u64_to_user_ptr(pxp_ops->params);
+	int ret = 0;
+
+	if (copy_from_user(&params, uparams, sizeof(params)) != 0)
+		return -EFAULT;
+
+	ret = intel_pxp_tee_ioctl_io_message(pxp, &params);
+	if (ret >= 0) {
+		pxp_ops->status = ret;
+
+		if (copy_to_user(uparams, &params, sizeof(params)))
+			ret = -EFAULT;
+		else
+			ret = 0;
+	} else {
+		drm_dbg(&i915->drm, "Failed to send user TEE IO message\n");
+	}
+
+	return ret;
+}
+
 int i915_pxp_ops_ioctl(struct drm_device *dev, void *data, struct drm_file *drmfile)
 {
 	int ret = 0;
@@ -588,8 +616,12 @@ int i915_pxp_ops_ioctl(struct drm_device *dev, void *data, struct drm_file *drmf
 	case PRELIM_DRM_I915_PXP_ACTION_SET_SESSION_STATUS:
 		ret = pxp_set_session_status(pxp, pxp_ops, drmfile);
 		break;
+	case PRELIM_DRM_I915_PXP_ACTION_TEE_IO_MESSAGE:
+		ret = pxp_send_tee_msg(pxp, pxp_ops, drmfile);
+		break;
 	default:
 		ret = -EINVAL;
+		break;
 	}
 
 out_unlock:
diff --git a/drivers/gpu/drm/i915/pxp/intel_pxp_tee.c b/drivers/gpu/drm/i915/pxp/intel_pxp_tee.c
index 1ce07d7e8769..8ea4e836b251 100644
--- a/drivers/gpu/drm/i915/pxp/intel_pxp_tee.c
+++ b/drivers/gpu/drm/i915/pxp/intel_pxp_tee.c
@@ -401,3 +401,59 @@ void intel_pxp_tee_end_arb_fw_session(struct intel_pxp *pxp, u32 session_id)
 		}
 	}
 }
+
+static bool tee_ioctl_buffer_size_valid(u32 size)
+{
+	return size > 0 && size <= SZ_64K;
+}
+
+int intel_pxp_tee_ioctl_io_message(struct intel_pxp *pxp,
+				   struct prelim_drm_i915_pxp_tee_io_message_params *params)
+{
+	struct drm_i915_private *i915 = pxp->ctrl_gt->i915;
+	void *msg_in = NULL;
+	void *msg_out = NULL;
+	int ret = 0;
+
+	if (!params->msg_in || !params->msg_out ||
+	    !tee_ioctl_buffer_size_valid(params->msg_out_buf_size) ||
+	    !tee_ioctl_buffer_size_valid(params->msg_in_size))
+		return -EINVAL;
+
+	msg_in = kzalloc(params->msg_in_size, GFP_KERNEL);
+	if (!msg_in)
+		return -ENOMEM;
+
+	msg_out = kzalloc(params->msg_out_buf_size, GFP_KERNEL);
+	if (!msg_out) {
+		ret = -ENOMEM;
+		goto end;
+	}
+
+	if (copy_from_user(msg_in, u64_to_user_ptr(params->msg_in), params->msg_in_size)) {
+		drm_dbg(&i915->drm, "Failed to copy_from_user for TEE message\n");
+		ret = -EFAULT;
+		goto end;
+	}
+
+	ret = intel_pxp_tee_io_message(pxp,
+				       msg_in, params->msg_in_size,
+				       msg_out, params->msg_out_buf_size,
+				       &params->msg_out_ret_size);
+	if (ret) {
+		drm_dbg(&i915->drm, "Failed to send/receive user TEE message\n");
+		goto end;
+	}
+
+	if (copy_to_user(u64_to_user_ptr(params->msg_out), msg_out, params->msg_out_ret_size)) {
+		drm_dbg(&i915->drm, "Failed copy_to_user for TEE message\n");
+		ret = -EFAULT;
+		goto end;
+	}
+
+end:
+	kfree(msg_in);
+	kfree(msg_out);
+	return ret;
+}
+
diff --git a/drivers/gpu/drm/i915/pxp/intel_pxp_tee.h b/drivers/gpu/drm/i915/pxp/intel_pxp_tee.h
index aeb3dfe7ce96..da11e245baba 100644
--- a/drivers/gpu/drm/i915/pxp/intel_pxp_tee.h
+++ b/drivers/gpu/drm/i915/pxp/intel_pxp_tee.h
@@ -8,6 +8,8 @@
 
 #include "intel_pxp.h"
 
+struct prelim_drm_i915_pxp_tee_io_message_params;
+
 int intel_pxp_tee_component_init(struct intel_pxp *pxp);
 void intel_pxp_tee_component_fini(struct intel_pxp *pxp);
 
@@ -19,4 +21,7 @@ int intel_pxp_tee_stream_message(struct intel_pxp *pxp,
 				 void *msg_in, size_t msg_in_len,
 				 void *msg_out, size_t msg_out_len);
 
+int intel_pxp_tee_ioctl_io_message(struct intel_pxp *pxp,
+				   struct prelim_drm_i915_pxp_tee_io_message_params *params);
+
 #endif /* __INTEL_PXP_TEE_H__ */
diff --git a/include/uapi/drm/i915_drm_prelim.h b/include/uapi/drm/i915_drm_prelim.h
index 951d0a1fb5cd..12c91494aba5 100644
--- a/include/uapi/drm/i915_drm_prelim.h
+++ b/include/uapi/drm/i915_drm_prelim.h
@@ -47,6 +47,17 @@ struct prelim_drm_i915_pxp_set_session_status_params {
 #define PRELIM_DRM_I915_PXP_REQ_SESSION_TERMINATE 2
 } __attribute__((packed));
 
+/*
+ * struct pxp_tee_io_message_params - Params to send/receive message to/from TEE.
+ */
+struct prelim_drm_i915_pxp_tee_io_message_params {
+	__u64 msg_in; /* in - pointer to buffer containing input message */
+	__u32 msg_in_size; /* in - input message size */
+	__u64 msg_out; /* in - pointer to buffer to store the output message */
+	__u32 msg_out_buf_size; /* in -  provided output message buffer size */
+	__u32 msg_out_ret_size; /* out- output message actual size returned from TEE */
+} __attribute__((packed));
+
 /*
  * DRM_I915_PXP_OPS -
  *
@@ -62,6 +73,7 @@ struct prelim_drm_i915_pxp_set_session_status_params {
 struct prelim_drm_i915_pxp_ops {
 	__u32 action; /* in - specified action of this operation */
 #define PRELIM_DRM_I915_PXP_ACTION_SET_SESSION_STATUS 0
+#define PRELIM_DRM_I915_PXP_ACTION_TEE_IO_MESSAGE 1
 
 	__u32 status; /* out - status output for this operation */
 #define PRELIM_DRM_I915_PXP_OP_STATUS_SUCCESS 0
-- 
2.25.1

