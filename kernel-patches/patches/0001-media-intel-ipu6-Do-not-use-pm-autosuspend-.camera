From b1c5b21cc9427757dfd4cc6f5b9afb7de263be82 Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Wed, 20 Mar 2024 16:16:44 +0800
Subject: [PATCH 1/6] media: intel-ipu6: Do not use pm autosuspend for psys
 anymore

Change Description:
The autosuspend feature was involved for command-based legacy psys
driver which need autosuspend feature for power saving. For IPU6
PPG based processing, we enable the runtime power-gating based on the
PPG scheduling and state, so the autosuspend feature was disabled and
not used at all. Remove the runtime pm autosuspend now.

Test Platform:
tglrvp
volteer

Signed-off-by: Bingbu Cao <bingbu.cao@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu-psys.c           | 26 +-------------------
 drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c |  4 +--
 drivers/media/pci/intel/ipu6/ipu6-ppg.c      |  2 +-
 drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c |  4 +--
 drivers/media/pci/intel/ipu6/ipu6-psys.c     |  2 +-
 5 files changed, 7 insertions(+), 31 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-psys.c b/drivers/media/pci/intel/ipu-psys.c
index 0a9ca1173cb6..e5f96b93611a 100644
--- a/drivers/media/pci/intel/ipu-psys.c
+++ b/drivers/media/pci/intel/ipu-psys.c
@@ -39,21 +39,9 @@ module_param(async_fw_init, bool, 0664);
 MODULE_PARM_DESC(async_fw_init, "Enable asynchronous firmware initialization");
 
 #define IPU_PSYS_NUM_DEVICES		4
-#define IPU_PSYS_AUTOSUSPEND_DELAY	2000
 
-#ifdef CONFIG_PM
 static int psys_runtime_pm_resume(struct device *dev);
 static int psys_runtime_pm_suspend(struct device *dev);
-#else
-#define pm_runtime_dont_use_autosuspend(d)
-#define pm_runtime_use_autosuspend(d)
-#define pm_runtime_set_autosuspend_delay(d, f)	0
-#define pm_runtime_get_sync(d)			0
-#define pm_runtime_put(d)			0
-#define pm_runtime_put_sync(d)			0
-#define pm_runtime_put_noidle(d)		0
-#define pm_runtime_put_autosuspend(d)		0
-#endif
 
 static dev_t ipu_psys_dev_t;
 static DECLARE_BITMAP(ipu_psys_devices, IPU_PSYS_NUM_DEVICES);
@@ -890,10 +878,6 @@ static int psys_runtime_pm_resume(struct device *dev)
 	if (!psys)
 		return 0;
 
-	/*
-	 * In runtime autosuspend mode, if the psys is in power on state, no
-	 * need to resume again.
-	 */
 	spin_lock_irqsave(&psys->ready_lock, flags);
 	if (psys->ready) {
 		spin_unlock_irqrestore(&psys->ready_lock, flags);
@@ -1424,11 +1408,6 @@ static int ipu_psys_probe(struct ipu_bus_device *adev)
 	strlcpy(psys->caps.dev_model, IPU_MEDIA_DEV_MODEL_NAME,
 		sizeof(psys->caps.dev_model));
 
-	pm_runtime_set_autosuspend_delay(&psys->adev->dev,
-					 IPU_PSYS_AUTOSUSPEND_DELAY);
-	pm_runtime_use_autosuspend(&psys->adev->dev);
-	pm_runtime_mark_last_busy(&psys->adev->dev);
-
 	mutex_unlock(&ipu_psys_mutex);
 
 #ifdef CONFIG_DEBUG_FS
@@ -1487,8 +1466,6 @@ static void ipu_psys_remove(struct ipu_bus_device *adev)
 		psys->sched_cmd_thread = NULL;
 	}
 
-	pm_runtime_dont_use_autosuspend(&psys->adev->dev);
-
 	mutex_lock(&ipu_psys_mutex);
 
 	list_for_each_entry_safe(kpg, kpg0, &psys->pgs, list) {
@@ -1543,8 +1520,7 @@ static irqreturn_t psys_isr_threaded(struct ipu_bus_device *adev)
 		ipu_psys_handle_events(psys);
 	}
 
-	pm_runtime_mark_last_busy(&psys->adev->dev);
-	pm_runtime_put_autosuspend(&psys->adev->dev);
+	pm_runtime_put(&psys->adev->dev);
 	mutex_unlock(&psys->mutex);
 
 	return status ? IRQ_HANDLED : IRQ_NONE;
diff --git a/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c b/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c
index a305c0c3e2cf..478fe73aeead 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-isys-gpc.c
@@ -78,8 +78,8 @@ static int ipu6_isys_gpc_global_enable_set(void *data, u64 val)
 			isys_gpcs->gpc[i].route = 0;
 			isys_gpcs->gpc[i].source = 0;
 		}
-		pm_runtime_mark_last_busy(&isys->adev->dev);
-		pm_runtime_put_autosuspend(&isys->adev->dev);
+
+		pm_runtime_put(&isys->adev->dev);
 	} else {
 		/*
 		 * Set gpc reg and start all gpc here.
diff --git a/drivers/media/pci/intel/ipu6/ipu6-ppg.c b/drivers/media/pci/intel/ipu6/ipu6-ppg.c
index 8f6f413c0393..e7d5605b1020 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-ppg.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-ppg.c
@@ -511,7 +511,7 @@ void ipu_psys_enter_power_gating(struct ipu_psys *psys)
 				continue;
 			}
 
-			ret = pm_runtime_put_autosuspend(&psys->adev->dev);
+			ret = pm_runtime_put(&psys->adev->dev);
 			if (ret < 0) {
 				dev_err(&psys->adev->dev,
 					"failed to power gating off\n");
diff --git a/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c b/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c
index b6b850a68398..49a8df879ab5 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-psys-gpc.c
@@ -81,8 +81,8 @@ static int ipu6_psys_gpc_global_enable_set(void *data, u64 val)
 			psys_gpcs->gpc[idx].route = 0;
 			psys_gpcs->gpc[idx].source = 0;
 		}
-		pm_runtime_mark_last_busy(&psys->adev->dev);
-		pm_runtime_put_autosuspend(&psys->adev->dev);
+
+		pm_runtime_put(&psys->adev->dev);
 	} else {
 		/* Set gpc reg and start all gpc here.
 		 * RST free running local timer.
diff --git a/drivers/media/pci/intel/ipu6/ipu6-psys.c b/drivers/media/pci/intel/ipu6/ipu6-psys.c
index 1c46de9eb71f..a05729e0fa4b 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-psys.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-psys.c
@@ -844,7 +844,7 @@ int ipu_psys_fh_init(struct ipu_psys_fh *fh)
 	mutex_init(&sched->bs_mutex);
 	INIT_LIST_HEAD(&sched->buf_sets);
 	INIT_LIST_HEAD(&sched->ppgs);
-	pm_runtime_dont_use_autosuspend(&psys->adev->dev);
+
 	/* allocate and map memory for buf_sets */
 	for (i = 0; i < IPU_PSYS_BUF_SET_POOL_SIZE; i++) {
 		kbuf_set = kzalloc(sizeof(*kbuf_set), GFP_KERNEL);
-- 
2.17.1

