From 0fcbcfbcbeccf6bff24b06b41fae31ee956e735f Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Thu, 18 Nov 2021 17:06:14 +0800
Subject: [PATCH 36/64] Revert "drm/panfrost: Simplify lock_region calculation"

This reverts commit 95251e6833fa38199b3189d5621bc19b0c027e4b.
---
 drivers/gpu/drm/panfrost/panfrost_mmu.c | 19 ++++++++++++++-----
 1 file changed, 14 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/panfrost/panfrost_mmu.c b/drivers/gpu/drm/panfrost/panfrost_mmu.c
index 4a6a9bccbc34..eb149148b408 100644
--- a/drivers/gpu/drm/panfrost/panfrost_mmu.c
+++ b/drivers/gpu/drm/panfrost/panfrost_mmu.c
@@ -59,12 +59,21 @@ static void lock_region(struct panfrost_device *pfdev, u32 as_nr,
 {
 	u8 region_width;
 	u64 region = iova & PAGE_MASK;
-
-	/* The size is encoded as ceil(log2) minus(1), which may be calculated
-	 * with fls. The size must be clamped to hardware bounds.
+	/*
+	 * fls returns:
+	 * 1 .. 32
+	 *
+	 * 10 + fls(num_pages)
+	 * results in the range (11 .. 42)
 	 */
-	size = max_t(u64, size, PAGE_SIZE);
-	region_width = fls64(size - 1) - 1;
+
+	size = round_up(size, PAGE_SIZE);
+
+	region_width = 10 + fls(size >> PAGE_SHIFT);
+	if ((size >> PAGE_SHIFT) != (1ul << (region_width - 11))) {
+		/* not pow2, so must go up to the next pow2 */
+		region_width += 1;
+	}
 	region |= region_width;
 
 	/* Lock the region that needs to be updated */
-- 
2.27.0

