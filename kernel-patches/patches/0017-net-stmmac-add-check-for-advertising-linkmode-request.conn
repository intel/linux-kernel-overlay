From af869ca21af765f7103e4e2c97de5824e69244c4 Mon Sep 17 00:00:00 2001
From: Noor Azura Ahmad Tarmizi <noor.azura.ahmad.tarmizi@intel.com>
Date: Wed, 3 Aug 2022 11:07:55 +0800
Subject: [PATCH 17/40] net: stmmac: add check for advertising linkmode request
 for set-eee

Add check for advertising linkmode set request  with what is currently
being supported by phy. Unsupported setting will be rejected.

Signed-off-by: Noor Azura Ahmad Tarmizi <noor.azura.ahmad.tarmizi@intel.com>
---
 .../net/ethernet/stmicro/stmmac/stmmac_ethtool.c  | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
index b8ef3425d69ee..7ebfde4d40ef7 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
@@ -829,12 +829,27 @@ static int stmmac_ethtool_op_get_eee(struct net_device *dev,
 static int stmmac_ethtool_op_set_eee(struct net_device *dev,
 				     struct ethtool_eee *edata)
 {
+	__ETHTOOL_DECLARE_LINK_MODE_MASK(lm_advertising);
 	struct stmmac_priv *priv = netdev_priv(dev);
+	struct ethtool_link_ksettings link_ks = {};
 	int ret;
 
 	if (!priv->dma_cap.eee)
 		return -EOPNOTSUPP;
 
+	ethtool_convert_legacy_u32_to_link_mode(lm_advertising,
+						edata->advertised);
+
+	/* Get the current phy link settings */
+	stmmac_ethtool_get_link_ksettings(dev, &link_ks);
+
+	/* Check if the advertising request is supported */
+	if (!bitmap_subset(lm_advertising,
+			   link_ks.link_modes.supported,
+			   __ETHTOOL_LINK_MODE_MASK_NBITS)) {
+		return -EINVAL;
+	}
+
 	if (priv->tx_lpi_enabled != edata->tx_lpi_enabled)
 		netdev_warn(priv->dev,
 			    "Setting EEE tx-lpi is not supported\n");
-- 
2.25.1

