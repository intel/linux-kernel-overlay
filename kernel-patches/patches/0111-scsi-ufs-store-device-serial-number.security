From 134a30ed355d78e76a98ca3f3e3f1458c0fed2bb Mon Sep 17 00:00:00 2001
From: Tomas Winkler <tomas.winkler@intel.com>
Date: Mon, 11 May 2020 22:58:58 +0300
Subject: [PATCH 111/128] scsi: ufs: store device serial number.

Retrieve device serial number and store it for RPMB subsystem use.

V09: Rebase
v10: Fix Kdoc
V11: Rebase

Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
---
 drivers/scsi/ufs/ufs.h    |  5 ++++-
 drivers/scsi/ufs/ufshcd.c | 28 +++++++++++++++++++++++++---
 2 files changed, 29 insertions(+), 4 deletions(-)

diff --git a/drivers/scsi/ufs/ufs.h b/drivers/scsi/ufs/ufs.h
index f8ab16f30fdc..ca66ab928627 100644
--- a/drivers/scsi/ufs/ufs.h
+++ b/drivers/scsi/ufs/ufs.h
@@ -533,7 +533,7 @@ struct ufs_dev_info {
 	u8 max_lu_supported;
 	u8 wb_dedicated_lu;
 	u16 wmanufacturerid;
-	/*UFS device Product Name */
+	/* UFS device Product Name */
 	u8 *model;
 	u16 wspecversion;
 	u32 clk_gating_wait_us;
@@ -542,6 +542,9 @@ struct ufs_dev_info {
 	u32 d_wb_alloc_units;
 	bool b_rpm_dev_flush_capable;
 	u8 b_presrv_uspc_en;
+	/* UFS Serial number */
+	u8 *serial_no;
+	size_t serial_no_len;
 };
 
 /**
diff --git a/drivers/scsi/ufs/ufshcd.c b/drivers/scsi/ufs/ufshcd.c
index 155e9e9f1034..8d325f06e1e7 100644
--- a/drivers/scsi/ufs/ufshcd.c
+++ b/drivers/scsi/ufs/ufshcd.c
@@ -17,6 +17,7 @@
 #include <linux/blk-pm.h>
 #include <linux/blkdev.h>
 #include <linux/rpmb.h>
+#include <linux/string.h>
 #include <asm/unaligned.h>
 #include <linux/blkdev.h>
 #include "ufshcd.h"
@@ -7220,10 +7221,17 @@ static struct rpmb_ops ufshcd_rpmb_dev_ops = {
 
 static inline void ufshcd_rpmb_add(struct ufs_hba *hba)
 {
+	struct ufs_dev_info *dev_info = &hba->dev_info;
 	struct rpmb_dev *rdev;
 	u8 rpmb_rw_size = 1;
 	int ret;
 
+	ufshcd_rpmb_dev_ops.dev_id = kmemdup(dev_info->serial_no,
+					     dev_info->serial_no_len,
+					     GFP_KERNEL);
+	if (ufshcd_rpmb_dev_ops.dev_id)
+		ufshcd_rpmb_dev_ops.dev_id_len = dev_info->serial_no_len;
+
 	ret = scsi_device_get(hba->sdev_ufs_rpmb);
 	if (ret)
 		goto out_put_dev;
@@ -7262,6 +7270,9 @@ static inline void ufshcd_rpmb_remove(struct ufs_hba *hba)
 	rpmb_dev_unregister_by_device(hba->dev, 0);
 	scsi_device_put(hba->sdev_ufs_rpmb);
 	hba->sdev_ufs_rpmb = NULL;
+
+	kfree(ufshcd_rpmb_dev_ops.dev_id);
+	ufshcd_rpmb_dev_ops.dev_id = NULL;
 }
 
 static inline void ufshcd_blk_pm_runtime_init(struct scsi_device *sdev)
@@ -7446,7 +7457,7 @@ static void ufs_fixup_device_setup(struct ufs_hba *hba)
 static int ufs_get_device_desc(struct ufs_hba *hba)
 {
 	int err;
-	u8 model_index;
+	u8 index;
 	u8 *desc_buf;
 	struct ufs_dev_info *dev_info = &hba->dev_info;
 
@@ -7475,9 +7486,9 @@ static int ufs_get_device_desc(struct ufs_hba *hba)
 	dev_info->wspecversion = desc_buf[DEVICE_DESC_PARAM_SPEC_VER] << 8 |
 				      desc_buf[DEVICE_DESC_PARAM_SPEC_VER + 1];
 
-	model_index = desc_buf[DEVICE_DESC_PARAM_PRDCT_NAME];
+	index = desc_buf[DEVICE_DESC_PARAM_PRDCT_NAME];
 
-	err = ufshcd_read_string_desc(hba, model_index,
+	err = ufshcd_read_string_desc(hba, index,
 				      &dev_info->model, SD_ASCII_STD);
 	if (err < 0) {
 		dev_err(hba->dev, "%s: Failed reading Product Name. err = %d\n",
@@ -7489,6 +7500,14 @@ static int ufs_get_device_desc(struct ufs_hba *hba)
 
 	ufshcd_wb_probe(hba, desc_buf);
 
+	index = desc_buf[DEVICE_DESC_PARAM_SN];
+	err = ufshcd_read_string_desc(hba, index, &dev_info->serial_no, SD_RAW);
+	if (err < 0) {
+		dev_err(hba->dev, "%s: Failed reading Serial No. err = %d\n",
+			__func__, err);
+		goto out;
+	}
+
 	/*
 	 * ufshcd_read_string_desc returns size of the string
 	 * reset the error value
@@ -7506,6 +7525,9 @@ static void ufs_put_device_desc(struct ufs_hba *hba)
 
 	kfree(dev_info->model);
 	dev_info->model = NULL;
+
+	kfree(dev_info->serial_no);
+	dev_info->serial_no = NULL;
 }
 
 /**
-- 
2.17.1

