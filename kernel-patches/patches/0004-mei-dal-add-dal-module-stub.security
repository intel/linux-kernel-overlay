From 80425cee0b016667a30274d98f0c02684f837a7f Mon Sep 17 00:00:00 2001
From: Tomas Winkler <tomas.winkler@intel.com>
Date: Tue, 22 Sep 2020 13:42:58 +0300
Subject: [PATCH 04/24] mei: dal: add dal module stub

DAL stands for Dynamic Application Loader, it provides the ability
to run Java applets in a secured environment inside of Intel ME security
engine (ME). The Java applets are also named as trusted applications TAs.

This is an empty module to enable first stacking supporting
code and than actual Linux kernel module.

Change-Id: Iee645dd02cc1231fd7e117d3c17a9ebae48965b9
Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
---
 drivers/misc/mei/Kconfig         |  1 +
 drivers/misc/mei/Makefile        |  3 ++
 drivers/misc/mei/dal/Kconfig     |  9 ++++++
 drivers/misc/mei/dal/Makefile    |  7 +++++
 drivers/misc/mei/dal/dal_class.c | 51 ++++++++++++++++++++++++++++++++
 5 files changed, 71 insertions(+)
 create mode 100644 drivers/misc/mei/dal/Kconfig
 create mode 100644 drivers/misc/mei/dal/Makefile
 create mode 100644 drivers/misc/mei/dal/dal_class.c

diff --git a/drivers/misc/mei/Kconfig b/drivers/misc/mei/Kconfig
index c06581ffa7bd..36cc992137db 100644
--- a/drivers/misc/mei/Kconfig
+++ b/drivers/misc/mei/Kconfig
@@ -57,3 +57,4 @@ config INTEL_MEI_VIRTIO
 	  device over virtio.
 
 source "drivers/misc/mei/hdcp/Kconfig"
+source "drivers/misc/mei/dal/Kconfig"
diff --git a/drivers/misc/mei/Makefile b/drivers/misc/mei/Makefile
index 52aefaab5c1b..1c87131969df 100644
--- a/drivers/misc/mei/Makefile
+++ b/drivers/misc/mei/Makefile
@@ -29,3 +29,6 @@ mei-$(CONFIG_EVENT_TRACING) += mei-trace.o
 CFLAGS_mei-trace.o = -I$(src)
 
 obj-$(CONFIG_INTEL_MEI_HDCP) += hdcp/
+
+obj-$(CONFIG_INTEL_MEI_HDCP) += hdcp/
+obj-$(CONFIG_INTEL_MEI_DAL) += dal/
diff --git a/drivers/misc/mei/dal/Kconfig b/drivers/misc/mei/dal/Kconfig
new file mode 100644
index 000000000000..1d9e2dd3b95b
--- /dev/null
+++ b/drivers/misc/mei/dal/Kconfig
@@ -0,0 +1,9 @@
+# SPDX-License-Identifier: GPL-2.0
+# Copyright (c) 2016-2019, Intel Corporation.
+config INTEL_MEI_DAL
+	tristate "Dynamic Application Loader for ME"
+	depends on INTEL_MEI
+	help
+	  Dynamic Application Loader enables downloading java applets
+	  to DAL FW and run it in a secure environment.
+	  The DAL module exposes both user space api and kernel space api.
diff --git a/drivers/misc/mei/dal/Makefile b/drivers/misc/mei/dal/Makefile
new file mode 100644
index 000000000000..13791b6c858e
--- /dev/null
+++ b/drivers/misc/mei/dal/Makefile
@@ -0,0 +1,7 @@
+# SPDX-License-Identifier: GPL-2.0
+# Copyright (c) 2016-2019, Intel Corporation
+
+ccflags-y += -D__CHECK_ENDIAN__
+
+obj-$(CONFIG_INTEL_MEI_DAL) += mei_dal.o
+mei_dal-objs += dal_class.o
diff --git a/drivers/misc/mei/dal/dal_class.c b/drivers/misc/mei/dal/dal_class.c
new file mode 100644
index 000000000000..6990132dc5e2
--- /dev/null
+++ b/drivers/misc/mei/dal/dal_class.c
@@ -0,0 +1,51 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright(c) 2016-2019 Intel Corporation.
+ */
+
+#define pr_fmt(fmt) KBUILD_MODNAME ": " fmt
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/device.h>
+
+/*
+ * this class contains the 3 mei_cl_device, ivm, sdm, rtm.
+ * it is initialized during dal_probe and is used by the kernel space kdi
+ * to send/recv data to/from mei.
+ *
+ * this class must be initialized before the kernel space kdi uses it.
+ */
+static struct class *dal_class;
+
+/**
+ * mei_dal_exit - module exit function
+ */
+static void __exit mei_dal_exit(void)
+{
+	class_destroy(dal_class);
+}
+
+/**
+ * mei_dal_init - module init function
+ *
+ * Return: 0 on success
+ *         <0 on failure
+ */
+static int __init mei_dal_init(void)
+{
+	dal_class = class_create(THIS_MODULE, "dal");
+	if (IS_ERR(dal_class)) {
+		pr_err("couldn't create class\n");
+		return PTR_ERR(dal_class);
+	}
+
+	return 0;
+}
+
+module_init(mei_dal_init);
+module_exit(mei_dal_exit);
+
+MODULE_AUTHOR("Intel Corporation");
+MODULE_DESCRIPTION("Intel(R) MEI Dynamic Application Loader (DAL)");
+MODULE_LICENSE("GPL v2");
-- 
2.25.1

