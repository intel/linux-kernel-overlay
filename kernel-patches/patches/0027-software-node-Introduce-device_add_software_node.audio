From 99b2ed0551ba5ca15ae7b895d36f83e28c268bd3 Mon Sep 17 00:00:00 2001
From: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date: Fri, 15 Jan 2021 12:49:11 +0300
Subject: [PATCH 27/27] software node: Introduce device_add_software_node()

This helper will register a software node and then assign
it to device at the same time. The function will also make
sure that the device can't have more than one software node.

Acked-by: Felipe Balbi <balbi@kernel.org>
Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Link: https://lore.kernel.org/r/20210115094914.88401-2-heikki.krogerus@linux.intel.com
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/base/swnode.c    | 26 +++++++++-----------------
 include/linux/property.h |  2 +-
 2 files changed, 10 insertions(+), 18 deletions(-)

diff --git a/drivers/base/swnode.c b/drivers/base/swnode.c
index 6495ed3010fc..d3dc9445d530 100644
--- a/drivers/base/swnode.c
+++ b/drivers/base/swnode.c
@@ -866,33 +866,25 @@ EXPORT_SYMBOL_GPL(fwnode_remove_software_node);
 /**
  * device_add_software_node - Assign software node to a device
  * @dev: The device the software node is meant for.
- * @node: The software node.
+ * @swnode: The software node.
  *
- * This function will make @node the secondary firmware node pointer of @dev. If
- * @dev has no primary node, then @node will become the primary node. The
- * function will register @node automatically if it wasn't already registered.
+ * This function will register @swnode and make it the secondary firmware node
+ * pointer of @dev. If @dev has no primary node, then @swnode will become the primary
+ * node.
  */
-int device_add_software_node(struct device *dev, const struct software_node *node)
+int device_add_software_node(struct device *dev, const struct software_node *swnode)
 {
-	struct swnode *swnode;
 	int ret;
 
 	/* Only one software node per device. */
 	if (dev_to_swnode(dev))
 		return -EBUSY;
 
-	swnode = software_node_to_swnode(node);
-	if (swnode) {
-		kobject_get(&swnode->kobj);
-	} else {
-		ret = software_node_register(node);
-		if (ret)
-			return ret;
-
-		swnode = software_node_to_swnode(node);
-	}
+	ret = software_node_register(swnode);
+	if (ret)
+		return ret;
 
-	set_secondary_fwnode(dev, &swnode->fwnode);
+	set_secondary_fwnode(dev, software_node_fwnode(swnode));
 
 	return 0;
 }
diff --git a/include/linux/property.h b/include/linux/property.h
index 08792d7dce86..3b6093f6bd04 100644
--- a/include/linux/property.h
+++ b/include/linux/property.h
@@ -485,7 +485,7 @@ fwnode_create_software_node(const struct property_entry *properties,
 			    const struct fwnode_handle *parent);
 void fwnode_remove_software_node(struct fwnode_handle *fwnode);
 
-int device_add_software_node(struct device *dev, const struct software_node *node);
+int device_add_software_node(struct device *dev, const struct software_node *swnode);
 void device_remove_software_node(struct device *dev);
 
 #endif /* _LINUX_PROPERTY_H_ */
-- 
2.25.1

