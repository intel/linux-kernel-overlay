From d0f06b402321e380343d4c86522d635d68e3443d Mon Sep 17 00:00:00 2001
From: Mahesh Vaidya <mahesh.r.vaidya@intel.com>
Date: Tue, 12 Apr 2022 04:38:01 +0530
Subject: [PATCH 1/2]     spi: Exporting spi_set_cs function symbol

    Exporting the spi_set_cs function to make it availabe for
    spi controllers, which would call this function to assert
    and deassert the chip select for proper/stable functionality.

Signed-off-by: Mahesh Vaidya <mahesh.r.vaidya@intel.com>
---
 drivers/spi/spi.c       | 13 ++++++++++++-
 include/linux/spi/spi.h |  3 +++
 2 files changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/spi/spi.c b/drivers/spi/spi.c
index 4599b121d744..623d3e32a1b2 100644
--- a/drivers/spi/spi.c
+++ b/drivers/spi/spi.c
@@ -928,7 +928,17 @@ static void spi_res_release(struct spi_controller *ctlr, struct spi_message *mes
 
 /*-------------------------------------------------------------------------*/
 
-static void spi_set_cs(struct spi_device *spi, bool enable, bool force)
+/**
+ * spi_set_cs - assert or deassert the spi chip select.
+ * @spi: The spi device for which we set/unset the chip select
+ * @enable: bool value to assert or deassert the chip select
+ * @force: A true bool value indicates to force the chip select to
+ * 	   given value, irrespective of what its current state is
+ *
+ * Called by spi drivers to assert or deassert the chip select
+ * during transactions.
+ */
+void spi_set_cs(struct spi_device *spi, bool enable, bool force)
 {
 	bool activate = enable;
 
@@ -995,6 +1005,7 @@ static void spi_set_cs(struct spi_device *spi, bool enable, bool force)
 			spi_delay_exec(&spi->cs_inactive, NULL);
 	}
 }
+EXPORT_SYMBOL_GPL(spi_set_cs);
 
 #ifdef CONFIG_HAS_DMA
 int spi_map_buf(struct spi_controller *ctlr, struct device *dev,
diff --git a/include/linux/spi/spi.h b/include/linux/spi/spi.h
index 7ab3fed7b804..080311a6867d 100644
--- a/include/linux/spi/spi.h
+++ b/include/linux/spi/spi.h
@@ -708,6 +708,9 @@ extern struct spi_message *spi_get_next_queued_message(struct spi_controller *ct
 extern void spi_finalize_current_message(struct spi_controller *ctlr);
 extern void spi_finalize_current_transfer(struct spi_controller *ctlr);
 
+/* SPI driver calls this function to assert/deassert the chip select */
+extern void spi_set_cs(struct spi_device *spi, bool enable, bool force);
+
 /* Helper calls for driver to timestamp transfer */
 void spi_take_timestamp_pre(struct spi_controller *ctlr,
 			    struct spi_transfer *xfer,
-- 
2.25.1

