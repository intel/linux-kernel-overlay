From d4b5c1ba23857d634f430f4368017b78f13ed046 Mon Sep 17 00:00:00 2001
From: Sean Paul <seanpaul@chromium.org>
Date: Sat, 2 Oct 2021 11:45:37 -0400
Subject: [PATCH 0679/2399] Revert "drm/tegra: cleanup: drm_modeset_lock_all()
 --> DRM_MODESET_LOCK_ALL_BEGIN()"
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This reverts commit a2cd9947d99b54c959fce20dc19d81af53f4674e.

This patchset breaks on intel platforms and was previously NACK'd by
Ville.

Cc: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Cc: Fernando Ramos <greenfoo@u92.eu>
Acked-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Signed-off-by: Sean Paul <seanpaul@chromium.org>
Link: https://patchwork.freedesktop.org/patch/msgid/20211002154542.15800-11-sean@poorly.run
---
 drivers/gpu/drm/tegra/dsi.c  |  6 ++----
 drivers/gpu/drm/tegra/hdmi.c |  6 ++----
 drivers/gpu/drm/tegra/sor.c  | 11 ++++-------
 3 files changed, 8 insertions(+), 15 deletions(-)

diff --git a/drivers/gpu/drm/tegra/dsi.c b/drivers/gpu/drm/tegra/dsi.c
index 28050c188c1c..f46d377f0c30 100644
--- a/drivers/gpu/drm/tegra/dsi.c
+++ b/drivers/gpu/drm/tegra/dsi.c
@@ -23,7 +23,6 @@
 #include <drm/drm_mipi_dsi.h>
 #include <drm/drm_panel.h>
 #include <drm/drm_simple_kms_helper.h>
-#include <drm/drm_drv.h>
 
 #include "dc.h"
 #include "drm.h"
@@ -203,11 +202,10 @@ static int tegra_dsi_show_regs(struct seq_file *s, void *data)
 	struct tegra_dsi *dsi = node->info_ent->data;
 	struct drm_crtc *crtc = dsi->output.encoder.crtc;
 	struct drm_device *drm = node->minor->dev;
-	struct drm_modeset_acquire_ctx ctx;
 	unsigned int i;
 	int err = 0;
 
-	DRM_MODESET_LOCK_ALL_BEGIN(drm, ctx, 0, err);
+	drm_modeset_lock_all(drm);
 
 	if (!crtc || !crtc->state->active) {
 		err = -EBUSY;
@@ -222,7 +220,7 @@ static int tegra_dsi_show_regs(struct seq_file *s, void *data)
 	}
 
 unlock:
-	DRM_MODESET_LOCK_ALL_END(drm, ctx, err);
+	drm_modeset_unlock_all(drm);
 	return err;
 }
 
diff --git a/drivers/gpu/drm/tegra/hdmi.c b/drivers/gpu/drm/tegra/hdmi.c
index a62de7f92414..e5d2a4026028 100644
--- a/drivers/gpu/drm/tegra/hdmi.c
+++ b/drivers/gpu/drm/tegra/hdmi.c
@@ -22,7 +22,6 @@
 #include <drm/drm_fourcc.h>
 #include <drm/drm_probe_helper.h>
 #include <drm/drm_simple_kms_helper.h>
-#include <drm/drm_drv.h>
 
 #include "hda.h"
 #include "hdmi.h"
@@ -1032,11 +1031,10 @@ static int tegra_hdmi_show_regs(struct seq_file *s, void *data)
 	struct tegra_hdmi *hdmi = node->info_ent->data;
 	struct drm_crtc *crtc = hdmi->output.encoder.crtc;
 	struct drm_device *drm = node->minor->dev;
-	struct drm_modeset_acquire_ctx ctx;
 	unsigned int i;
 	int err = 0;
 
-	DRM_MODESET_LOCK_ALL_BEGIN(drm, ctx, 0, err);
+	drm_modeset_lock_all(drm);
 
 	if (!crtc || !crtc->state->active) {
 		err = -EBUSY;
@@ -1051,7 +1049,7 @@ static int tegra_hdmi_show_regs(struct seq_file *s, void *data)
 	}
 
 unlock:
-	DRM_MODESET_LOCK_ALL_END(drm, ctx, err);
+	drm_modeset_unlock_all(drm);
 	return err;
 }
 
diff --git a/drivers/gpu/drm/tegra/sor.c b/drivers/gpu/drm/tegra/sor.c
index 3d1c8b3d1358..0ea320c1092b 100644
--- a/drivers/gpu/drm/tegra/sor.c
+++ b/drivers/gpu/drm/tegra/sor.c
@@ -23,7 +23,6 @@
 #include <drm/drm_panel.h>
 #include <drm/drm_scdc_helper.h>
 #include <drm/drm_simple_kms_helper.h>
-#include <drm/drm_drv.h>
 
 #include "dc.h"
 #include "dp.h"
@@ -1491,11 +1490,10 @@ static int tegra_sor_show_crc(struct seq_file *s, void *data)
 	struct tegra_sor *sor = node->info_ent->data;
 	struct drm_crtc *crtc = sor->output.encoder.crtc;
 	struct drm_device *drm = node->minor->dev;
-	struct drm_modeset_acquire_ctx ctx;
 	int err = 0;
 	u32 value;
 
-	DRM_MODESET_LOCK_ALL_BEGIN(drm, ctx, 0, err);
+	drm_modeset_lock_all(drm);
 
 	if (!crtc || !crtc->state->active) {
 		err = -EBUSY;
@@ -1524,7 +1522,7 @@ static int tegra_sor_show_crc(struct seq_file *s, void *data)
 	seq_printf(s, "%08x\n", value);
 
 unlock:
-	DRM_MODESET_LOCK_ALL_END(drm, ctx, err);
+	drm_modeset_unlock_all(drm);
 	return err;
 }
 
@@ -1654,11 +1652,10 @@ static int tegra_sor_show_regs(struct seq_file *s, void *data)
 	struct tegra_sor *sor = node->info_ent->data;
 	struct drm_crtc *crtc = sor->output.encoder.crtc;
 	struct drm_device *drm = node->minor->dev;
-	struct drm_modeset_acquire_ctx ctx;
 	unsigned int i;
 	int err = 0;
 
-	DRM_MODESET_LOCK_ALL_BEGIN(drm, ctx, 0, err);
+	drm_modeset_lock_all(drm);
 
 	if (!crtc || !crtc->state->active) {
 		err = -EBUSY;
@@ -1673,7 +1670,7 @@ static int tegra_sor_show_regs(struct seq_file *s, void *data)
 	}
 
 unlock:
-	DRM_MODESET_LOCK_ALL_END(drm, ctx, err);
+	drm_modeset_unlock_all(drm);
 	return err;
 }
 
-- 
2.25.1

