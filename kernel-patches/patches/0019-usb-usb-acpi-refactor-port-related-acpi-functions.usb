From b0c7e2e744c7bbe1b2be2e1d9f61768f5d11e250 Mon Sep 17 00:00:00 2001
From: Mathias Nyman <mathias.nyman@linux.intel.com>
Date: Tue, 1 Nov 2022 16:35:03 +0200
Subject: [PATCH 19/23] usb: usb-acpi: refactor port related acpi functions.

refactor usb port device function related to their acpi companions
so that function names match better what they do.

usb_acpi_find_companion_for_port() confusingly does:
  call usb_acpi_get_companion_for_port() to find acpi companion for port
  call usb_acpi_get_connect_type() to parse ACPI _PLD and _UPC entries

Change this so that usb_acpi_find_companion_for_port() does what it says,
finds and returns acpi companion of port.

Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
---
 drivers/usb/core/usb-acpi.c | 31 +++++++++++--------------------
 1 file changed, 11 insertions(+), 20 deletions(-)

diff --git a/drivers/usb/core/usb-acpi.c b/drivers/usb/core/usb-acpi.c
index b754e27c863a..6668d4b48359 100644
--- a/drivers/usb/core/usb-acpi.c
+++ b/drivers/usb/core/usb-acpi.c
@@ -193,7 +193,7 @@ usb_acpi_get_connect_type(struct usb_port *port_dev, acpi_handle *handle)
  */
 
 static struct acpi_device *
-usb_acpi_get_companion_for_port(struct usb_port *port_dev)
+usb_acpi_find_companion_for_port(struct usb_port *port_dev)
 {
 	struct usb_device *udev;
 	struct acpi_device *adev;
@@ -225,20 +225,6 @@ usb_acpi_get_companion_for_port(struct usb_port *port_dev)
 	return acpi_find_child_by_adr(adev, port1);
 }
 
-static struct acpi_device *
-usb_acpi_find_companion_for_port(struct usb_port *port_dev)
-{
-	struct acpi_device *adev;
-
-	adev = usb_acpi_get_companion_for_port(port_dev);
-	if (!adev)
-		return NULL;
-
-	usb_acpi_get_connect_type(port_dev, adev->handle);
-
-	return adev;
-}
-
 static struct acpi_device *
 usb_acpi_find_companion_for_device(struct usb_device *udev)
 {
@@ -264,11 +250,13 @@ usb_acpi_find_companion_for_device(struct usb_device *udev)
 	 * devices share port's ACPI companion.
 	 */
 	port_dev = hub->ports[udev->portnum - 1];
-	return usb_acpi_get_companion_for_port(port_dev);
+	return usb_acpi_find_companion_for_port(port_dev);
 }
 
 static struct acpi_device *usb_acpi_find_companion(struct device *dev)
 {
+	struct acpi_device *adev;
+
 	/*
 	 * The USB hierarchy like following:
 	 *
@@ -297,11 +285,14 @@ static struct acpi_device *usb_acpi_find_companion(struct device *dev)
 	 * devices yet, for that we would need to assign companions to
 	 * devices corresponding to USB interfaces.
 	 */
-	if (is_usb_device(dev))
+	if (is_usb_device(dev)) {
 		return usb_acpi_find_companion_for_device(to_usb_device(dev));
-	else if (is_usb_port(dev))
-		return usb_acpi_find_companion_for_port(to_usb_port(dev));
-
+	} else if (is_usb_port(dev)) {
+		adev = usb_acpi_find_companion_for_port(to_usb_port(dev));
+		if (adev)
+			usb_acpi_get_connect_type(to_usb_port(dev), adev->handle);
+		return adev;
+	}
 	return NULL;
 }
 
-- 
2.25.1

