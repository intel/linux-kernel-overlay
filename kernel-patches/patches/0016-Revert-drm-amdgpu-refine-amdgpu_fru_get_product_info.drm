From 2dc70843305ff43ab0184b4513e0b87e53ec12c1 Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Tue, 6 Jul 2021 18:16:12 +0800
Subject: [PATCH 16/45] Revert "drm/amdgpu: refine amdgpu_fru_get_product_info"

This reverts commit 75fa7fbef1325ab56404b0afcd5822d11b844664.
---
 .../gpu/drm/amd/amdgpu/amdgpu_fru_eeprom.c    | 42 +++++++++----------
 1 file changed, 19 insertions(+), 23 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_fru_eeprom.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_fru_eeprom.c
index 39b6c6bfab453..8f4a8f8d81463 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_fru_eeprom.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_fru_eeprom.c
@@ -101,8 +101,7 @@ static int amdgpu_fru_read_eeprom(struct amdgpu_device *adev, uint32_t addrptr,
 int amdgpu_fru_get_product_info(struct amdgpu_device *adev)
 {
 	unsigned char buff[34];
-	int addrptr, size;
-	int len;
+	int addrptr = 0, size = 0;
 
 	if (!is_fru_eeprom_supported(adev))
 		return 0;
@@ -110,7 +109,7 @@ int amdgpu_fru_get_product_info(struct amdgpu_device *adev)
 	/* If algo exists, it means that the i2c_adapter's initialized */
 	if (!adev->pm.smu_i2c.algo) {
 		DRM_WARN("Cannot access FRU, EEPROM accessor not initialized");
-		return -ENODEV;
+		return 0;
 	}
 
 	/* There's a lot of repetition here. This is due to the FRU having
@@ -129,7 +128,7 @@ int amdgpu_fru_get_product_info(struct amdgpu_device *adev)
 	size = amdgpu_fru_read_eeprom(adev, addrptr, buff);
 	if (size < 1) {
 		DRM_ERROR("Failed to read FRU Manufacturer, ret:%d", size);
-		return -EINVAL;
+		return size;
 	}
 
 	/* Increment the addrptr by the size of the field, and 1 due to the
@@ -139,45 +138,43 @@ int amdgpu_fru_get_product_info(struct amdgpu_device *adev)
 	size = amdgpu_fru_read_eeprom(adev, addrptr, buff);
 	if (size < 1) {
 		DRM_ERROR("Failed to read FRU product name, ret:%d", size);
-		return -EINVAL;
+		return size;
 	}
 
-	len = size;
 	/* Product name should only be 32 characters. Any more,
 	 * and something could be wrong. Cap it at 32 to be safe
 	 */
-	if (len >= sizeof(adev->product_name)) {
+	if (size > 32) {
 		DRM_WARN("FRU Product Number is larger than 32 characters. This is likely a mistake");
-		len = sizeof(adev->product_name) - 1;
+		size = 32;
 	}
 	/* Start at 2 due to buff using fields 0 and 1 for the address */
-	memcpy(adev->product_name, &buff[2], len);
-	adev->product_name[len] = '\0';
+	memcpy(adev->product_name, &buff[2], size);
+	adev->product_name[size] = '\0';
 
 	addrptr += size + 1;
 	size = amdgpu_fru_read_eeprom(adev, addrptr, buff);
 	if (size < 1) {
 		DRM_ERROR("Failed to read FRU product number, ret:%d", size);
-		return -EINVAL;
+		return size;
 	}
 
-	len = size;
 	/* Product number should only be 16 characters. Any more,
 	 * and something could be wrong. Cap it at 16 to be safe
 	 */
-	if (len >= sizeof(adev->product_number)) {
+	if (size > 16) {
 		DRM_WARN("FRU Product Number is larger than 16 characters. This is likely a mistake");
-		len = sizeof(adev->product_number) - 1;
+		size = 16;
 	}
-	memcpy(adev->product_number, &buff[2], len);
-	adev->product_number[len] = '\0';
+	memcpy(adev->product_number, &buff[2], size);
+	adev->product_number[size] = '\0';
 
 	addrptr += size + 1;
 	size = amdgpu_fru_read_eeprom(adev, addrptr, buff);
 
 	if (size < 1) {
 		DRM_ERROR("Failed to read FRU product version, ret:%d", size);
-		return -EINVAL;
+		return size;
 	}
 
 	addrptr += size + 1;
@@ -185,19 +182,18 @@ int amdgpu_fru_get_product_info(struct amdgpu_device *adev)
 
 	if (size < 1) {
 		DRM_ERROR("Failed to read FRU serial number, ret:%d", size);
-		return -EINVAL;
+		return size;
 	}
 
-	len = size;
 	/* Serial number should only be 16 characters. Any more,
 	 * and something could be wrong. Cap it at 16 to be safe
 	 */
-	if (len >= sizeof(adev->serial)) {
+	if (size > 16) {
 		DRM_WARN("FRU Serial Number is larger than 16 characters. This is likely a mistake");
-		len = sizeof(adev->serial) - 1;
+		size = 16;
 	}
-	memcpy(adev->serial, &buff[2], len);
-	adev->serial[len] = '\0';
+	memcpy(adev->serial, &buff[2], size);
+	adev->serial[size] = '\0';
 
 	return 0;
 }
-- 
2.25.1

