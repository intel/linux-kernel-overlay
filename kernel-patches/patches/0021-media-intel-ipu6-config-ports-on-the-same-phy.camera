From b5ee225c66b3cab09aa9c9354f9a8cf1169ff3ce Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Tue, 12 Apr 2022 14:33:46 +0800
Subject: [PATCH 21/40] media: intel-ipu6: config ports on the same phy

config ports on the same phy only, avoid the impact
on the other phy in streaming

Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu6/ipu6-isys-csi2.c |  5 +-
 drivers/media/pci/intel/ipu6/ipu6-isys-phy.c  | 52 +++++++------------
 drivers/media/pci/intel/ipu6/ipu6-isys-phy.h  |  4 +-
 3 files changed, 23 insertions(+), 38 deletions(-)

diff --git a/drivers/media/pci/intel/ipu6/ipu6-isys-csi2.c b/drivers/media/pci/intel/ipu6/ipu6-isys-csi2.c
index f1877850bb64..88b4aa41069a 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-isys-csi2.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-isys-csi2.c
@@ -93,9 +93,8 @@ static int ipu6_csi2_phy_power_set(struct ipu_isys *isys,
 			return ret;
 
 		ipu6_isys_phy_reset(isys, phy_id, 0);
-		ipu6_isys_phy_common_init(isys);
-
-		ret = ipu6_isys_phy_config(isys);
+		ipu6_isys_phy_common_init(isys, cfg);
+		ret = ipu6_isys_phy_config(isys, cfg);
 		if (ret)
 			return ret;
 
diff --git a/drivers/media/pci/intel/ipu6/ipu6-isys-phy.c b/drivers/media/pci/intel/ipu6/ipu6-isys-phy.c
index e5f83c364040..3216bb393e96 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-isys-phy.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-isys-phy.c
@@ -497,34 +497,21 @@ int ipu6_isys_phy_ready(struct ipu_isys *isys, unsigned int phy_id)
 	return -ETIMEDOUT;
 }
 
-int ipu6_isys_phy_common_init(struct ipu_isys *isys)
+int ipu6_isys_phy_common_init(struct ipu_isys *isys, struct ipu_isys_csi2_config *cfg)
 {
 	unsigned int phy_id;
 	void __iomem *phy_base;
 	struct ipu_bus_device *adev = to_ipu_bus_device(&isys->adev->dev);
 	struct ipu_device *isp = adev->isp;
 	void __iomem *isp_base = isp->base;
-	struct ipu_isys_subdev_pdata *spdata = isys->pdata->spdata;
-	struct ipu_isys_subdev_info **subdevs, *sd_info;
 	unsigned int i;
 
-	if (!spdata) {
-		dev_err(&isys->adev->dev, "no subdevice info provided\n");
-		return -EINVAL;
-	}
+	phy_id = cfg->port / 4;
+	phy_base = isp_base + IPU6_ISYS_PHY_BASE(phy_id);
 
-	for (subdevs = spdata->subdevs; *subdevs; subdevs++) {
-		sd_info = *subdevs;
-		if (!sd_info->csi2)
-			continue;
-
-		phy_id = sd_info->csi2->port / 4;
-		phy_base = isp_base + IPU6_ISYS_PHY_BASE(phy_id);
-
-		for (i = 0 ; i < ARRAY_SIZE(common_init_regs); i++) {
-			writel(common_init_regs[i].val,
-				phy_base + common_init_regs[i].reg);
-		}
+	for (i = 0 ; i < ARRAY_SIZE(common_init_regs); i++) {
+		writel(common_init_regs[i].val,
+			phy_base + common_init_regs[i].reg);
 	}
 
 	return 0;
@@ -561,7 +548,7 @@ static int ipu6_isys_driver_port_to_phy_port(struct ipu_isys_csi2_config *cfg)
 	return ret;
 }
 
-int ipu6_isys_phy_config(struct ipu_isys *isys)
+int ipu6_isys_phy_config(struct ipu_isys *isys, struct ipu_isys_csi2_config *cfg)
 {
 	unsigned int phy_port, phy_id;
 	void __iomem *phy_base;
@@ -571,7 +558,6 @@ int ipu6_isys_phy_config(struct ipu_isys *isys)
 	const struct phy_reg **phy_config_regs;
 	struct ipu_isys_subdev_pdata *spdata = isys->pdata->spdata;
 	struct ipu_isys_subdev_info **subdevs, *sd_info;
-	struct ipu_isys_csi2_config cfg;
 	int i;
 
 	if (!spdata) {
@@ -579,31 +565,31 @@ int ipu6_isys_phy_config(struct ipu_isys *isys)
 		return -EINVAL;
 	}
 
+	phy_id = cfg->port / 4;
+	phy_base = isp_base + IPU6_ISYS_PHY_BASE(phy_id);
 	for (subdevs = spdata->subdevs; *subdevs; subdevs++) {
 		sd_info = *subdevs;
 		if (!sd_info->csi2)
 			continue;
 
-		cfg.port = sd_info->csi2->port;
-		cfg.nlanes = sd_info->csi2->nlanes;
-		phy_port = ipu6_isys_driver_port_to_phy_port(&cfg);
+		phy_port = ipu6_isys_driver_port_to_phy_port(sd_info->csi2);
 		if (phy_port < 0) {
 			dev_err(&isys->adev->dev, "invalid port %d for lane %d",
-				cfg.port, cfg.nlanes);
+					cfg->port, cfg->nlanes);
 			return -ENXIO;
 		}
 
-		phy_id = cfg.port / 4;
-		phy_base = isp_base + IPU6_ISYS_PHY_BASE(phy_id);
+		if ((sd_info->csi2->port / 4) != phy_id)
+			continue;
+
 		dev_dbg(&isys->adev->dev, "port%d PHY%u lanes %u\n",
-			cfg.port, phy_id, cfg.nlanes);
+			phy_port, phy_id, cfg->nlanes);
 
-		phy_config_regs = config_regs[cfg.nlanes/2];
-		cfg.port = phy_port;
+		phy_config_regs = config_regs[sd_info->csi2->nlanes/2];
 
-		for (i = 0; phy_config_regs[cfg.port][i].reg; i++) {
-			writel(phy_config_regs[cfg.port][i].val,
-				phy_base + phy_config_regs[cfg.port][i].reg);
+		for (i = 0; phy_config_regs[phy_port][i].reg; i++) {
+			writel(phy_config_regs[phy_port][i].val,
+				phy_base + phy_config_regs[phy_port][i].reg);
 		}
 	}
 
diff --git a/drivers/media/pci/intel/ipu6/ipu6-isys-phy.h b/drivers/media/pci/intel/ipu6/ipu6-isys-phy.h
index 10a1d88c3088..3e4411b5350e 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-isys-phy.h
+++ b/drivers/media/pci/intel/ipu6/ipu6-isys-phy.h
@@ -154,6 +154,6 @@ int ipu6_isys_phy_powerdown_ack(struct ipu_isys *isys, unsigned int phy_id);
 int ipu6_isys_phy_reset(struct ipu_isys *isys, unsigned int phy_id,
 			bool assert);
 int ipu6_isys_phy_ready(struct ipu_isys *isys, unsigned int phy_id);
-int ipu6_isys_phy_common_init(struct ipu_isys *isys);
-int ipu6_isys_phy_config(struct ipu_isys *isys);
+int ipu6_isys_phy_common_init(struct ipu_isys *isys, struct ipu_isys_csi2_config *cfg);
+int ipu6_isys_phy_config(struct ipu_isys *isys, struct ipu_isys_csi2_config *cfg);
 #endif
-- 
2.25.1

