From bb6b5c767a535bb7a00e67af261b24657878bcb0 Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Tue, 12 Apr 2022 14:34:07 +0800
Subject: [PATCH 37/40] media: intel: less lib call timeout for isys reset

there are fw commands of FLUSH and CLOSE, 2000 ms
timeout for each command, and it will be 8 seconds
timeout total for 2 streams reset.
use 200 ms timeout instead.

Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu-isys-video.c | 16 ++--------------
 drivers/media/pci/intel/ipu-isys.h       |  2 ++
 2 files changed, 4 insertions(+), 14 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-isys-video.c b/drivers/media/pci/intel/ipu-isys-video.c
index 40e0d687e8a7..86f7fa39ce0e 100644
--- a/drivers/media/pci/intel/ipu-isys-video.c
+++ b/drivers/media/pci/intel/ipu-isys-video.c
@@ -1281,7 +1281,6 @@ static void stop_streaming_firmware(struct ipu_isys_video *av)
 	int rval, tout;
 	enum ipu_fw_isys_send_type send_type =
 		IPU_FW_ISYS_SEND_TYPE_STREAM_FLUSH;
-	unsigned long timeout = IPU_LIB_CALL_TIMEOUT_JIFFIES;
 
 	reinit_completion(&ip->stream_stop_completion);
 
@@ -1293,13 +1292,8 @@ static void stop_streaming_firmware(struct ipu_isys_video *av)
 		return;
 	}
 
-	mutex_lock(&av->isys->reset_mutex);
-	if (av->isys->in_reset)
-		timeout = msecs_to_jiffies(30);
-	mutex_unlock(&av->isys->reset_mutex);
-
 	tout = wait_for_completion_timeout(&ip->stream_stop_completion,
-					   timeout);
+					   IPU_LIB_CALL_TIMEOUT_JIFFIES_RESET);
 	if (!tout)
 		dev_err(dev, "stream stop time out\n");
 	else if (ip->error)
@@ -1314,7 +1308,6 @@ static void close_streaming_firmware(struct ipu_isys_video *av)
 	    to_ipu_isys_pipeline(av->vdev.entity.pipe);
 	struct device *dev = &av->isys->adev->dev;
 	int rval, tout;
-	unsigned long timeout = IPU_LIB_CALL_TIMEOUT_JIFFIES;
 
 	reinit_completion(&ip->stream_close_completion);
 
@@ -1325,13 +1318,8 @@ static void close_streaming_firmware(struct ipu_isys_video *av)
 		return;
 	}
 
-	mutex_lock(&av->isys->reset_mutex);
-	if (av->isys->in_reset)
-		timeout = msecs_to_jiffies(30);
-	mutex_unlock(&av->isys->reset_mutex);
-
 	tout = wait_for_completion_timeout(&ip->stream_close_completion,
-					   timeout);
+					   IPU_LIB_CALL_TIMEOUT_JIFFIES_RESET);
 	if (!tout)
 		dev_err(dev, "stream close time out\n");
 	else if (ip->error)
diff --git a/drivers/media/pci/intel/ipu-isys.h b/drivers/media/pci/intel/ipu-isys.h
index e43dc8f594a2..1ad857ebe7e8 100644
--- a/drivers/media/pci/intel/ipu-isys.h
+++ b/drivers/media/pci/intel/ipu-isys.h
@@ -50,6 +50,8 @@
 #define IPU_ISYS_TURNOFF_TIMEOUT		1000
 #define IPU_LIB_CALL_TIMEOUT_JIFFIES \
 	msecs_to_jiffies(IPU_LIB_CALL_TIMEOUT_MS)
+#define IPU_LIB_CALL_TIMEOUT_JIFFIES_RESET \
+	msecs_to_jiffies(200)
 
 #define IPU_ISYS_CSI2_LONG_PACKET_HEADER_SIZE	32
 #define IPU_ISYS_CSI2_LONG_PACKET_FOOTER_SIZE	32
-- 
2.25.1

