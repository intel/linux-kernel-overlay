From 17fa9982d807461e144fd7ba211d6422ff2f7265 Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Wed, 22 Mar 2023 17:35:39 +0800
Subject: [PATCH 0029/2236] Revert "drm/i915: Make DRRS debugfs
 per-crtc/connector"

This reverts commit da795e970b3415538a102aeb4f93c301dfb3258b.
---
 .../drm/i915/display/intel_display_debugfs.c  |   4 +-
 drivers/gpu/drm/i915/display/intel_drrs.c     | 134 +++++++++---------
 drivers/gpu/drm/i915/display/intel_drrs.h     |   3 +-
 3 files changed, 72 insertions(+), 69 deletions(-)

diff --git a/drivers/gpu/drm/i915/display/intel_display_debugfs.c b/drivers/gpu/drm/i915/display/intel_display_debugfs.c
index ce75ca713e96..7b7a31df48be 100644
--- a/drivers/gpu/drm/i915/display/intel_display_debugfs.c
+++ b/drivers/gpu/drm/i915/display/intel_display_debugfs.c
@@ -1786,6 +1786,7 @@ void intel_display_debugfs_register(struct drm_i915_private *i915)
 				 minor->debugfs_root, minor);
 
 	intel_dmc_debugfs_register(i915);
+	intel_drrs_debugfs_register(i915);
 	intel_fbc_debugfs_register(i915);
 	skl_watermark_ipc_debugfs_register(i915);
 }
@@ -2100,8 +2101,6 @@ void intel_connector_debugfs_add(struct intel_connector *intel_connector)
 	if (!root)
 		return;
 
-	intel_drrs_connector_debugfs_add(intel_connector);
-
 	if (connector->connector_type == DRM_MODE_CONNECTOR_eDP) {
 		debugfs_create_file("i915_panel_timings", S_IRUGO, root,
 				    connector, &i915_panel_fops);
@@ -2154,7 +2153,6 @@ void intel_crtc_debugfs_add(struct drm_crtc *crtc)
 		return;
 
 	crtc_updates_add(crtc);
-	intel_drrs_crtc_debugfs_add(to_intel_crtc(crtc));
 	intel_fbc_crtc_debugfs_add(to_intel_crtc(crtc));
 
 	debugfs_create_file("i915_current_bpc", 0444, crtc->debugfs_entry, crtc,
diff --git a/drivers/gpu/drm/i915/display/intel_drrs.c b/drivers/gpu/drm/i915/display/intel_drrs.c
index a5d6682475d1..3639d8aa71c9 100644
--- a/drivers/gpu/drm/i915/display/intel_drrs.c
+++ b/drivers/gpu/drm/i915/display/intel_drrs.c
@@ -300,26 +300,46 @@ void intel_crtc_drrs_init(struct intel_crtc *crtc)
 
 static int intel_drrs_debugfs_status_show(struct seq_file *m, void *unused)
 {
-	struct intel_crtc *crtc = m->private;
-	const struct intel_crtc_state *crtc_state =
-		to_intel_crtc_state(crtc->base.state);
+	struct drm_i915_private *i915 = m->private;
+	struct drm_connector_list_iter conn_iter;
+	struct intel_connector *connector;
+	struct intel_crtc *crtc;
 
-	mutex_lock(&crtc->drrs.mutex);
+	drm_connector_list_iter_begin(&i915->drm, &conn_iter);
+	for_each_intel_connector_iter(connector, &conn_iter) {
+		seq_printf(m, "[CONNECTOR:%d:%s] DRRS type: %s\n",
+			   connector->base.base.id, connector->base.name,
+			   intel_drrs_type_str(intel_panel_drrs_type(connector)));
+	}
+	drm_connector_list_iter_end(&conn_iter);
 
-	seq_printf(m, "DRRS enabled: %s\n",
-		   str_yes_no(crtc_state->has_drrs));
+	seq_puts(m, "\n");
 
-	seq_printf(m, "DRRS active: %s\n",
-		   str_yes_no(intel_drrs_is_active(crtc)));
+	for_each_intel_crtc(&i915->drm, crtc) {
+		const struct intel_crtc_state *crtc_state =
+			to_intel_crtc_state(crtc->base.state);
 
-	seq_printf(m, "DRRS refresh rate: %s\n",
-		   crtc->drrs.refresh_rate == DRRS_REFRESH_RATE_LOW ?
-		   "low" : "high");
+		seq_printf(m, "[CRTC:%d:%s]:\n",
+			   crtc->base.base.id, crtc->base.name);
 
-	seq_printf(m, "DRRS busy frontbuffer bits: 0x%x\n",
-		   crtc->drrs.busy_frontbuffer_bits);
+		mutex_lock(&crtc->drrs.mutex);
 
-	mutex_unlock(&crtc->drrs.mutex);
+		/* DRRS Supported */
+		seq_printf(m, "\tDRRS enabled: %s\n",
+			   str_yes_no(crtc_state->has_drrs));
+
+		seq_printf(m, "\tDRRS active: %s\n",
+			   str_yes_no(intel_drrs_is_active(crtc)));
+
+		seq_printf(m, "\tDRRS refresh rate: %s\n",
+			   crtc->drrs.refresh_rate == DRRS_REFRESH_RATE_LOW ?
+			   "low" : "high");
+
+		seq_printf(m, "\tDRRS busy frontbuffer bits: 0x%X\n",
+			   crtc->drrs.busy_frontbuffer_bits);
+
+		mutex_unlock(&crtc->drrs.mutex);
+	}
 
 	return 0;
 }
@@ -328,72 +348,58 @@ DEFINE_SHOW_ATTRIBUTE(intel_drrs_debugfs_status);
 
 static int intel_drrs_debugfs_ctl_set(void *data, u64 val)
 {
-	struct intel_crtc *crtc = data;
-	struct drm_i915_private *i915 = to_i915(crtc->base.dev);
-	struct intel_crtc_state *crtc_state;
-	struct drm_crtc_commit *commit;
-	int ret;
+	struct drm_i915_private *i915 = data;
+	struct intel_crtc *crtc;
 
-	ret = drm_modeset_lock_single_interruptible(&crtc->base.mutex);
-	if (ret)
-		return ret;
+	for_each_intel_crtc(&i915->drm, crtc) {
+		struct intel_crtc_state *crtc_state;
+		struct drm_crtc_commit *commit;
+		int ret;
 
-	crtc_state = to_intel_crtc_state(crtc->base.state);
+		ret = drm_modeset_lock_single_interruptible(&crtc->base.mutex);
+		if (ret)
+			return ret;
 
-	if (!crtc_state->hw.active ||
-	    !crtc_state->has_drrs)
-		goto out;
+		crtc_state = to_intel_crtc_state(crtc->base.state);
 
-	commit = crtc_state->uapi.commit;
-	if (commit) {
-		ret = wait_for_completion_interruptible(&commit->hw_done);
-		if (ret)
+		if (!crtc_state->hw.active ||
+		    !crtc_state->has_drrs)
 			goto out;
-	}
 
-	drm_dbg(&i915->drm,
-		"Manually %sactivating DRRS\n", val ? "" : "de");
+		commit = crtc_state->uapi.commit;
+		if (commit) {
+			ret = wait_for_completion_interruptible(&commit->hw_done);
+			if (ret)
+				goto out;
+		}
+
+		drm_dbg(&i915->drm,
+			"Manually %sactivating DRRS\n", val ? "" : "de");
 
-	if (val)
-		intel_drrs_activate(crtc_state);
-	else
-		intel_drrs_deactivate(crtc_state);
+		if (val)
+			intel_drrs_activate(crtc_state);
+		else
+			intel_drrs_deactivate(crtc_state);
 
 out:
-	drm_modeset_unlock(&crtc->base.mutex);
+		drm_modeset_unlock(&crtc->base.mutex);
+		if (ret)
+			return ret;
+	}
 
-	return ret;
+	return 0;
 }
 
 DEFINE_SIMPLE_ATTRIBUTE(intel_drrs_debugfs_ctl_fops,
 			NULL, intel_drrs_debugfs_ctl_set, "%llu\n");
 
-void intel_drrs_crtc_debugfs_add(struct intel_crtc *crtc)
+void intel_drrs_debugfs_register(struct drm_i915_private *i915)
 {
-	debugfs_create_file("i915_drrs_status", 0444, crtc->base.debugfs_entry,
-			    crtc, &intel_drrs_debugfs_status_fops);
-
-	debugfs_create_file("i915_drrs_ctl", 0644, crtc->base.debugfs_entry,
-			    crtc, &intel_drrs_debugfs_ctl_fops);
-}
+	struct drm_minor *minor = i915->drm.primary;
 
-static int intel_drrs_debugfs_type_show(struct seq_file *m, void *unused)
-{
-	struct intel_connector *connector = m->private;
-
-	seq_printf(m, "DRRS type: %s\n",
-		   intel_drrs_type_str(intel_panel_drrs_type(connector)));
-
-	return 0;
-}
-
-DEFINE_SHOW_ATTRIBUTE(intel_drrs_debugfs_type);
-
-void intel_drrs_connector_debugfs_add(struct intel_connector *connector)
-{
-	if (intel_panel_drrs_type(connector) == DRRS_TYPE_NONE)
-		return;
+	debugfs_create_file("i915_drrs_status", 0444, minor->debugfs_root,
+			    i915, &intel_drrs_debugfs_status_fops);
 
-	debugfs_create_file("i915_drrs_type", 0444, connector->base.debugfs_entry,
-			    connector, &intel_drrs_debugfs_type_fops);
+	debugfs_create_file("i915_drrs_ctl", 0644, minor->debugfs_root,
+			    i915, &intel_drrs_debugfs_ctl_fops);
 }
diff --git a/drivers/gpu/drm/i915/display/intel_drrs.h b/drivers/gpu/drm/i915/display/intel_drrs.h
index 041248bf5d67..052055988341 100644
--- a/drivers/gpu/drm/i915/display/intel_drrs.h
+++ b/drivers/gpu/drm/i915/display/intel_drrs.h
@@ -24,7 +24,6 @@ void intel_drrs_invalidate(struct drm_i915_private *dev_priv,
 void intel_drrs_flush(struct drm_i915_private *dev_priv,
 		      unsigned int frontbuffer_bits);
 void intel_crtc_drrs_init(struct intel_crtc *crtc);
-void intel_drrs_crtc_debugfs_add(struct intel_crtc *crtc);
-void intel_drrs_connector_debugfs_add(struct intel_connector *connector);
+void intel_drrs_debugfs_register(struct drm_i915_private *i915);
 
 #endif /* __INTEL_DRRS_H__ */
-- 
2.25.1

