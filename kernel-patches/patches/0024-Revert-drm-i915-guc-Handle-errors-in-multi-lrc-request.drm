From d1721667e0aedab16633fff2917afd82928713da Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Wed, 24 Nov 2021 13:16:37 +0800
Subject: [PATCH 024/888] Revert "drm/i915/guc: Handle errors in multi-lrc
 requests"

This reverts commit 4d379b38a554a538912cf6cb8f160b9f0660a29f.
---
 .../gpu/drm/i915/gt/uc/intel_guc_submission.c | 61 +------------------
 1 file changed, 3 insertions(+), 58 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c b/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
index c857ce920942..2d1f443450b9 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
@@ -3549,8 +3549,8 @@ static int emit_bb_start_child_no_preempt_mid_batch(struct i915_request *rq,
 }
 
 static u32 *
-__emit_fini_breadcrumb_parent_no_preempt_mid_batch(struct i915_request *rq,
-						   u32 *cs)
+emit_fini_breadcrumb_parent_no_preempt_mid_batch(struct i915_request *rq,
+						 u32 *cs)
 {
 	struct intel_context *ce = rq->context;
 	u8 i;
@@ -3578,41 +3578,6 @@ __emit_fini_breadcrumb_parent_no_preempt_mid_batch(struct i915_request *rq,
 				  get_children_go_addr(ce),
 				  0);
 
-	return cs;
-}
-
-/*
- * If this true, a submission of multi-lrc requests had an error and the
- * requests need to be skipped. The front end (execuf IOCTL) should've called
- * i915_request_skip which squashes the BB but we still need to emit the fini
- * breadrcrumbs seqno write. At this point we don't know how many of the
- * requests in the multi-lrc submission were generated so we can't do the
- * handshake between the parent and children (e.g. if 4 requests should be
- * generated but 2nd hit an error only 1 would be seen by the GuC backend).
- * Simply skip the handshake, but still emit the breadcrumbd seqno, if an error
- * has occurred on any of the requests in submission / relationship.
- */
-static inline bool skip_handshake(struct i915_request *rq)
-{
-	return test_bit(I915_FENCE_FLAG_SKIP_PARALLEL, &rq->fence.flags);
-}
-
-static u32 *
-emit_fini_breadcrumb_parent_no_preempt_mid_batch(struct i915_request *rq,
-						 u32 *cs)
-{
-	struct intel_context *ce = rq->context;
-
-	GEM_BUG_ON(!intel_context_is_parent(ce));
-
-	if (unlikely(skip_handshake(rq))) {
-		memset(cs, 0, sizeof(u32) *
-		       (ce->engine->emit_fini_breadcrumb_dw - 6));
-		cs += ce->engine->emit_fini_breadcrumb_dw - 6;
-	} else {
-		cs = __emit_fini_breadcrumb_parent_no_preempt_mid_batch(rq, cs);
-	}
-
 	/* Emit fini breadcrumb */
 	cs = gen8_emit_ggtt_write(cs,
 				  rq->fence.seqno,
@@ -3629,8 +3594,7 @@ emit_fini_breadcrumb_parent_no_preempt_mid_batch(struct i915_request *rq,
 }
 
 static u32 *
-__emit_fini_breadcrumb_child_no_preempt_mid_batch(struct i915_request *rq,
-						  u32 *cs)
+emit_fini_breadcrumb_child_no_preempt_mid_batch(struct i915_request *rq, u32 *cs)
 {
 	struct intel_context *ce = rq->context;
 
@@ -3656,25 +3620,6 @@ __emit_fini_breadcrumb_child_no_preempt_mid_batch(struct i915_request *rq,
 	*cs++ = get_children_go_addr(ce->parent);
 	*cs++ = 0;
 
-	return cs;
-}
-
-static u32 *
-emit_fini_breadcrumb_child_no_preempt_mid_batch(struct i915_request *rq,
-						u32 *cs)
-{
-	struct intel_context *ce = rq->context;
-
-	GEM_BUG_ON(!intel_context_is_child(ce));
-
-	if (unlikely(skip_handshake(rq))) {
-		memset(cs, 0, sizeof(u32) *
-		       (ce->engine->emit_fini_breadcrumb_dw - 6));
-		cs += ce->engine->emit_fini_breadcrumb_dw - 6;
-	} else {
-		cs = __emit_fini_breadcrumb_child_no_preempt_mid_batch(rq, cs);
-	}
-
 	/* Emit fini breadcrumb */
 	cs = gen8_emit_ggtt_write(cs,
 				  rq->fence.seqno,
-- 
2.25.1

