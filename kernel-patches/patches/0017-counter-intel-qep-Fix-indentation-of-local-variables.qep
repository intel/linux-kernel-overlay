From aaacd76703729c12a726ef77e4bd8d0a773a62a5 Mon Sep 17 00:00:00 2001
From: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date: Fri, 16 Oct 2020 16:38:50 +0300
Subject: [PATCH 17/69] counter: intel-qep: Fix indentation of local variables

It's somewhat unusual to indent local variables with a tab in Linux
kernel code and more over style is not uniform even in this file between
functions so fix this.

Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
---
 drivers/counter/intel-qep.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/drivers/counter/intel-qep.c b/drivers/counter/intel-qep.c
index 47b33d18ef3e..d4d13a242070 100644
--- a/drivers/counter/intel-qep.c
+++ b/drivers/counter/intel-qep.c
@@ -157,8 +157,8 @@ static void intel_qep_init(struct intel_qep *qep, bool reset)
 
 static irqreturn_t intel_qep_irq_thread(int irq, void *_qep)
 {
-	struct intel_qep	*qep = _qep;
-	u32			stat;
+	struct intel_qep *qep = _qep;
+	u32 stat;
 
 	mutex_lock(&qep->lock);
 
@@ -195,8 +195,8 @@ static irqreturn_t intel_qep_irq_thread(int irq, void *_qep)
 
 static irqreturn_t intel_qep_irq(int irq, void *_qep)
 {
-	struct intel_qep	*qep = _qep;
-	u32			stat;
+	struct intel_qep *qep = _qep;
+	u32 stat;
 
 	stat = intel_qep_readl(qep->regs, INTEL_QEPINT_STAT);
 	if (stat) {
@@ -674,11 +674,11 @@ static const struct counter_device_ext intel_qep_ext[] = {
 
 static int intel_qep_probe(struct pci_dev *pci, const struct pci_device_id *id)
 {
-	struct intel_qep	*qep;
-	struct device		*dev = &pci->dev;
-	void __iomem		*regs;
-	int			ret;
-	int			irq;
+	struct intel_qep *qep;
+	struct device *dev = &pci->dev;
+	void __iomem *regs;
+	int ret;
+	int irq;
 
 	qep = devm_kzalloc(dev, sizeof(*qep), GFP_KERNEL);
 	if (!qep)
@@ -754,8 +754,8 @@ static int intel_qep_probe(struct pci_dev *pci, const struct pci_device_id *id)
 
 static void intel_qep_remove(struct pci_dev *pci)
 {
-	struct intel_qep	*qep = pci_get_drvdata(pci);
-	struct device		*dev = &pci->dev;
+	struct intel_qep *qep = pci_get_drvdata(pci);
+	struct device *dev = &pci->dev;
 
 	pm_runtime_forbid(dev);
 	pm_runtime_get_noresume(dev);
-- 
2.27.0

