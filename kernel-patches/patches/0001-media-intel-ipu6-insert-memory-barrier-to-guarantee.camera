From 18f8f32340048f4d5789ed525a7e5bce70db72a1 Mon Sep 17 00:00:00 2001
From: Chen Meng J <meng.j.chen@intel.com>
Date: Tue, 24 Aug 2021 17:21:30 +0800
Subject: [PATCH 1/6] media: intel-ipu6: insert memory barrier to guarantee
 invalidate complete

Change Description:
insert memory barrier to guarantee invalidate complete

Signed-off-by: Bingbu Cao <bingbu.cao@intel.com>
Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
---
 drivers/media/pci/intel/ipu-mmu.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/drivers/media/pci/intel/ipu-mmu.c b/drivers/media/pci/intel/ipu-mmu.c
index 2fdf70730a860..ad84c7b634414 100644
--- a/drivers/media/pci/intel/ipu-mmu.c
+++ b/drivers/media/pci/intel/ipu-mmu.c
@@ -67,6 +67,13 @@ static void tlb_invalidate(struct ipu_mmu *mmu)
 
 		writel(0xffffffff, mmu->mmu_hw[i].base +
 		       REG_TLB_INVALIDATE);
+		/*
+		 * The TLB invalidation is a "single cycle" (IOMMU clock cycles)
+		 * When the actual MMIO write reaches the IPU TLB Invalidate
+		 * register, wmb() will force the TLB invalidate out if the CPU
+		 * attempts to update the IOMMU page table (or sooner).
+		 */
+		wmb();
 	}
 	spin_unlock_irqrestore(&mmu->ready_lock, flags);
 }
-- 
2.27.0

