From d957dfa96ac19e51ee896f8ca80282f9e3600b27 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Fri, 12 Jun 2020 15:37:49 -0700
Subject: [PATCH 30/72] PM / EM: Carve out code checking the perf domain span

In preparation for the introduction of the simplified energy model, carve
out the code that checks the sanity of the CPU span for which a model
will be applied. This code will also be used by the simplified model. No
functional changes.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 kernel/power/energy_model.c | 56 ++++++++++++++++++++++---------------
 1 file changed, 33 insertions(+), 23 deletions(-)

diff --git a/kernel/power/energy_model.c b/kernel/power/energy_model.c
index 0f4530b3a8cd..5e6479d68165 100644
--- a/kernel/power/energy_model.c
+++ b/kernel/power/energy_model.c
@@ -104,6 +104,35 @@ static void em_debug_create_pd(struct device *dev) {}
 static void em_debug_remove_pd(struct device *dev) {}
 #endif
 
+/* must be called with em_pd_mutex */
+static int check_domain_span(struct device *dev, cpumask_t *cpus)
+{
+	unsigned long cap, prev_cap = 0;
+	int cpu;
+
+	for_each_cpu(cpu, cpus) {
+		if (em_cpu_get(cpu)) {
+			dev_err(dev, "EM: exists for CPU%d\n", cpu);
+			return -EEXIST;
+		}
+		/*
+		 * All CPUs of a domain must have the same
+		 * micro-architecture since they all share the same
+		 * table.
+		 */
+		cap = arch_scale_cpu_capacity(cpu);
+		if (prev_cap && prev_cap != cap) {
+			dev_err(dev, "EM: CPUs of %*pbl must have the same capacity\n",
+				cpumask_pr_args(cpus));
+
+			return -EINVAL;
+		}
+		prev_cap = cap;
+	}
+
+	return 0;
+}
+
 static int em_create_perf_table(struct device *dev, struct em_perf_domain *pd,
 				int nr_states, struct em_data_callback *cb)
 {
@@ -282,8 +311,7 @@ int em_dev_register_perf_domain(struct device *dev, unsigned int nr_states,
 				struct em_data_callback *cb, cpumask_t *cpus,
 				bool milliwatts)
 {
-	unsigned long cap, prev_cap = 0;
-	int cpu, ret;
+	int ret;
 
 	if (!dev || !nr_states || !cb)
 		return -EINVAL;
@@ -306,27 +334,9 @@ int em_dev_register_perf_domain(struct device *dev, unsigned int nr_states,
 			goto unlock;
 		}
 
-		for_each_cpu(cpu, cpus) {
-			if (em_cpu_get(cpu)) {
-				dev_err(dev, "EM: exists for CPU%d\n", cpu);
-				ret = -EEXIST;
-				goto unlock;
-			}
-			/*
-			 * All CPUs of a domain must have the same
-			 * micro-architecture since they all share the same
-			 * table.
-			 */
-			cap = arch_scale_cpu_capacity(cpu);
-			if (prev_cap && prev_cap != cap) {
-				dev_err(dev, "EM: CPUs of %*pbl must have the same capacity\n",
-					cpumask_pr_args(cpus));
-
-				ret = -EINVAL;
-				goto unlock;
-			}
-			prev_cap = cap;
-		}
+		ret = check_domain_span(dev, cpus);
+		if (ret)
+			goto unlock;
 	}
 
 	ret = em_create_pd(dev, nr_states, cb, cpus);
-- 
2.27.0

