From 0c963e62a68abd4e703da321d8776726c094b2d7 Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Mon, 22 Mar 2021 11:35:04 +0800
Subject: [PATCH 07/15] Revert "drm/shmem-helper: Check for purged buffers in
 fault handler"

This reverts commit 368b53e797c94776cb0df8736343b0e28ac34f07.
---
 drivers/gpu/drm/drm_gem_shmem_helper.c | 18 ++++--------------
 1 file changed, 4 insertions(+), 14 deletions(-)

diff --git a/drivers/gpu/drm/drm_gem_shmem_helper.c b/drivers/gpu/drm/drm_gem_shmem_helper.c
index d37dcdbd1a76..e00616d94f26 100644
--- a/drivers/gpu/drm/drm_gem_shmem_helper.c
+++ b/drivers/gpu/drm/drm_gem_shmem_helper.c
@@ -534,24 +534,14 @@ static vm_fault_t drm_gem_shmem_fault(struct vm_fault *vmf)
 	struct drm_gem_object *obj = vma->vm_private_data;
 	struct drm_gem_shmem_object *shmem = to_drm_gem_shmem_obj(obj);
 	loff_t num_pages = obj->size >> PAGE_SHIFT;
-	vm_fault_t ret;
 	struct page *page;
 
-	mutex_lock(&shmem->pages_lock);
-
-	if (vmf->pgoff >= num_pages ||
-	    WARN_ON_ONCE(!shmem->pages) ||
-	    shmem->madv < 0) {
-		ret = VM_FAULT_SIGBUS;
-	} else {
-		page = shmem->pages[vmf->pgoff];
+	if (vmf->pgoff >= num_pages || WARN_ON_ONCE(!shmem->pages))
+		return VM_FAULT_SIGBUS;
 
-		ret = vmf_insert_page(vma, vmf->address, page);
-	}
+	page = shmem->pages[vmf->pgoff];
 
-	mutex_unlock(&shmem->pages_lock);
-
-	return ret;
+	return vmf_insert_page(vma, vmf->address, page);
 }
 
 static void drm_gem_shmem_vm_open(struct vm_area_struct *vma)
-- 
2.25.1

