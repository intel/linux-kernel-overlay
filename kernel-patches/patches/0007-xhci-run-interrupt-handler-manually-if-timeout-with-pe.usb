From b9f5e1da55e66270457fecd6616ffca4e9ef797c Mon Sep 17 00:00:00 2001
From: Mathias Nyman <mathias.nyman@linux.intel.com>
Date: Tue, 19 Jul 2022 19:31:27 +0300
Subject: [PATCH 7/9] xhci: run interrupt handler manually if timeout with
 pending interrupt

Bluntly call the interrupt handler from the timer if a command times
and we have a pending interrupt and unhandled command completion events

For testing only, not upstream

Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
---
 drivers/usb/host/xhci-ring.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/host/xhci-ring.c b/drivers/usb/host/xhci-ring.c
index 57f51e3630e4..b07d3740f554 100644
--- a/drivers/usb/host/xhci-ring.c
+++ b/drivers/usb/host/xhci-ring.c
@@ -1611,7 +1611,9 @@ void xhci_handle_command_timeout(struct work_struct *work)
 	    xhci_pending_command_completion(xhci)) {
 		xhci_dbg(xhci, "Command timeout with unhandled command completion\n");
 		xhci_mod_cmd_timer(xhci, XHCI_CMD_DEFAULT_TIMEOUT);
-		goto time_out_completed;
+		spin_unlock_irqrestore(&xhci->lock, flags);
+		xhci_irq(xhci_to_hcd(xhci));
+		return;
 	}
 
 	/* Bail out and tear down xhci if a stop endpoint command failed */
-- 
2.25.1

