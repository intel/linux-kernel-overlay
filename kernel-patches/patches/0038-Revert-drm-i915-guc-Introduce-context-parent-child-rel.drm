From a985631c1275122a46f7a116a30450d14576877c Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Wed, 24 Nov 2021 13:16:39 +0800
Subject: [PATCH 038/888] Revert "drm/i915/guc: Introduce context parent-child
 relationship"

This reverts commit f861061d8b96d034ffb80773339f125a09d5286d.
---
 drivers/gpu/drm/i915/gt/intel_context.c       | 29 --------------
 drivers/gpu/drm/i915/gt/intel_context.h       | 39 -------------------
 drivers/gpu/drm/i915/gt/intel_context_types.h | 23 -----------
 3 files changed, 91 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/intel_context.c b/drivers/gpu/drm/i915/gt/intel_context.c
index 00d1aee6d199..508cfe5770c0 100644
--- a/drivers/gpu/drm/i915/gt/intel_context.c
+++ b/drivers/gpu/drm/i915/gt/intel_context.c
@@ -404,8 +404,6 @@ intel_context_init(struct intel_context *ce, struct intel_engine_cs *engine)
 
 	INIT_LIST_HEAD(&ce->destroyed_link);
 
-	INIT_LIST_HEAD(&ce->guc_child_list);
-
 	/*
 	 * Initialize fence to be complete as this is expected to be complete
 	 * unless there is a pending schedule disable outstanding.
@@ -420,17 +418,10 @@ intel_context_init(struct intel_context *ce, struct intel_engine_cs *engine)
 
 void intel_context_fini(struct intel_context *ce)
 {
-	struct intel_context *child, *next;
-
 	if (ce->timeline)
 		intel_timeline_put(ce->timeline);
 	i915_vm_put(ce->vm);
 
-	/* Need to put the creation ref for the children */
-	if (intel_context_is_parent(ce))
-		for_each_child_safe(ce, child, next)
-			intel_context_put(child);
-
 	mutex_destroy(&ce->pin_mutex);
 	i915_active_fini(&ce->active);
 }
@@ -546,26 +537,6 @@ struct i915_request *intel_context_find_active_request(struct intel_context *ce)
 	return active;
 }
 
-void intel_context_bind_parent_child(struct intel_context *parent,
-				     struct intel_context *child)
-{
-	/*
-	 * Callers responsibility to validate that this function is used
-	 * correctly but we use GEM_BUG_ON here ensure that they do.
-	 */
-	GEM_BUG_ON(!intel_engine_uses_guc(parent->engine));
-	GEM_BUG_ON(intel_context_is_pinned(parent));
-	GEM_BUG_ON(intel_context_is_child(parent));
-	GEM_BUG_ON(intel_context_is_pinned(child));
-	GEM_BUG_ON(intel_context_is_child(child));
-	GEM_BUG_ON(intel_context_is_parent(child));
-
-	parent->guc_number_children++;
-	list_add_tail(&child->guc_child_link,
-		      &parent->guc_child_list);
-	child->parent = parent;
-}
-
 #if IS_ENABLED(CONFIG_DRM_I915_SELFTEST)
 #include "selftest_context.c"
 #endif
diff --git a/drivers/gpu/drm/i915/gt/intel_context.h b/drivers/gpu/drm/i915/gt/intel_context.h
index bb5850ccef69..c41098950746 100644
--- a/drivers/gpu/drm/i915/gt/intel_context.h
+++ b/drivers/gpu/drm/i915/gt/intel_context.h
@@ -44,45 +44,6 @@ void intel_context_free(struct intel_context *ce);
 int intel_context_reconfigure_sseu(struct intel_context *ce,
 				   const struct intel_sseu sseu);
 
-static inline bool intel_context_is_child(struct intel_context *ce)
-{
-	return !!ce->parent;
-}
-
-static inline bool intel_context_is_parent(struct intel_context *ce)
-{
-	return !!ce->guc_number_children;
-}
-
-static inline bool intel_context_is_pinned(struct intel_context *ce);
-
-static inline struct intel_context *
-intel_context_to_parent(struct intel_context *ce)
-{
-		if (intel_context_is_child(ce)) {
-		/*
-		 * The parent holds ref count to the child so it is always safe
-		 * for the parent to access the child, but the child has pointer
-		 * to the parent without a ref. To ensure this is safe the child
-		 * should only access the parent pointer while the parent is
-		 * pinned.
-		 */
-				GEM_BUG_ON(!intel_context_is_pinned(ce->parent));
-
-				return ce->parent;
-		} else {
-				return ce;
-		}
-}
-
-void intel_context_bind_parent_child(struct intel_context *parent,
-				     struct intel_context *child);
-
-#define for_each_child(parent, ce)\
-	list_for_each_entry(ce, &(parent)->guc_child_list, guc_child_link)
-#define for_each_child_safe(parent, ce, cn)\
-	list_for_each_entry_safe(ce, cn, &(parent)->guc_child_list, guc_child_link)
-
 /**
  * intel_context_lock_pinned - Stablises the 'pinned' status of the HW context
  * @ce - the context
diff --git a/drivers/gpu/drm/i915/gt/intel_context_types.h b/drivers/gpu/drm/i915/gt/intel_context_types.h
index 0fafc178cf2c..fd338a30617e 100644
--- a/drivers/gpu/drm/i915/gt/intel_context_types.h
+++ b/drivers/gpu/drm/i915/gt/intel_context_types.h
@@ -213,29 +213,6 @@ struct intel_context {
 	 */
 	struct list_head destroyed_link;
 
-	/** anonymous struct for parent / children only members */
-	struct {
-		union {
-			/**
-			 * @guc_child_list: parent's list of of children
-			 * contexts, no protection as immutable after context
-			 * creation
-			 */
-			struct list_head guc_child_list;
-			/**
-			 * @guc_child_link: child's link into parent's list of
-			 * children
-			 */
-			struct list_head guc_child_link;
-		};
-
-		/** @parent: pointer to parent if child */
-		struct intel_context *parent;
-
-		/** @guc_number_children: number of children if parent */
-		u8 guc_number_children;
-	};
-
 #ifdef CONFIG_DRM_I915_SELFTEST
 	/**
 	 * @drop_schedule_enable: Force drop of schedule enable G2H for selftest
-- 
2.25.1

