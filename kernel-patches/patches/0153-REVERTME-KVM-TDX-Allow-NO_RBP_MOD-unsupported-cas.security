From 11e0dc688c206b1cd759675a3f46a63d442ae9fb Mon Sep 17 00:00:00 2001
From: Isaku Yamahata <isaku.yamahata@intel.com>
Date: Thu, 10 Aug 2023 18:57:57 -0700
Subject: [PATCH 153/163] [REVERTME] KVM: TDX: Allow NO_RBP_MOD unsupported
 case

Enable TDX support even when NO_RPB_MOD isn't supported with the assumption
the __seamcall_saved_ret() has workaround patch. Once the new TDX module is
available/widely usable, drop this patch.

Signed-off-by: Isaku Yamahata <isaku.yamahata@intel.com>
---
 arch/x86/kvm/vmx/tdx.c | 19 ++++++++++++++-----
 1 file changed, 14 insertions(+), 5 deletions(-)

diff --git a/arch/x86/kvm/vmx/tdx.c b/arch/x86/kvm/vmx/tdx.c
index f768f9790c12..201b7f92230a 100644
--- a/arch/x86/kvm/vmx/tdx.c
+++ b/arch/x86/kvm/vmx/tdx.c
@@ -100,6 +100,7 @@ struct tdx_info {
 	u64 xfam_fixed0;
 	u64 xfam_fixed1;
 
+	u64 no_rbp_mod;
 	u8 nr_tdcs_pages;
 	u8 nr_tdvpx_pages;
 
@@ -2397,7 +2398,7 @@ static int setup_tdparams_eptp_controls(struct kvm_cpuid2 *cpuid,
 		td_params->eptp_controls |= VMX_EPTP_PWL_4;
 	}
 
-	td_params->exec_controls |= TDX_CONTROL_FLAG_NO_RBP_MOD;
+	td_params->exec_controls |= tdx_info->no_rbp_mod;
 
 	return 0;
 }
@@ -3272,11 +3273,19 @@ static int __init tdx_module_setup(void)
 	 * always work around it.  Query the feature.
 	 */
 	no_rbp_mod = tdx_info->features0 & MD_FIELD_ID_FEATURES0_NO_RBP_MOD;
-	if (!no_rbp_mod && !IS_ENABLED(CONFIG_FRAME_POINTER)) {
-		pr_err("Too old version of TDX module. Consider upgrade.\n");
-		ret = -EOPNOTSUPP;
-		goto error;
+	if (!no_rbp_mod) {
+		/*
+		 * WORKAROUND: __seamcall_saved_ret is modified so that it
+		 * unconditionally saves/restores RBP.  We don't have to check
+		 * CONFIG_FRAME_POINTER.
+		 */
+		if (0 && !IS_ENABLED(CONFIG_FRAME_POINTER)) {
+			pr_err("Too old version of TDX module. Consider upgrade.\n");
+			ret = -EOPNOTSUPP;
+			goto error;
+		}
 	}
+	tdx_info->no_rbp_mod = no_rbp_mod ? TDX_CONTROL_FLAG_NO_RBP_MOD : 0;
 
 	return 0;
 
-- 
2.25.1

