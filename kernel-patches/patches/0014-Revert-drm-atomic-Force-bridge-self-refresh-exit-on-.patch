From 6d60ee235a6f9ab9654ac2e4619ba4e692b88513 Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Tue, 19 Jul 2022 14:49:43 +0800
Subject: [PATCH 14/62] Revert "drm/atomic: Force bridge self-refresh-exit on
 CRTC switch"

This reverts commit fa0d3d71dc081377d7c56fa96f75401679834d7e.
---
 drivers/gpu/drm/drm_atomic_helper.c | 16 +++-------------
 1 file changed, 3 insertions(+), 13 deletions(-)

diff --git a/drivers/gpu/drm/drm_atomic_helper.c b/drivers/gpu/drm/drm_atomic_helper.c
index 7fc8e7000046..8a871e5c3e26 100644
--- a/drivers/gpu/drm/drm_atomic_helper.c
+++ b/drivers/gpu/drm/drm_atomic_helper.c
@@ -996,19 +996,9 @@ crtc_needs_disable(struct drm_crtc_state *old_state,
 		return drm_atomic_crtc_effectively_active(old_state);
 
 	/*
-	 * We need to disable bridge(s) and CRTC if we're transitioning out of
-	 * self-refresh and changing CRTCs at the same time, because the
-	 * bridge tracks self-refresh status via CRTC state.
-	 */
-	if (old_state->self_refresh_active &&
-	    old_state->crtc != new_state->crtc)
-		return true;
-
-	/*
-	 * We also need to run through the crtc_funcs->disable() function if
-	 * the CRTC is currently on, if it's transitioning to self refresh
-	 * mode, or if it's in self refresh mode and needs to be fully
-	 * disabled.
+	 * We need to run through the crtc_funcs->disable() function if the CRTC
+	 * is currently on, if it's transitioning to self refresh mode, or if
+	 * it's in self refresh mode and needs to be fully disabled.
 	 */
 	return old_state->active ||
 	       (old_state->self_refresh_active && !new_state->enable) ||
-- 
2.27.0

