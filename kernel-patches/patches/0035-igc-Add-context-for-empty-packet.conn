From 95ed74a1d790acfdf7bb1774998084c11d80d354 Mon Sep 17 00:00:00 2001
From: Aravindhan Gunasekaran <aravindhan.gunasekaran@intel.com>
Date: Fri, 22 Oct 2021 21:48:19 +0530
Subject: [PATCH 041/199] igc: Add context for empty packet

We see an issue with the dummy(empty) packet (mis)using
previous valid data packet context. Since context descriptors
need to be replaced in the internal HW maintained register
memory, we initialize a simple context for the dummy packet,
though we really don't need one.

Signed-off-by: Aravindhan Gunasekaran <aravindhan.gunasekaran@intel.com>
---
 drivers/net/ethernet/intel/igc/igc_main.c | 20 +++++++++++++++-----
 1 file changed, 15 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/intel/igc/igc_main.c b/drivers/net/ethernet/intel/igc/igc_main.c
index e3556bbce0224..ae91477ebbe8d 100644
--- a/drivers/net/ethernet/intel/igc/igc_main.c
+++ b/drivers/net/ethernet/intel/igc/igc_main.c
@@ -2845,8 +2845,8 @@ static void igc_update_tx_stats(struct igc_q_vector *q_vector,
 	q_vector->tx.total_packets += packets;
 }
 
-static void igc_launchtm_ctxtdesc(struct igc_ring *tx_ring,
-				  ktime_t txtime)
+static int igc_launchtm_ctxtdesc(struct igc_ring *tx_ring,
+				 ktime_t txtime)
 {
 	bool first_flag = false, insert_empty = false;
 	struct igc_adv_tx_context_desc *context_desc;
@@ -2854,6 +2854,7 @@ static void igc_launchtm_ctxtdesc(struct igc_ring *tx_ring,
 	u32 mss_l4len_idx = 0;
 	u32 type_tucmd = 0;
 	__le32 launch_time;
+	int desc_used = 0;
 
 	launch_time = igc_tx_launchtime(tx_ring, txtime, &first_flag, &insert_empty);
 
@@ -2868,8 +2869,15 @@ static void igc_launchtm_ctxtdesc(struct igc_ring *tx_ring,
 		data = skb_put(empty, IGC_EMPTY_FRAME_SIZE);
 		memset(data, 0, IGC_EMPTY_FRAME_SIZE);
 
+		igc_tx_ctxtdesc(tx_ring, 0, false, 0, 0, 0);
+
 		if (igc_init_tx_empty_descriptor(tx_ring, empty) < 0)
 			dev_kfree_skb_any(empty);
+
+		/* 1 desc. for Empty packet data
+		 * 1 desc. for Empty packet context
+		 */
+		desc_used += 2;
 	}
 
 done:
@@ -2877,6 +2885,7 @@ static void igc_launchtm_ctxtdesc(struct igc_ring *tx_ring,
 	context_desc = IGC_TX_CTXTDESC(tx_ring, i);
 
 	i++;
+	desc_used++;
 	tx_ring->next_to_use = (i < tx_ring->count) ? i : 0;
 
 	/* set bits to identify this as an advanced context descriptor */
@@ -2893,6 +2902,8 @@ static void igc_launchtm_ctxtdesc(struct igc_ring *tx_ring,
 	context_desc->type_tucmd_mlhl	= cpu_to_le32(type_tucmd);
 	context_desc->mss_l4len_idx	= cpu_to_le32(mss_l4len_idx);
 	context_desc->launch_time = launch_time;
+
+	return desc_used;
 }
 
 static void igc_xdp_xmit_zc(struct igc_ring *ring)
@@ -2912,7 +2923,7 @@ static void igc_xdp_xmit_zc(struct igc_ring *ring)
 
 	budget = igc_desc_unused(ring);
 
-	while (xsk_tx_peek_desc(pool, &xdp_desc) && budget > 2) {
+	while (xsk_tx_peek_desc(pool, &xdp_desc) && budget > 3) {
 		u32 cmd_type, olinfo_status;
 		struct igc_tx_buffer *bi;
 		ktime_t launch_tm = 0;
@@ -2922,8 +2933,7 @@ static void igc_xdp_xmit_zc(struct igc_ring *ring)
 
 		if (ring->launchtime_enable && xdp_desc.txtime > 0) {
 			launch_tm = ns_to_ktime(xdp_desc.txtime);
-			budget--;
-			igc_launchtm_ctxtdesc(ring, launch_tm);
+			budget -= igc_launchtm_ctxtdesc(ring, launch_tm);
 		}
 
 		/* re-read ntu as igc_launchtm_ctxtdesc() updates it */
-- 
2.25.1

