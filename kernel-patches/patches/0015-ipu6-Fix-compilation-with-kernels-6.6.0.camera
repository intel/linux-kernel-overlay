From cde0bb0492a5b709c8a33b46c5f153cb467366c0 Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Thu, 18 Jan 2024 11:10:29 +0800
Subject: [PATCH 15/23] ipu6: Fix compilation with kernels >= 6.6.0

Kernel 6.6 has made some significant changes to how v4l2-async
(sub)dev registration works. Adjust the code accordingly.

Signed-off-by: Hans de Goede <hdegoede@redhat.com>
Signed-off-by: Hao Yao <hao.yao@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu-isys.c           | 74 ++++++++++++--------
 drivers/media/pci/intel/ipu6/ipu6-isys-phy.c | 16 ++---
 include/media/ipu-isys.h                     |  6 +-
 3 files changed, 57 insertions(+), 39 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-isys.c b/drivers/media/pci/intel/ipu-isys.c
index 49f4a9f53b9d..2e307122cf9c 100644
--- a/drivers/media/pci/intel/ipu-isys.c
+++ b/drivers/media/pci/intel/ipu-isys.c
@@ -401,12 +401,12 @@ static int isys_register_subdevices(struct ipu_isys *isys)
 /* The .bound() notifier callback when a match is found */
 static int isys_notifier_bound(struct v4l2_async_notifier *notifier,
 			       struct v4l2_subdev *sd,
-			       struct v4l2_async_subdev *asd)
+			       struct v4l2_async_connection *asc)
 {
 	struct ipu_isys *isys = container_of(notifier,
 					struct ipu_isys, notifier);
-	struct sensor_async_subdev *s_asd = container_of(asd,
-					struct sensor_async_subdev, asd);
+	struct sensor_async_sd *s_asd = container_of(asc,
+					struct sensor_async_sd, asc);
 
 	dev_info(&isys->adev->dev, "bind %s nlanes is %d port is %d\n",
 		 sd->name, s_asd->csi2.nlanes, s_asd->csi2.port);
@@ -417,7 +417,7 @@ static int isys_notifier_bound(struct v4l2_async_notifier *notifier,
 
 static void isys_notifier_unbind(struct v4l2_async_notifier *notifier,
 				 struct v4l2_subdev *sd,
-				 struct v4l2_async_subdev *asd)
+				 struct v4l2_async_connection *asc)
 {
 	struct ipu_isys *isys = container_of(notifier,
 					struct ipu_isys, notifier);
@@ -441,43 +441,61 @@ static const struct v4l2_async_notifier_operations isys_async_ops = {
 	.complete = isys_notifier_complete,
 };
 
-static int isys_fwnode_parse(struct device *dev,
-			     struct v4l2_fwnode_endpoint *vep,
-			     struct v4l2_async_subdev *asd)
-{
-	struct sensor_async_subdev *s_asd =
-			container_of(asd, struct sensor_async_subdev, asd);
-
-	s_asd->csi2.port = vep->base.port;
-	s_asd->csi2.nlanes = vep->bus.mipi_csi2.num_data_lanes;
-
-	return 0;
-}
-
 static int isys_notifier_init(struct ipu_isys *isys)
 {
+	const struct ipu_isys_internal_csi2_pdata *csi2 =
+	    &isys->pdata->ipdata->csi2;
 	struct ipu_device *isp = isys->adev->isp;
-	size_t asd_struct_size = sizeof(struct sensor_async_subdev);
+	struct device *dev = &isp->pdev->dev;
+	unsigned int i;
 	int ret;
 
-	v4l2_async_nf_init(&isys->notifier);
-	ret = v4l2_async_nf_parse_fwnode_endpoints(&isp->pdev->dev,
-						   &isys->notifier,
-						   asd_struct_size,
-						   isys_fwnode_parse);
-	if (ret < 0) {
-		dev_err(&isys->adev->dev,
-			"v4l2 parse_fwnode_endpoints() failed: %d\n", ret);
+	v4l2_async_nf_init(&isys->notifier, &isys->v4l2_dev);
+
+	for (i = 0; i < csi2->nports; i++) {
+		struct v4l2_fwnode_endpoint vep = {
+			.bus_type = V4L2_MBUS_CSI2_DPHY
+		};
+		struct sensor_async_sd *s_asd;
+		struct fwnode_handle *ep;
+
+		ep = fwnode_graph_get_endpoint_by_id(dev_fwnode(dev), i, 0,
+						FWNODE_GRAPH_ENDPOINT_NEXT);
+		if (!ep)
+			continue;
+
+		ret = v4l2_fwnode_endpoint_parse(ep, &vep);
+		if (ret)
+			goto err_parse;
+
+		s_asd = v4l2_async_nf_add_fwnode_remote(&isys->notifier, ep,
+							struct
+							sensor_async_sd);
+		if (IS_ERR(s_asd)) {
+			ret = PTR_ERR(s_asd);
+			goto err_parse;
+		}
+
+		s_asd->csi2.port = vep.base.port;
+		s_asd->csi2.nlanes = vep.bus.mipi_csi2.num_data_lanes;
+
+		fwnode_handle_put(ep);
+
+		continue;
+
+err_parse:
+		fwnode_handle_put(ep);
 		return ret;
 	}
-	if (list_empty(&isys->notifier.asd_list)) {
+
+	if (list_empty(&isys->notifier.waiting_list)) {
 		/* isys probe could continue with async subdevs missing */
 		dev_warn(&isys->adev->dev, "no subdev found in graph\n");
 		return 0;
 	}
 
 	isys->notifier.ops = &isys_async_ops;
-	ret = v4l2_async_nf_register(&isys->v4l2_dev, &isys->notifier);
+	ret = v4l2_async_nf_register(&isys->notifier);
 	if (ret) {
 		dev_err(&isys->adev->dev,
 			"failed to register async notifier : %d\n", ret);
diff --git a/drivers/media/pci/intel/ipu6/ipu6-isys-phy.c b/drivers/media/pci/intel/ipu6/ipu6-isys-phy.c
index 6ba2c72201fe..0b8f11b043ac 100644
--- a/drivers/media/pci/intel/ipu6/ipu6-isys-phy.c
+++ b/drivers/media/pci/intel/ipu6/ipu6-isys-phy.c
@@ -525,12 +525,12 @@ int ipu6_isys_phy_common_init(struct ipu_isys *isys)
 	struct ipu_bus_device *adev = to_ipu_bus_device(&isys->adev->dev);
 	struct ipu_device *isp = adev->isp;
 	void __iomem *isp_base = isp->base;
-	struct v4l2_async_subdev *asd;
-	struct sensor_async_subdev *s_asd;
+	struct v4l2_async_connection *asc;
+	struct sensor_async_sd *s_asd;
 	unsigned int i;
 
-	list_for_each_entry(asd, &isys->notifier.asd_list, asd_list) {
-		s_asd = container_of(asd, struct sensor_async_subdev, asd);
+	list_for_each_entry(asc, &isys->notifier.done_list, asc_entry) {
+		s_asd = container_of(asc, struct sensor_async_sd, asc);
 		phy_id = s_asd->csi2.port / 4;
 		phy_base = isp_base + IPU6_ISYS_PHY_BASE(phy_id);
 
@@ -633,13 +633,13 @@ int ipu6_isys_phy_config(struct ipu_isys *isys)
 	struct ipu_device *isp = adev->isp;
 	void __iomem *isp_base = isp->base;
 	const struct phy_reg **phy_config_regs;
-	struct v4l2_async_subdev *asd;
-	struct sensor_async_subdev *s_asd;
+	struct v4l2_async_connection *asc;
+	struct sensor_async_sd *s_asd;
 	struct ipu_isys_csi2_config cfg;
 	int i;
 
-	list_for_each_entry(asd, &isys->notifier.asd_list, asd_list) {
-		s_asd = container_of(asd, struct sensor_async_subdev, asd);
+	list_for_each_entry(asc, &isys->notifier.done_list, asc_entry) {
+		s_asd = container_of(asc, struct sensor_async_sd, asc);
 		cfg.port = s_asd->csi2.port;
 		cfg.nlanes = s_asd->csi2.nlanes;
 		phy_port = ipu6_isys_driver_port_to_phy_port(&cfg);
diff --git a/include/media/ipu-isys.h b/include/media/ipu-isys.h
index 5fe4a872737d..500107b2cab8 100644
--- a/include/media/ipu-isys.h
+++ b/include/media/ipu-isys.h
@@ -6,6 +6,7 @@
 
 #include <linux/i2c.h>
 #include <linux/clkdev.h>
+#include <linux/version.h>
 #include <media/v4l2-async.h>
 
 #define IPU_ISYS_MAX_CSI2_LANES		4
@@ -88,9 +89,8 @@ struct ipu_isys_subdev_pdata {
 	struct ipu_isys_clk_mapping *clk_map;
 };
 
-struct sensor_async_subdev {
-	struct v4l2_async_subdev asd;
+struct sensor_async_sd {
+	struct v4l2_async_connection asc;
 	struct ipu_isys_csi2_config csi2;
 };
-
 #endif /* MEDIA_IPU_H */
-- 
2.25.1

