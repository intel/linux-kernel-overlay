From 51ea5bed3e116cd32f3ec22cc770457a35d4e80e Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Thu, 18 Nov 2021 16:56:38 +0800
Subject: [PATCH 06/64] Revert "drm/edid: In connector_bad_edid() cap
 num_of_ext by num_blocks read"

This reverts commit a7b45024f66f9ec769e8dbb1a51ae83cd05929c7.
---
 drivers/gpu/drm/drm_edid.c | 15 +++------------
 1 file changed, 3 insertions(+), 12 deletions(-)

diff --git a/drivers/gpu/drm/drm_edid.c b/drivers/gpu/drm/drm_edid.c
index add317bd8d55..b7ddf504e024 100644
--- a/drivers/gpu/drm/drm_edid.c
+++ b/drivers/gpu/drm/drm_edid.c
@@ -1835,20 +1835,11 @@ static void connector_bad_edid(struct drm_connector *connector,
 			       u8 *edid, int num_blocks)
 {
 	int i;
-	u8 last_block;
-
-	/*
-	 * 0x7e in the EDID is the number of extension blocks. The EDID
-	 * is 1 (base block) + num_ext_blocks big. That means we can think
-	 * of 0x7e in the EDID of the _index_ of the last block in the
-	 * combined chunk of memory.
-	 */
-	last_block = edid[0x7e];
+	u8 num_of_ext = edid[0x7e];
 
 	/* Calculate real checksum for the last edid extension block data */
-	if (last_block < num_blocks)
-		connector->real_edid_checksum =
-			drm_edid_block_checksum(edid + last_block * EDID_LENGTH);
+	connector->real_edid_checksum =
+		drm_edid_block_checksum(edid + num_of_ext * EDID_LENGTH);
 
 	if (connector->bad_edid_counter++ && !drm_debug_enabled(DRM_UT_KMS))
 		return;
-- 
2.27.0

