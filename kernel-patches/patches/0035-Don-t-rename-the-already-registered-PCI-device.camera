From 895ceaa683e9c568a63335621ad4a9dddc618be6 Mon Sep 17 00:00:00 2001
From: zouxiaoh <xiaohong.zou@intel.com>
Date: Wed, 22 Mar 2023 15:44:53 +0800
Subject: [PATCH 35/60] Don't rename the already registered PCI-device

devices must not be renamed after they have already been
added to the device hierarchy.

dev_set_name() MUST only be called before dev_add()
and the pci_dev passed to ipu_pci_probe() has been
added long before ipu_pci_probe() runs, so it must
not rename it.

Renaming it is confusing udevd which now all of a sudden sees
a device it already knows about change name.

This is causing udev rules to not work properly with
the ipu6-driver. Drop the clearly wrong dev_set_name() call.

From github.com/intel/ipu6-drivers/pull/87

Signed-off-by: Hans de Goede <hdegoede@redhat.com>
Signed-off-by: Hao Yao <hao.yao@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
---
 drivers/media/pci/intel/ipu.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/drivers/media/pci/intel/ipu.c b/drivers/media/pci/intel/ipu.c
index 29d6bd832500..7c4209a1a03c 100644
--- a/drivers/media/pci/intel/ipu.c
+++ b/drivers/media/pci/intel/ipu.c
@@ -281,7 +281,7 @@ static int ipu_init_debugfs(struct ipu_device *isp)
 	struct dentry *file;
 	struct dentry *dir;
 
-	dir = debugfs_create_dir(pci_name(isp->pdev), NULL);
+	dir = debugfs_create_dir(IPU_NAME, NULL);
 	if (!dir)
 		return -ENOMEM;
 
@@ -473,7 +473,6 @@ static int ipu_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	if (!isp)
 		return -ENOMEM;
 
-	dev_set_name(&pdev->dev, "intel-ipu");
 	isp->pdev = pdev;
 	INIT_LIST_HEAD(&isp->devices);
 
-- 
2.25.1

