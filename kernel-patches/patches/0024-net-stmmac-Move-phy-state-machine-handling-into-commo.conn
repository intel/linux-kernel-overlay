From 5311d94ab5d60b9310a62aca4cbf7199346c9220 Mon Sep 17 00:00:00 2001
From: Noor Azura Ahmad Tarmizi <noor.azura.ahmad.tarmizi@intel.com>
Date: Thu, 13 Jan 2022 13:16:25 +0800
Subject: [PATCH 24/54] net: stmmac: Move phy state machine handling into
 common suspend/resume func

When WOL is enabled, phy state machine will still running even
Ethernet driver is suspended. This will hit phy_error kernel
dump because mdio bus is not available when IP is put into D3.

Therefore, this commit place the phy state machine handling into
common suspend/resume function as the handling is also needed for
non network proxy GbE port if wakeup machanism is enabled.

Signed-off-by: Song, Yoong Siang <yoong.siang.song@intel.com>
Signed-off-by: Noor Azura Ahmad Tarmizi <noor.azura.ahmad.tarmizi@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c | 6 ++++++
 drivers/net/phy/phy.c                             | 1 +
 2 files changed, 7 insertions(+)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 0a5d3e1e7da6..c6684d872958 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -7504,6 +7504,9 @@ int stmmac_suspend_common(struct stmmac_priv *priv, struct net_device *ndev)
 {
 	u32 chan;
 
+	if (ndev->phydev && device_may_wakeup(priv->device))
+		phy_stop_machine(ndev->phydev);
+
 	mutex_lock(&priv->lock);
 
 	netif_device_detach(ndev);
@@ -7724,6 +7727,9 @@ int stmmac_resume_common(struct stmmac_priv *priv, struct net_device *ndev)
 	mutex_unlock(&priv->lock);
 	rtnl_unlock();
 
+	if (ndev->phydev && device_may_wakeup(priv->device))
+		phy_start_machine(ndev->phydev);
+
 	return 0;
 }
 EXPORT_SYMBOL_GPL(stmmac_resume_common);
diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
index 2fc851082e7b..208e4ac6748c 100644
--- a/drivers/net/phy/phy.c
+++ b/drivers/net/phy/phy.c
@@ -928,6 +928,7 @@ void phy_stop_machine(struct phy_device *phydev)
 		phydev->state = PHY_UP;
 	mutex_unlock(&phydev->lock);
 }
+EXPORT_SYMBOL_GPL(phy_stop_machine);
 
 /**
  * phy_error - enter HALTED state for this PHY device
-- 
2.25.1

