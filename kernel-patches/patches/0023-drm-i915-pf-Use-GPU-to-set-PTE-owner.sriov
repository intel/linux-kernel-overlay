From 4df7c17f4108a92785698c2fff0683eecc121942 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Piotr=20Pi=C3=B3rkowski?= <piotr.piorkowski@intel.com>
Date: Fri, 17 Nov 2023 14:54:45 +0100
Subject: [PATCH 23/30] drm/i915/pf: Use GPU to set PTE owner
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

To fix CCS/RCS gpu hang issue

Signed-off-by: Piotr Pi√≥rkowski <piotr.piorkowski@intel.com>
Signed-off-by: Zawawi, Muhammad Zul Husni <muhammad.zul.husni.zawawi@intel.com>
---
 drivers/gpu/drm/i915/gt/intel_ggtt.c | 43 +++++++++++++++++++++++++---
 1 file changed, 39 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/intel_ggtt.c b/drivers/gpu/drm/i915/gt/intel_ggtt.c
index a67d3c4de41f..20c08840b974 100644
--- a/drivers/gpu/drm/i915/gt/intel_ggtt.c
+++ b/drivers/gpu/drm/i915/gt/intel_ggtt.c
@@ -1880,6 +1880,7 @@ void i915_ggtt_set_space_owner(struct i915_ggtt *ggtt, u16 vfid,
 	const gen8_pte_t pte = i915_ggtt_prepare_vf_pte(vfid);
 	u64 base = node->start;
 	u64 size = node->size;
+	int ret = 0;
 
 	GEM_BUG_ON(!IS_SRIOV_PF(ggtt->vm.i915));
 	GEM_BUG_ON(base % PAGE_SIZE);
@@ -1894,10 +1895,44 @@ void i915_ggtt_set_space_owner(struct i915_ggtt *ggtt, u16 vfid,
 	    gen8_ggtt_bind_ptes(ggtt, base >> PAGE_SHIFT, NULL, size / PAGE_SIZE, pte))
 		goto invalidate;
 
-	gtt_entries += base >> PAGE_SHIFT;
-	while (size) {
-		gen8_set_pte(gtt_entries++, pte);
-		size -= PAGE_SIZE;
+	if (intel_gt_is_bind_context_ready(ggtt->vm.gt)) {
+		struct sg_table *st;
+		struct scatterlist *sg;
+		u64 n_ptes = (size / PAGE_SIZE);
+
+		st = kmalloc(sizeof(*st), GFP_KERNEL);
+		if (!st)
+			WARN_ON(-ENOMEM);
+
+		if (sg_alloc_table(st, n_ptes, GFP_KERNEL)) {
+			kfree(st);
+			WARN_ON(-ENOMEM);
+		}
+
+		sg = st->sgl;
+		st->nents = 0;
+
+		while (size) {
+			st->nents++;
+			sg_set_page(sg, NULL, I915_GTT_PAGE_SIZE, 0);
+			sg_dma_address(sg) = 0;
+			sg_dma_len(sg) = I915_GTT_PAGE_SIZE;
+			sg = sg_next(sg);
+			size -= PAGE_SIZE;
+		}
+
+		ret = gen8_ggtt_bind_ptes(ggtt, base >> PAGE_SHIFT, st, n_ptes, pte);
+
+		sg_free_table(st);
+		kfree(st);
+		WARN_ON(ret == false);
+	} else {
+
+		gtt_entries += base >> PAGE_SHIFT;
+		while (size) {
+			gen8_set_pte(gtt_entries++, pte);
+			size -= PAGE_SIZE;
+		}
 	}
 
 invalidate:
-- 
2.25.1

