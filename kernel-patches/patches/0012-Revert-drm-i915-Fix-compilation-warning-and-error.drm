From c6e81eec7827d873c9bbec586deb31e336f881fb Mon Sep 17 00:00:00 2001
From: Junxiao Chang <junxiao.chang@intel.com>
Date: Wed, 24 Nov 2021 13:16:34 +0800
Subject: [PATCH 012/888] Revert "drm/i915: Fix compilation warning and error"

This reverts commit c0f460dfc609af8f0025fa31023ac9f98e0f5b3c.
---
 drivers/gpu/drm/i915/gt/iov/intel_iov_query.c               | 2 +-
 drivers/gpu/drm/i915/gt/iov/intel_iov_service.c             | 2 +-
 .../gpu/drm/i915/gt/iov/selftests/iov_live_selftest_ggtt.c  | 2 +-
 drivers/gpu/drm/i915/gt/uc/intel_guc.c                      | 4 ++--
 drivers/gpu/drm/i915/gt/uc/intel_guc_ads.c                  | 3 +++
 drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c                   | 1 +
 drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c           | 6 +++---
 drivers/gpu/drm/i915/gt/uc/intel_uc_fw.h                    | 2 +-
 drivers/gpu/drm/i915/intel_pm.c                             | 2 +-
 9 files changed, 14 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/i915/gt/iov/intel_iov_query.c b/drivers/gpu/drm/i915/gt/iov/intel_iov_query.c
index acbe4ad103e1..915ed5ad9204 100644
--- a/drivers/gpu/drm/i915/gt/iov/intel_iov_query.c
+++ b/drivers/gpu/drm/i915/gt/iov/intel_iov_query.c
@@ -394,7 +394,7 @@ static const i915_reg_t tgl_early_regs[] = {
 	RPM_CONFIG0,			/* _MMIO(0x0D00) */
 	GEN11_EU_DISABLE,		/* _MMIO(0x9134) */
 	GEN11_GT_SLICE_ENABLE,		/* _MMIO(0x9138) */
-	GEN12_GT_DSS_ENABLE,	/* _MMIO(0x913C) */
+	GEN12_GT_GEOMETRY_DSS_ENABLE,	/* _MMIO(0x913C) */
 	GEN11_GT_VEBOX_VDBOX_DISABLE,	/* _MMIO(0x9140) */
 	CTC_MODE,			/* _MMIO(0xA26C) */
 };
diff --git a/drivers/gpu/drm/i915/gt/iov/intel_iov_service.c b/drivers/gpu/drm/i915/gt/iov/intel_iov_service.c
index 4b528b511958..98ee79885e77 100644
--- a/drivers/gpu/drm/i915/gt/iov/intel_iov_service.c
+++ b/drivers/gpu/drm/i915/gt/iov/intel_iov_service.c
@@ -30,7 +30,7 @@ static const i915_reg_t tgl_runtime_regs[] = {
 	RPM_CONFIG0,			/* _MMIO(0x0D00) */
 	GEN11_EU_DISABLE,		/* _MMIO(0x9134) */
 	GEN11_GT_SLICE_ENABLE,		/* _MMIO(0x9138) */
-	GEN12_GT_DSS_ENABLE,	/* _MMIO(0x913C) */
+	GEN12_GT_GEOMETRY_DSS_ENABLE,	/* _MMIO(0x913C) */
 	GEN11_GT_VEBOX_VDBOX_DISABLE,	/* _MMIO(0x9140) */
 	CTC_MODE,			/* _MMIO(0xA26C) */
 	GEN9_TIMESTAMP_OVERRIDE,	/* _MMIO(0x44074) */
diff --git a/drivers/gpu/drm/i915/gt/iov/selftests/iov_live_selftest_ggtt.c b/drivers/gpu/drm/i915/gt/iov/selftests/iov_live_selftest_ggtt.c
index fd7679536569..9ac8a3721e2f 100644
--- a/drivers/gpu/drm/i915/gt/iov/selftests/iov_live_selftest_ggtt.c
+++ b/drivers/gpu/drm/i915/gt/iov/selftests/iov_live_selftest_ggtt.c
@@ -524,7 +524,7 @@ test_other_ggtt_region(struct intel_iov *iov, gen8_pte_t __iomem *gsm,
 
 static void *map_gsm(struct intel_gt *gt, u64 ggtt_size)
 {
-	struct pci_dev *pdev = to_pci_dev(gt->i915->drm.dev);
+	struct pci_dev *pdev = gt->i915->drm.pdev;
 	struct device *dev = gt->i915->drm.dev;
 	u64 gsm_ggtt_size = (ggtt_size / I915_GTT_PAGE_SIZE_4K) *
 			    sizeof(gen8_pte_t);
diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc.c b/drivers/gpu/drm/i915/gt/uc/intel_guc.c
index 56a0b808555a..9d231f8e7367 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc.c
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc.c
@@ -467,8 +467,8 @@ static int __vf_guc_init(struct intel_guc *guc)
 	 * __guc_slpc_selected since the VF probe is not complete
 	 * at that point.
 	 */
-	guc->slpc.supported = false;
-	guc->slpc.selected = false;
+	guc->slpc_supported = false;
+	guc->slpc_selected = false;
 
 	/* Disable GUCRC for VF */
 	guc->rc_supported = false;
diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc_ads.c b/drivers/gpu/drm/i915/gt/uc/intel_guc_ads.c
index 823aed4eeeec..04237f281a18 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc_ads.c
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc_ads.c
@@ -474,6 +474,9 @@ static void guc_init_golden_context(struct intel_guc *guc)
 	u8 engine_class, guc_class;
 	u8 *ptr;
 
+	/* Skip execlist and PPGTT registers + HWSP */
+	const u32 lr_hw_context_size = 80 * sizeof(u32);
+
 	if (!intel_uc_uses_guc_submission(&gt->uc))
 		return;
 
diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c b/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c
index 997e67ce1e45..3d89fddc76d9 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc_ct.c
@@ -1071,6 +1071,7 @@ static int ct_handle_event(struct intel_guc_ct *ct, struct ct_incoming_msg *requ
 	switch (action) {
 	case INTEL_GUC_ACTION_SCHED_CONTEXT_MODE_DONE:
 	case INTEL_GUC_ACTION_DEREGISTER_CONTEXT_DONE:
+		g2h_release_space(ct, request->size);
 	case INTEL_GUC_ACTION_TLB_INVALIDATION_DONE:
 		atomic_add(request->size, &ct->ctbs.recv.space);
 	}
diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c b/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
index 23b7a859195d..70d96900de31 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc_submission.c
@@ -1415,11 +1415,11 @@ int intel_guc_submission_limit_ids(struct intel_guc *guc, u32 limit)
 	if (limit > GUC_MAX_LRC_DESCRIPTORS)
 		return -E2BIG;
 
-	if (!ida_is_empty(&guc->submission_state.guc_ids))
+	if (!ida_is_empty(&guc->guc_ids))
 		return -ETXTBSY;
 
-	guc->submission_state.max_guc_ids = limit;
-	guc->submission_state.num_guc_ids = min(limit, guc->submission_state.num_guc_ids);
+	guc->max_guc_ids = limit;
+	guc->num_guc_ids = min(limit, guc->num_guc_ids);
 	return 0;
 }
 
diff --git a/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.h b/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.h
index dbf98a8c3636..c9383ac79088 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.h
+++ b/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.h
@@ -177,7 +177,7 @@ static inline const char *intel_uc_fw_type_repr(enum intel_uc_fw_type type)
 }
 
 static inline enum intel_uc_fw_status
-__intel_uc_fw_status(const struct intel_uc_fw *uc_fw)
+__intel_uc_fw_status(struct intel_uc_fw *uc_fw)
 {
 	/* shouldn't call this before checking hw/blob availability */
 	GEM_BUG_ON(uc_fw->status == INTEL_UC_FIRMWARE_UNINITIALIZED);
diff --git a/drivers/gpu/drm/i915/intel_pm.c b/drivers/gpu/drm/i915/intel_pm.c
index 51b8bb3796a3..889e2b8294ad 100644
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@ -7990,7 +7990,7 @@ void intel_init_pm(struct drm_i915_private *dev_priv)
 {
 	if (IS_SRIOV_VF(dev_priv)) {
 		/* XXX */
-		dev_priv->display.compute_global_watermarks = skl_compute_wm;
+		dev_priv->wm_disp = &skl_wm_funcs;
 		return;
 	}
 
-- 
2.25.1

