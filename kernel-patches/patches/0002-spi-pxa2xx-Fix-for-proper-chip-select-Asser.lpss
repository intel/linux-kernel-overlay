From d54468e3bedff85f4f0f8c09a4c1ca3f3fe858d8 Mon Sep 17 00:00:00 2001
From: "dillibabu, karthikx" <karthikx.dillibabu@intel.com>
Date: Thu, 28 Apr 2022 17:53:36 +0530
Subject: [PATCH 2/3] spi: pxa2xx: Fix for proper chip select Assertion of
 pxa2xx controller

    Asserting chip select of spi-pxa2xx controller only after it has
    been configured and enabled. The spi-pxa2xx needs this change
    for stable transactions, especially for spi mode3.

Signed-off-by: dillibabu, karthikx <karthikx.dillibabu@intel.com>
---
 drivers/spi/spi-pxa2xx.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/spi/spi-pxa2xx.c b/drivers/spi/spi-pxa2xx.c
index 1573f6d8eb48..b4bc39125d15 100644
--- a/drivers/spi/spi-pxa2xx.c
+++ b/drivers/spi/spi-pxa2xx.c
@@ -1104,6 +1104,13 @@ static int pxa2xx_spi_transfer_one(struct spi_controller *controller,
 	if (!pxa25x_ssp_comp(drv_data))
 		pxa2xx_spi_write(drv_data, SSTO, chip->timeout);
 
+	/*
+	 * This SPI controller needs the chip select asserted only after the SPI
+	 * controller is configured and enabled for stable functionality.
+	 * Hence, deasserting the chip select here.
+	 */
+	spi_set_cs(spi, false, false);
+
 	/* First set CR1 without interrupt and service enables */
 	pxa2xx_spi_update(drv_data, SSCR1, change_mask, cr1);
 
@@ -1113,6 +1120,9 @@ static int pxa2xx_spi_transfer_one(struct spi_controller *controller,
 	/* Restart the SSP */
 	pxa_ssp_enable(drv_data->ssp);
 
+	/* Asserting the chip select after the spi is configured and enabled */
+	spi_set_cs(spi, true, false);
+
 	if (is_mmp2_ssp(drv_data)) {
 		u8 tx_level = read_SSSR_bits(drv_data, SSSR_TFL_MASK) >> 8;
 
-- 
2.17.1

