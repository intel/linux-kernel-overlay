From 9abcb5ca489f456d3caf561364387d5c40df8dc0 Mon Sep 17 00:00:00 2001
From: Uma Shankar <uma.shankar@intel.com>
Date: Tue, 18 Apr 2023 18:38:26 +0530
Subject: [PATCH 090/184] drm/i915/xelpd: Adjust gamma lut size for legacy

Gamma lut size is not same and it depends on the gamma
mode chosen. 10 bit logarithimic has 1024 while logarithmic
gamma has 513 lut samples. Till we get the new UAPI, added
a WA so that both can co-exist.

ToDo: Update this change once the new UAPI lands in upstream.

Signed-off-by: Uma Shankar <uma.shankar@intel.com>
---
 drivers/gpu/drm/i915/display/intel_color.c | 43 ++++++++++++++++++++--
 1 file changed, 40 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/display/intel_color.c b/drivers/gpu/drm/i915/display/intel_color.c
index c0cfc8db3588..31cab5d93c7f 100644
--- a/drivers/gpu/drm/i915/display/intel_color.c
+++ b/drivers/gpu/drm/i915/display/intel_color.c
@@ -1707,7 +1707,7 @@ xelpd_program_logarithmic_gamma_lut(const struct intel_crtc_state *crtc_state)
 	struct intel_crtc *crtc = to_intel_crtc(crtc_state->uapi.crtc);
 	struct drm_i915_private *i915 = to_i915(crtc->base.dev);
 	const struct drm_property_blob *blob = crtc_state->hw.gamma_lut;
-	const u32 lut_size = DISPLAY_INFO(i915)->color.gamma_lut_size;
+	u32 lut_size;
 	const struct drm_color_lut *lut;
 	enum pipe pipe = crtc->pipe;
 	u32 i;
@@ -1715,6 +1715,17 @@ xelpd_program_logarithmic_gamma_lut(const struct intel_crtc_state *crtc_state)
 	if (!blob || !blob->data)
 		return;
 
+	/*
+	 * In case of advance gamma i.e logarithmic, lut size
+	 * is 513. Till the new UAPI is merged, we need to have
+	 * this s/w WA to allow legacy to co-exist with this.
+	 * FixMe: Update once the new UAPI is in place
+	 */
+	if (crtc_state->uapi.advance_gamma_mode_active)
+		lut_size = drm_color_lut_size(blob);
+	else
+		lut_size = DISPLAY_INFO(i915)->color.gamma_lut_size;
+
 	lut = blob->data;
 	ilk_lut_write(crtc_state, PREC_PAL_INDEX(pipe),
 			    PAL_PREC_AUTO_INCREMENT);
@@ -2052,11 +2063,23 @@ static int intel_gamma_lut_size(const struct intel_crtc_state *crtc_state)
 {
 	struct drm_i915_private *i915 = to_i915(crtc_state->uapi.crtc->dev);
 	const struct drm_property_blob *gamma_lut = crtc_state->hw.gamma_lut;
+	u32 gamma_length;
 
 	if (lut_is_legacy(gamma_lut))
 		return LEGACY_LUT_LENGTH;
 
-	return DISPLAY_INFO(i915)->color.gamma_lut_size;
+	/*
+	 * In case of advance gamma i.e logarithmic, lut size
+	 * is 513. Till the new UAPI is merged, we need to have
+	 * this s/w WA to allow legacy to co-exist with this.
+	 * FixMe: Update once the new UAPI is in place
+	 */
+	if (gamma_lut && crtc_state->uapi.advance_gamma_mode_active)
+		gamma_length = drm_color_lut_size(gamma_lut);
+	else
+		gamma_length = DISPLAY_INFO(i915)->color.gamma_lut_size;
+
+	return gamma_length;
 }
 
 static u32 intel_degamma_lut_size(const struct intel_crtc_state *crtc_state)
@@ -3653,12 +3676,26 @@ static struct drm_property_blob *
 xelpd_read_lut_logarithmic(struct intel_crtc *crtc)
 {
 	struct drm_i915_private *i915 = to_i915(crtc->base.dev);
-	int i, lut_size = DISPLAY_INFO(i915)->color.gamma_lut_size;
+	struct intel_crtc_state *crtc_state =
+		to_intel_crtc_state(crtc->base.state);
+	const struct drm_property_blob *gamma_lut = crtc_state->hw.gamma_lut;
+	int i, lut_size;
 	enum pipe pipe = crtc->pipe;
 	struct drm_property_blob *blob;
 	struct drm_color_lut *lut;
 	u32 gamma_max_val = 0xFFFF;
 
+	/*
+	 * In case of advance gamma i.e logarithmic, lut size
+	 * is 513. Till the new UAPI is merged, we need to have
+	 * this s/w WA to allow legacy to co-exist with this.
+	 * FixMe: Update once the new UAPI is in place
+	 * */
+	if (crtc_state->uapi.advance_gamma_mode_active)
+		lut_size = drm_color_lut_size(gamma_lut);
+	else
+		lut_size = DISPLAY_INFO(i915)->color.gamma_lut_size;
+
 	blob = drm_property_create_blob(&i915->drm,
 					sizeof(struct drm_color_lut) * lut_size,
 					NULL);
-- 
2.25.1

