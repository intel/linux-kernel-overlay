From fd0e5854eef5da76ff907e46f7e5e2444dbb8577 Mon Sep 17 00:00:00 2001
From: Tan Tee Min <tee.min.tan@linux.intel.com>
Date: Thu, 16 Jun 2022 21:37:34 +0800
Subject: [PATCH 3/5] net: stmmac: fix wait_event_timeout() always return false
 issue

There is an issue in ___wait_event() when we're calling to
wait_event_timeout(), as the state is always TASK_UNINTERRUPTIBLE.

Thus we are changing it to wait_event_interruptible_timeout() to
avoid the always false issue.

Signed-off-by: Tan Tee Min <tee.min.tan@linux.intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c b/drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
index 958a627a0a64..7b66fedef035 100644
--- a/drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
+++ b/drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
@@ -373,8 +373,9 @@ static int intel_crosststamp(ktime_t *device,
 	writel(gpio_value, ioaddr + GMAC_GPIO_STATUS);
 
 	/* Time sync done Indication - Interrupt method */
-	if (!wait_event_timeout(priv->tstamp_busy_wait,
-				stmmac_cross_ts_isr(priv), HZ / 100))
+	if (!wait_event_interruptible_timeout(priv->tstamp_busy_wait,
+					      stmmac_cross_ts_isr(priv),
+					      HZ / 100))
 		return -ETIMEDOUT;
 
 	num_snapshot = (readl(ioaddr + GMAC_TIMESTAMP_STATUS) &
-- 
2.17.1

