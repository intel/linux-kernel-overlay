From e8e402832eef5c7cfb438c8b586f4d51d0dc1347 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Piotr=20Pi=C3=B3rkowski?= <piotr.piorkowski@intel.com>
Date: Tue, 16 Feb 2021 18:37:20 +0100
Subject: [PATCH 66/72] drm/i915: Verify dma_addr in gen8_ggtt_pte_encode
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Until now, the gen8_ggtt_pte_encode function, responsible for the preparation
of GGTT PTE, has not verified in any way whether the address given as the
parameter is correct.
By adding a GGTT address mask, we can easily verify that dma_addr will fit
in the PTE field.
While around, cleanup a place where we hold all GEN12 GGTT PTE masks,
and the addition of the PTE description.

Bspec: 45015

Signed-off-by: Piotr Pi√≥rkowski <piotr.piorkowski@intel.com>
Cc: Matthew Auld <matthew.auld@intel.com>
Cc: Michal Wajdeczko <michal.wajdeczko@intel.com>
Cc: Michal Winiarski <michal.winiarski@intel.com>
Reviewed-by: Matthew Auld <matthew.auld@intel.com>
Signed-off-by: Zawawi, Muhammad Zul Husni <muhammad.zul.husni.zawawi@intel.com>
---
 drivers/gpu/drm/i915/gt/intel_ggtt.c | 2 ++
 drivers/gpu/drm/i915/gt/intel_gtt.h  | 1 +
 2 files changed, 3 insertions(+)

diff --git a/drivers/gpu/drm/i915/gt/intel_ggtt.c b/drivers/gpu/drm/i915/gt/intel_ggtt.c
index e4fda6fe2db4..062d40b4f61d 100644
--- a/drivers/gpu/drm/i915/gt/intel_ggtt.c
+++ b/drivers/gpu/drm/i915/gt/intel_ggtt.c
@@ -208,6 +208,8 @@ u64 gen8_ggtt_pte_encode(dma_addr_t addr,
 {
 	gen8_pte_t pte = addr | _PAGE_PRESENT;
 
+	GEM_BUG_ON(addr & ~GEN12_GGTT_PTE_ADDR_MASK);
+
 	if (flags & PTE_LM)
 		pte |= GEN12_GGTT_PTE_LM;
 
diff --git a/drivers/gpu/drm/i915/gt/intel_gtt.h b/drivers/gpu/drm/i915/gt/intel_gtt.h
index 9b78cdb208ca..a11283f1a262 100644
--- a/drivers/gpu/drm/i915/gt/intel_gtt.h
+++ b/drivers/gpu/drm/i915/gt/intel_gtt.h
@@ -99,6 +99,7 @@ typedef u64 gen8_pte_t;
 
 #define GEN12_GGTT_PTE_LM	BIT_ULL(1)
 #define TGL_GGTT_PTE_VFID_MASK		GENMASK_ULL(4, 2)
+#define GEN12_GGTT_PTE_ADDR_MASK	GENMASK_ULL(45, 12)
 
 /*
  * Cacheability Control is a 4-bit value. The low three bits are stored in bits
-- 
2.27.0

