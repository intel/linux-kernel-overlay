From 79ab713b1adb132e618df09df24224777f3b9543 Mon Sep 17 00:00:00 2001
From: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
Date: Tue, 21 Jul 2020 21:49:27 -0700
Subject: [PATCH 49/78] x86/tdx: Add device filter support for x86 TDX guest
 platform

Register PCI bus specific device filter for TDX guest platforms.
After successful registration, device filter framework will only
allow devices based on registered filter allow list.

Also enable PR_GUEST_DEVICE_FILTER protected guest feature for the
TDX guest.

Reviewed-by: Andi Kleen <ak@linux.intel.com>
Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
---
 arch/x86/include/asm/tdx.h   |  1 +
 arch/x86/kernel/Makefile     |  2 +-
 arch/x86/kernel/tdx-filter.c | 46 ++++++++++++++++++++++++++++++++++++
 arch/x86/kernel/tdx.c        |  3 +++
 4 files changed, 51 insertions(+), 1 deletion(-)
 create mode 100644 arch/x86/kernel/tdx-filter.c

diff --git a/arch/x86/include/asm/tdx.h b/arch/x86/include/asm/tdx.h
index eb0f36fd1598..1433a48d1c1d 100644
--- a/arch/x86/include/asm/tdx.h
+++ b/arch/x86/include/asm/tdx.h
@@ -66,6 +66,7 @@ enum tdx_map_type {
 
 bool tdg_debug_enabled(void);
 void __init tdx_early_init(void);
+void __init tdg_filter_init(void);
 
 bool tdx_protected_guest_has(unsigned long flag);
 
diff --git a/arch/x86/kernel/Makefile b/arch/x86/kernel/Makefile
index 2d365fc6f32c..04aa1740f438 100644
--- a/arch/x86/kernel/Makefile
+++ b/arch/x86/kernel/Makefile
@@ -127,7 +127,7 @@ obj-$(CONFIG_PARAVIRT_CLOCK)	+= pvclock.o
 obj-$(CONFIG_X86_PMEM_LEGACY_DEVICE) += pmem.o
 
 obj-$(CONFIG_JAILHOUSE_GUEST)	+= jailhouse.o
-obj-$(CONFIG_INTEL_TDX_GUEST)	+= tdcall.o tdx.o
+obj-$(CONFIG_INTEL_TDX_GUEST)	+= tdcall.o tdx.o tdx-filter.o
 
 obj-$(CONFIG_EISA)		+= eisa.o
 obj-$(CONFIG_PCSPKR_PLATFORM)	+= pcspeaker.o
diff --git a/arch/x86/kernel/tdx-filter.c b/arch/x86/kernel/tdx-filter.c
new file mode 100644
index 000000000000..cbe4055759c4
--- /dev/null
+++ b/arch/x86/kernel/tdx-filter.c
@@ -0,0 +1,46 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright (c) 2020 Intel Corporation
+ */
+#define pr_fmt(fmt) "TDX: " fmt
+
+#include <linux/acpi.h>
+#include <linux/pci.h>
+#include <linux/device/filter.h>
+#include <linux/protected_guest.h>
+
+#include <asm/tdx.h>
+
+/* PCI bus allow-list devices */
+static struct pci_filter_node pci_allow_list[] = {
+	{ PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1000 }, /* Virtio NET */
+	{ PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1001 }, /* Virtio block */
+	{ PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1003 }, /* Virtio console */
+	{ PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1009 }, /* Virtio FS */
+
+	{ PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1041 }, /* Virtio 1.0 NET */
+	{ PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1042 }, /* Virtio 1.0 block */
+	{ PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1043 }, /* Virtio 1.0 console */
+	{ PCI_VENDOR_ID_REDHAT_QUMRANET, 0x1049 }, /* Virtio 1.0 FS */
+};
+
+static struct pci_dev_filter_data pci_data = {
+	.allow_list = pci_allow_list,
+	.len = ARRAY_SIZE(pci_allow_list)
+};
+
+static struct dev_filter_node pci_filter_node = {
+	.name = "pci",
+	.data = &pci_data,
+};
+
+void __init tdg_filter_init(void)
+{
+	if (!prot_guest_has(PR_GUEST_TDX))
+		return;
+
+	/* Register TDX PCI device filter list */
+	register_dev_filter(&pci_filter_node);
+
+	pr_info("Enabled TDX guest device filter\n");
+}
diff --git a/arch/x86/kernel/tdx.c b/arch/x86/kernel/tdx.c
index f223ffe809e7..c110b9514199 100644
--- a/arch/x86/kernel/tdx.c
+++ b/arch/x86/kernel/tdx.c
@@ -125,6 +125,7 @@ bool tdx_protected_guest_has(unsigned long flag)
 	case PR_GUEST_SHARED_MAPPING_INIT:
 	case PR_GUEST_DISABLE_UNCORE_SUPPORT:
 	case PR_GUEST_TDX:
+	case PR_GUEST_DEVICE_FILTER:
 		return static_cpu_has(X86_FEATURE_TDX_GUEST);
 	}
 
@@ -585,6 +586,8 @@ void __init tdx_early_init(void)
 
 	tdg_get_info();
 
+	tdg_filter_init();
+
 	pv_ops.irq.safe_halt = tdg_safe_halt;
 	pv_ops.irq.halt = tdg_halt;
 
-- 
2.27.0

