From a2a5470df4a652a4f5321d9d6ae4cbb34e7bda0f Mon Sep 17 00:00:00 2001
From: Kan Liang <kan.liang@linux.intel.com>
Date: Mon, 10 May 2021 11:40:48 -0700
Subject: [PATCH 08/47] perf, tools: Add event lists for Tremont

Based on v1 of the json file.

XXX NDA so far. needs to be updated to final non NDA version

Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
---
 tools/perf/pmu-events/arch/x86/mapfile.csv    |   1 +
 .../pmu-events/arch/x86/tremont/cache.json    | 197 ++++++++++++
 .../pmu-events/arch/x86/tremont/frontend.json |  52 ++++
 .../pmu-events/arch/x86/tremont/memory.json   |  32 ++
 .../pmu-events/arch/x86/tremont/other.json    | 221 +++++++++++++
 .../pmu-events/arch/x86/tremont/pipeline.json | 292 ++++++++++++++++++
 .../arch/x86/tremont/virtual-memory.json      | 142 +++++++++
 7 files changed, 937 insertions(+)
 create mode 100644 tools/perf/pmu-events/arch/x86/tremont/cache.json
 create mode 100644 tools/perf/pmu-events/arch/x86/tremont/frontend.json
 create mode 100644 tools/perf/pmu-events/arch/x86/tremont/memory.json
 create mode 100644 tools/perf/pmu-events/arch/x86/tremont/other.json
 create mode 100644 tools/perf/pmu-events/arch/x86/tremont/pipeline.json
 create mode 100644 tools/perf/pmu-events/arch/x86/tremont/virtual-memory.json

Index: b/tools/perf/pmu-events/arch/x86/mapfile.csv
===================================================================
--- a/tools/perf/pmu-events/arch/x86/mapfile.csv	2021-07-07 15:28:10.271821668 +0800
+++ b/tools/perf/pmu-events/arch/x86/mapfile.csv	2021-07-07 16:48:33.275904002 +0800
@@ -40,6 +40,7 @@
 GenuineIntel-6-A7,v1,icelake,core
 GenuineIntel-6-86,v1,tremontx,core
 GenuineIntel-6-96,v1,elkhartlake,core
+GenuineIntel-6-96,v1,tremont,core
 AuthenticAMD-23-([12][0-9A-F]|[0-9A-F]),v2,amdzen1,core
 AuthenticAMD-23-[[:xdigit:]]+,v1,amdzen2,core
 AuthenticAMD-25-[[:xdigit:]]+,v1,amdzen3,core
Index: b/tools/perf/pmu-events/arch/x86/tremont/cache.json
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ b/tools/perf/pmu-events/arch/x86/tremont/cache.json	2021-07-07 15:28:10.267821668 +0800
@@ -0,0 +1,197 @@
+[
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x24",
+        "Counter": "0,1,2,3",
+        "UMask": "0x0",
+        "EventName": "L2_REQUEST.ALL",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of L2 Cache Accesses.Counts the number of L2 Cache Accesses Counts the total number of L2 Cache Accesses - sum of hits, misses, rejects  front door requests for CRd/DRd/RFO/ItoM/L2 Prefetches only."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x24",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "L2_REQUEST.MISS",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of total L2 Cache Accesses that resulted in a Miss from a front door request only (does not include rejects or recycles)"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x24",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "L2_REQUEST.HIT",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of L2 Cache Accesses that resulted in a Hit from a front door request only (does not include rejects or recycles)"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x24",
+        "Counter": "0,1,2,3",
+        "UMask": "0x4",
+        "EventName": "L2_REQUEST.REJECTS",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of L2 Cache Accesses that miss the L2 and get BBL reject  short and long rejects (includes those counted in L2_reject_XQ.any)"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x2E",
+        "Counter": "0,1,2,3",
+        "UMask": "0x41",
+        "EventName": "LONGEST_LAT_CACHE.MISS",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Core-originated cacheable read-requests that miss the L2. Read-requests include as Loads/RFO/Ifetch (incl. L1 HW prefetch)"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x71",
+        "Counter": "0,1,2,3",
+        "UMask": "0x20",
+        "EventName": "TOPDOWN_FE_BOUND.ICACHE",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to an icache miss"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x21",
+        "EventName": "MEM_UOPS_RETIRED.LOCK_LOADS",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts all the retired locked loads."
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x41",
+        "EventName": "MEM_UOPS_RETIRED.SPLIT_LOADS",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts all the retired split loads."
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x42",
+        "EventName": "MEM_UOPS_RETIRED.SPLIT_STORES",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts all the retired split stores."
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x43",
+        "EventName": "MEM_UOPS_RETIRED.SPLIT",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts all retired splits."
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x81",
+        "EventName": "MEM_UOPS_RETIRED.ALL_LOADS",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of load ops retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x82",
+        "EventName": "MEM_UOPS_RETIRED.ALL_STORES",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of store ops retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x83",
+        "EventName": "MEM_UOPS_RETIRED.ALL",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of memory uops retired.  A single uop that performs both a load AND a store will be counted as 1, not 2 (e.g. ADD [mem], CONST)"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD1",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "MEM_LOAD_UOPS_RETIRED.L1_HIT",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of retired load uops.Counts the number of load ops retired that hit the L1 data cache"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD1",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "MEM_LOAD_UOPS_RETIRED.L2_HIT",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of load ops retired that hit in the L2 cache"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD1",
+        "Counter": "0,1,2,3",
+        "UMask": "0x8",
+        "EventName": "MEM_LOAD_UOPS_RETIRED.L1_MISS",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of load ops retired that miss in the L1 data cache"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD1",
+        "Counter": "0,1,2,3",
+        "UMask": "0x10",
+        "EventName": "MEM_LOAD_UOPS_RETIRED.L2_MISS",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of load ops retired that miss in the L2 cache"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD1",
+        "Counter": "0,1,2,3",
+        "UMask": "0x20",
+        "EventName": "MEM_LOAD_UOPS_RETIRED.HITM",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the loads retired that get the data from the other core or from the other module"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD1",
+        "Counter": "0,1,2,3",
+        "UMask": "0x40",
+        "EventName": "MEM_LOAD_UOPS_RETIRED.WCB_HIT",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of loads that hit in a write combining buffer (WCB), excluding the first load that caused the WCB to allocate."
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD1",
+        "Counter": "0,1,2,3",
+        "UMask": "0x80",
+        "EventName": "MEM_LOAD_UOPS_RETIRED.DRAM_HIT",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of load ops retired that hit in DRAM"
+    }
+]
\ No newline at end of file
Index: b/tools/perf/pmu-events/arch/x86/tremont/frontend.json
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ b/tools/perf/pmu-events/arch/x86/tremont/frontend.json	2021-07-07 15:28:10.267821668 +0800
@@ -0,0 +1,52 @@
+[
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x80",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "ICACHE.HIT",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts instruction cache activity in 64B line granularity - does not count access to same line .Counts every time the code stream enters into a new cache line by walking sequential from the previous line or being redirected by a jump and the instruction cache registers bytes are present."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x80",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "ICACHE.MISSES",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts every time the code stream enters into a new cache line by walking sequential from the previous line or being redirected by a jump and the instruction cache registers bytes are not present. -"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x80",
+        "Counter": "0,1,2,3",
+        "UMask": "0x3",
+        "EventName": "ICACHE.ACCESSES",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts every time the code stream enters into a new cache line by walking sequential from the previous line or being redirected by a jump."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xE7",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "MS_DECODED.MS_ENTRY",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of times entered into a ucode flow in the FEC.  Includes inserted flows due to front-end detected faults or assists."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xE9",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "DECODE_RESTRICTION.PREDECODE_WRONG",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts major decode penalties..Counts the number of times a decode restriction reduces the decode throughput due to wrong instruction length prediction."
+    }
+]
\ No newline at end of file
Index: b/tools/perf/pmu-events/arch/x86/tremont/memory.json
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ b/tools/perf/pmu-events/arch/x86/tremont/memory.json	2021-07-07 15:28:10.267821668 +0800
@@ -0,0 +1,32 @@
+[
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0x13",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "MISALIGN_MEM_REF.LOAD_PAGE_SPLIT",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of memory load uops retired that are page split on 4k boundary.Counts misaligned loads that are 4K page splits."
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0x13",
+        "Counter": "0,1,2,3",
+        "UMask": "0x4",
+        "EventName": "MISALIGN_MEM_REF.STORE_PAGE_SPLIT",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts misaligned stores that are 4K page splits."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xC3",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "MACHINE_CLEARS.MEMORY_ORDERING",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "20003",
+        "BriefDescription": "Counts the number of memory ordering machine clears triggered due to a snoop from an external agent. Does not count internally generated machine clears such as those due to disambiguations."
+    }
+]
\ No newline at end of file
Index: b/tools/perf/pmu-events/arch/x86/tremont/other.json
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ b/tools/perf/pmu-events/arch/x86/tremont/other.json	2021-07-07 15:28:10.267821668 +0800
@@ -0,0 +1,221 @@
+[
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x71",
+        "Counter": "0,1,2,3",
+        "UMask": "0x0",
+        "EventName": "TOPDOWN_FE_BOUND.ALL",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of retirement slots not consumed due to front end stalls.Simliar to UOPS_NOT_DELIVERED.ANY  (See above for details)"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x71",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "TOPDOWN_FE_BOUND.CISC",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to ms"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x71",
+        "Counter": "0,1,2,3",
+        "UMask": "0x10",
+        "EventName": "TOPDOWN_FE_BOUND.ITLB",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to itlb miss"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x71",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "TOPDOWN_FE_BOUND.BRANCH_DETECT",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to BAClear"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x71",
+        "Counter": "0,1,2,3",
+        "UMask": "0x4",
+        "EventName": "TOPDOWN_FE_BOUND.PREDECODE",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to predecode wrong"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x71",
+        "Counter": "0,1,2,3",
+        "UMask": "0x40",
+        "EventName": "TOPDOWN_FE_BOUND.BRANCH_RESTEER",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to BTClear"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x71",
+        "Counter": "0,1,2,3",
+        "UMask": "0x8",
+        "EventName": "TOPDOWN_FE_BOUND.DECODE",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to decode stall"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x71",
+        "Counter": "0,1,2,3",
+        "UMask": "0x80",
+        "EventName": "TOPDOWN_FE_BOUND.OTHER",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend that do not categorize into any other common frontend stall"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0x72",
+        "Counter": "0,1,2,3",
+        "UMask": "0x0",
+        "EventName": "TOPDOWN_RETIRING.ALL",
+        "BriefDescription": "Counts the number of consumed retirement slots.Similar to UOPS_RETIRED.ALL  (See above for details)"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x73",
+        "Counter": "0,1,2,3",
+        "UMask": "0x0",
+        "EventName": "TOPDOWN_BAD_SPECULATION.ALL",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of retirement slots not consumed due to bad speculation .Similar to ISSUE_SLOTS_NOT_CONSUMED.RECOVERY (See above for details) plus number of ROB entries thrown away"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x73",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "TOPDOWN_BAD_SPECULATION.NUKE",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to a Machine Clear"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x73",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "TOPDOWN_BAD_SPECULATION.MONUKE",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to Memory Ordering Machine clears"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x73",
+        "Counter": "0,1,2,3",
+        "UMask": "0x4",
+        "EventName": "TOPDOWN_BAD_SPECULATION.MISPREDICT",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to Branch Mispredict"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x74",
+        "Counter": "0,1,2,3",
+        "UMask": "0x0",
+        "EventName": "TOPDOWN_BE_BOUND.ALL",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of retirement slots not consumed due to backend stalls.Similar to ISSUE_SLOTS_NOT_CONSUMED.RESOURCE_FULL (See above for details)"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x74",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts every cycle when a rob entry is wasted due to alloc restrictions such as dual dest/dual exec/sync_uop/alloc_by_itself"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x74",
+        "Counter": "0,1,2,3",
+        "UMask": "0x10",
+        "EventName": "TOPDOWN_BE_BOUND.SERIALIZATION",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to iq/jeu scoreboards or ms scb"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x75",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "SERIALIZATION.IQ_JEU_SCB",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots that are not consumed during a microcode specified allocation stalls .Counts the number of issue slots where no uop could issue due to an IQ scoreboard that stalls allocation until a specified older uop retires or (in the cae of jump scoreboard) executes. Commonly executed instructions with iq scoreboards include LFENCE and"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x75",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "SERIALIZATION.NON_C01_MS_SCB",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots that are not consumed during a microcode specified front-end stall.Counts the number of issue slots where no uop could issue due to an MS scoreboard. An MS scoreboard stalls front-end issuing of uops from the UROM until a specified older uop retires. Relatively few instructions do an MS scoreboard. The most commonly exec"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x75",
+        "Counter": "0,1,2,3",
+        "UMask": "0x4",
+        "EventName": "SERIALIZATION.C01_MS_SCB",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the number of issue slots that are not consumed due to UMWAIT or TPAUSE instructions entering C0.1 activity state. .Counts the number of issue slots in a UMWAIT or TPAUSE instruction where no uop issues due to the instruction putting the CPU into the C0.1 activity state. For Tremont, UMWAIT and TPAUSE will only put the CPU into C0.1 activity state (not C0.2 activity st"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xB7",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "OFFCORE_RESP.MSR_OFFCORE_RESP0",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the matrix events specified by MSR_OFFCORE_RESPx .Counts the transactions of request type and response type specified in MSR_OFFCORE_RESP0"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xB7",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "OFFCORE_RESP.MSR_OFFCORE_RESP1",
+        "PDIR_COUNTER": "na",
+        "BriefDescription": "Counts the transactions of request type and response type specified in MSR_OFFCORE_RESP1"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xCB",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "HW_INTERRUPTS.RECEIVED",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "203",
+        "BriefDescription": "Counts Hardware Interrupt occurances.Counts the number of hardware interrupts received by the processor."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xCB",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "HW_INTERRUPTS.MASKED",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of core cycles during which interrupts are masked (disabled). Increments by 1 each core cycle that EFLAGS.IF is 0, regardless of whether interrupts are pending or not."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xCB",
+        "Counter": "0,1,2,3",
+        "UMask": "0x4",
+        "EventName": "HW_INTERRUPTS.PENDING_AND_MASKED",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of core cycles during which there are pending interrupts but interrupts are masked (disabled). Increments by 1 each core cycle that both EFLAGS.IF is 0 and an INTR is pending (which means the APIC is telling the ROB to cause an INTR). Th"
+    }
+]
\ No newline at end of file
Index: b/tools/perf/pmu-events/arch/x86/tremont/pipeline.json
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ b/tools/perf/pmu-events/arch/x86/tremont/pipeline.json	2021-07-07 15:28:10.267821668 +0800
@@ -0,0 +1,292 @@
+[
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x0E",
+        "Counter": "0,1,2,3",
+        "UMask": "0x0",
+        "EventName": "UOPS_ISSUED.ANY",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of uops issued by the front end (max 4) every cycle.When 4-uops are requested and only 2-uops are delivered, the event counts 2.  Uops_issued correlates to the number of ROB entries.  If uop takes 2 ROB slots it counts as 2 uops_issued."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x3C",
+        "Counter": "0,1,2,3",
+        "UMask": "0x0",
+        "EventName": "CPU_CLK_UNHALTED.CORE_P",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "2000003",
+        "BriefDescription": "Counts the number of unhalted clock cycles.Counts the number of unhalted core clock cycles"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x3C",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "CPU_CLK_UNHALTED.REF",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "2000003",
+        "BriefDescription": "Counts the number of unhalted reference clock cycles (bus clock)"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x0",
+        "EventName": "INST_RETIRED.ANY_P",
+        "SampleAfterValue": "2000003",
+        "BriefDescription": "Counts the number of instructions retired.Counts the number of instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC2",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "UOPS_RETIRED.MS",
+        "SampleAfterValue": "2000003",
+        "BriefDescription": "Counts the number of uops that are from the complex flows issued by the micro-sequencer (MS).  This includes uops from flows due to complex instructions, faults, assists, and inserted flows."
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC2",
+        "Counter": "0,1,2,3",
+        "UMask": "0x8",
+        "EventName": "UOPS_RETIRED.FPDIV",
+        "SampleAfterValue": "2000003",
+        "BriefDescription": "Counts the number of floating point divide uops retired (x87 and sse, including x87 sqrt)"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC2",
+        "Counter": "0,1,2,3",
+        "UMask": "0x10",
+        "EventName": "UOPS_RETIRED.IDIV",
+        "SampleAfterValue": "2000003",
+        "BriefDescription": "Counts the number of integer divide uops retired"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xC3",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "MACHINE_CLEARS.SMC",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "20003",
+        "BriefDescription": "Counts the number of times that the machine clears due typically to program modifying data (self modifying code) within 1K of a recently fetched code page"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xC3",
+        "Counter": "0,1,2,3",
+        "UMask": "0x4",
+        "EventName": "MACHINE_CLEARS.FP_ASSIST",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "20003",
+        "BriefDescription": "Counts the number of floating point assists which is not a reflection of the number of fp operations, instructions or uops. \nCounts the number of floating point operations retired that required microcode assist intervention. These assists are required in"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xC3",
+        "Counter": "0,1,2,3",
+        "UMask": "0x20",
+        "EventName": "MACHINE_CLEARS.PAGE_FAULT",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "20003",
+        "BriefDescription": "Counts the number of times that the machine clears due to a page fault.  Covers both I-Side and D-Side (Loads/Stores) page faults.  A page fault occurs when either the page is not present, or an access violation."
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC4",
+        "Counter": "0,1,2,3",
+        "UMask": "0x0",
+        "EventName": "BR_INST_RETIRED.ALL_BRANCHES",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of instructions in which the Instruction Pointer (IP) of the processor is resteered due to a branch instruction and the branch instruction successfully retires.  All branch type instructions are accounted for.  .Counts the number of branch instructions retired for all branch types"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC4",
+        "Counter": "0,1,2,3",
+        "UMask": "0x7e",
+        "EventName": "BR_INST_RETIRED.JCC",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts retired JCC (Jump on Conditional Code) branch instructions retired includes both taken and not taken branches"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC4",
+        "Counter": "0,1,2,3",
+        "UMask": "0xbf",
+        "EventName": "BR_INST_RETIRED.FAR_BRANCH",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of far branch instructions retired, includes far jump, far call and return, and Interrupt call and return"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC4",
+        "Counter": "0,1,2,3",
+        "UMask": "0xeb",
+        "EventName": "BR_INST_RETIRED.NON_RETURN_IND",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of near indirect JMP and near indirect CALL branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC4",
+        "Counter": "0,1,2,3",
+        "UMask": "0xf7",
+        "EventName": "BR_INST_RETIRED.RETURN",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of near RET branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC4",
+        "Counter": "0,1,2,3",
+        "UMask": "0xf9",
+        "EventName": "BR_INST_RETIRED.CALL",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of near CALL branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC4",
+        "Counter": "0,1,2,3",
+        "UMask": "0xfb",
+        "EventName": "BR_INST_RETIRED.IND_CALL",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of near indirect CALL branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC4",
+        "Counter": "0,1,2,3",
+        "UMask": "0xfd",
+        "EventName": "BR_INST_RETIRED.REL_CALL",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of near relative CALL branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC4",
+        "Counter": "0,1,2,3",
+        "UMask": "0xfe",
+        "EventName": "BR_INST_RETIRED.TAKEN_JCC",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of taken JCC branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC5",
+        "Counter": "0,1,2,3",
+        "UMask": "0x0",
+        "EventName": "BR_MISP_RETIRED.ALL_BRANCHES",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of mispredicted branch instructions retired.  All branch type instructions are accounted for.  Prediction of the branch target address enables the processor to begin executing instructions before the non-speculative execution path is kno.Counts the number of mispredicted branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC5",
+        "Counter": "0,1,2,3",
+        "UMask": "0x7e",
+        "EventName": "BR_MISP_RETIRED.JCC",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of mispredicted JCC branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC5",
+        "Counter": "0,1,2,3",
+        "UMask": "0xeb",
+        "EventName": "BR_MISP_RETIRED.NON_RETURN_IND",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of mispredicted near indirect JMP and near indirect CALL branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC5",
+        "Counter": "0,1,2,3",
+        "UMask": "0xf7",
+        "EventName": "BR_MISP_RETIRED.RETURN",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of mispredicted near RET branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC5",
+        "Counter": "0,1,2,3",
+        "UMask": "0xfb",
+        "EventName": "BR_MISP_RETIRED.IND_CALL",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of mispredicted near indirect CALL branch instructions retired"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xC5",
+        "Counter": "0,1,2,3",
+        "UMask": "0xfe",
+        "EventName": "BR_MISP_RETIRED.TAKEN_JCC",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of mispredicted taken JCC branch instructions retired"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xCD",
+        "Counter": "0,1,2,3",
+        "UMask": "0x1",
+        "EventName": "CYCLES_DIV_BUSY.IDIV",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Cycles the integer divider is busy.  Does not imply a stall waiting for the divider."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xCD",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "CYCLES_DIV_BUSY.FPDIV",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Cycles the floating point divider is busy.  Does not imply a stall waiting for the divider."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xE6",
+        "Counter": "0,1,2,3",
+        "UMask": "0x8",
+        "EventName": "BACLEARS.RETURN",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of RETURN baclears"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xE6",
+        "Counter": "0,1,2,3",
+        "UMask": "0x10",
+        "EventName": "BACLEARS.COND",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of JCC baclears"
+    }
+]
\ No newline at end of file
Index: b/tools/perf/pmu-events/arch/x86/tremont/virtual-memory.json
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ b/tools/perf/pmu-events/arch/x86/tremont/virtual-memory.json	2021-07-07 15:28:10.267821668 +0800
@@ -0,0 +1,142 @@
+[
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x08",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "DTLB_LOAD_MISSES.WALK_COMPLETED_4K",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Page Walk Successfully Completed - 4K"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x08",
+        "Counter": "0,1,2,3",
+        "UMask": "0x4",
+        "EventName": "DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Page Walk Successfully Completed - 2M/4M"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x08",
+        "Counter": "0,1,2,3",
+        "UMask": "0x10",
+        "EventName": "DTLB_LOAD_MISSES.WALK_PENDING",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Number of page walks outstanding for LOAD (demand loads or SW prefetch) in PMH every cycle. (Can only count 1 per cycle on Atom).  A PMH page walk is outstanding from page walk start till PMH becomes idle again (ready to serve next walk). Includes EPT-wal"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x49",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "DTLB_STORE_MISSES.WALK_COMPLETED_4K",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "2000003",
+        "BriefDescription": "Page Walk Successfully Completed - 4K"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x49",
+        "Counter": "0,1,2,3",
+        "UMask": "0x4",
+        "EventName": "DTLB_STORE_MISSES.WALK_COMPLETED_2M_4M",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "2000003",
+        "BriefDescription": "Page Walk Successfully Completed - 2M/4M"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x49",
+        "Counter": "0,1,2,3",
+        "UMask": "0x10",
+        "EventName": "DTLB_STORE_MISSES.WALK_PENDING",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Number of page walks outstanding for LOAD (demand loads or SW prefetch) in PMH every cycle. (Can only count 1 per cycle on Atom).  A PMH page walk is outstanding from page walk start till PMH becomes idle again (ready to serve next walk). Includes EPT-wal"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x4F",
+        "Counter": "0,1,2,3",
+        "UMask": "0x10",
+        "EventName": "EPT.WALK_PENDING",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Cycle count for an Extended Page table walk including GTLB hits.  The Extended Page Directory cache is used by Virtual Machine operating systems while the guest operating systems use the standard TLB caches."
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x85",
+        "Counter": "0,1,2,3",
+        "UMask": "0x2",
+        "EventName": "ITLB_MISSES.WALK_COMPLETED_4K",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "2000003",
+        "BriefDescription": "Counts the page translation requests for iside operations that are serviced by the L2TLB or the Page Walker..Page Walk Successfully Completed - 4K"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x85",
+        "Counter": "0,1,2,3",
+        "UMask": "0x4",
+        "EventName": "ITLB_MISSES.WALK_COMPLETED_2M_4M",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "2000003",
+        "BriefDescription": "Page Walk Successfully Completed - 2M/4M"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0x85",
+        "Counter": "0,1,2,3",
+        "UMask": "0x10",
+        "EventName": "ITLB_MISSES.WALK_PENDING",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Number of page walks outstanding for LOAD (demand loads or SW prefetch) in PMH every cycle. (Can only count 1 per cycle on Atom).  A PMH page walk is outstanding from page walk start till PMH becomes idle again (ready to serve next walk). Includes EPT-wal"
+    },
+    {
+        "CollectPEBSRecord": "1",
+        "EventCode": "0xBD",
+        "Counter": "0,1,2,3",
+        "UMask": "0x20",
+        "EventName": "TLB_FLUSHES.STLB_ANY",
+        "PDIR_COUNTER": "na",
+        "SampleAfterValue": "20003",
+        "BriefDescription": "Count number of any STLB flush attempts (Entire, PCID, InvPage, CR3 write, etc)"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x11",
+        "EventName": "MEM_UOPS_RETIRED.DTLB_MISS_LOADS",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of load ops retired that filled the STLB - includes those in DTLB_LOAD_MISSES submasks"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x12",
+        "EventName": "MEM_UOPS_RETIRED.DTLB_MISS_STORES",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts the number of store ops retired (store STLB miss)"
+    },
+    {
+        "PEBS": "2",
+        "CollectPEBSRecord": "2",
+        "EventCode": "0xD0",
+        "Counter": "0,1,2,3",
+        "UMask": "0x13",
+        "EventName": "MEM_UOPS_RETIRED.DTLB_MISS",
+        "SampleAfterValue": "200003",
+        "BriefDescription": "Counts all retired STLB misses."
+    }
+]
\ No newline at end of file
