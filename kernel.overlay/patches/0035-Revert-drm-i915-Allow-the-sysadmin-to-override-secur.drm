From 1d1bbba8a3a7609bc6bd5c954231d1b733cf1adb Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Fri, 29 Jan 2021 21:29:19 +0800
Subject: [PATCH 35/39] Revert "drm/i915: Allow the sysadmin to override
 security mitigations"

This reverts commit 481e27f050732b8c680f26287dd44967fddf9a79.
---
 drivers/gpu/drm/i915/Makefile                 |   1 -
 .../gpu/drm/i915/gt/intel_ring_submission.c   |   4 +-
 drivers/gpu/drm/i915/i915_mitigations.c       | 146 ------------------
 drivers/gpu/drm/i915/i915_mitigations.h       |  13 --
 4 files changed, 1 insertion(+), 163 deletions(-)
 delete mode 100644 drivers/gpu/drm/i915/i915_mitigations.c
 delete mode 100644 drivers/gpu/drm/i915/i915_mitigations.h

diff --git a/drivers/gpu/drm/i915/Makefile b/drivers/gpu/drm/i915/Makefile
index 6d9e81ea67f4..e5574e506a5c 100644
--- a/drivers/gpu/drm/i915/Makefile
+++ b/drivers/gpu/drm/i915/Makefile
@@ -38,7 +38,6 @@ i915-y += i915_drv.o \
 	  i915_config.o \
 	  i915_irq.o \
 	  i915_getparam.o \
-	  i915_mitigations.o \
 	  i915_params.o \
 	  i915_pci.o \
 	  i915_scatterlist.o \
diff --git a/drivers/gpu/drm/i915/gt/intel_ring_submission.c b/drivers/gpu/drm/i915/gt/intel_ring_submission.c
index 3c0f4f4e10b4..16b48e72c369 100644
--- a/drivers/gpu/drm/i915/gt/intel_ring_submission.c
+++ b/drivers/gpu/drm/i915/gt/intel_ring_submission.c
@@ -32,7 +32,6 @@
 #include "gen6_ppgtt.h"
 #include "gen7_renderclear.h"
 #include "i915_drv.h"
-#include "i915_mitigations.h"
 #include "intel_breadcrumbs.h"
 #include "intel_context.h"
 #include "intel_gt.h"
@@ -886,8 +885,7 @@ static int switch_context(struct i915_request *rq)
 	GEM_BUG_ON(HAS_EXECLISTS(engine->i915));
 
 	if (engine->wa_ctx.vma && ce != engine->kernel_context) {
-		if (engine->wa_ctx.vma->private != ce &&
-		    i915_mitigate_clear_residuals()) {
+		if (engine->wa_ctx.vma->private != ce) {
 			ret = clear_residuals(rq);
 			if (ret)
 				return ret;
diff --git a/drivers/gpu/drm/i915/i915_mitigations.c b/drivers/gpu/drm/i915/i915_mitigations.c
deleted file mode 100644
index 84f12598d145..000000000000
--- a/drivers/gpu/drm/i915/i915_mitigations.c
+++ /dev/null
@@ -1,146 +0,0 @@
-// SPDX-License-Identifier: MIT
-/*
- * Copyright © 2021 Intel Corporation
- */
-
-#include <linux/kernel.h>
-#include <linux/moduleparam.h>
-#include <linux/slab.h>
-#include <linux/string.h>
-
-#include "i915_drv.h"
-#include "i915_mitigations.h"
-
-static unsigned long mitigations __read_mostly = ~0UL;
-
-enum {
-	CLEAR_RESIDUALS = 0,
-};
-
-static const char * const names[] = {
-	[CLEAR_RESIDUALS] = "residuals",
-};
-
-bool i915_mitigate_clear_residuals(void)
-{
-	return READ_ONCE(mitigations) & BIT(CLEAR_RESIDUALS);
-}
-
-static int mitigations_set(const char *val, const struct kernel_param *kp)
-{
-	unsigned long new = ~0UL;
-	char *str, *sep, *tok;
-	bool first = true;
-	int err = 0;
-
-	BUILD_BUG_ON(ARRAY_SIZE(names) >= BITS_PER_TYPE(mitigations));
-
-	str = kstrdup(val, GFP_KERNEL);
-	if (!str)
-		return -ENOMEM;
-
-	for (sep = str; (tok = strsep(&sep, ","));) {
-		bool enable = true;
-		int i;
-
-		/* Be tolerant of leading/trailing whitespace */
-		tok = strim(tok);
-
-		if (first) {
-			first = false;
-
-			if (!strcmp(tok, "auto"))
-				continue;
-
-			new = 0;
-			if (!strcmp(tok, "off"))
-				continue;
-		}
-
-		if (*tok == '!') {
-			enable = !enable;
-			tok++;
-		}
-
-		if (!strncmp(tok, "no", 2)) {
-			enable = !enable;
-			tok += 2;
-		}
-
-		if (*tok == '\0')
-			continue;
-
-		for (i = 0; i < ARRAY_SIZE(names); i++) {
-			if (!strcmp(tok, names[i])) {
-				if (enable)
-					new |= BIT(i);
-				else
-					new &= ~BIT(i);
-				break;
-			}
-		}
-		if (i == ARRAY_SIZE(names)) {
-			pr_err("Bad \"%s.mitigations=%s\", '%s' is unknown\n",
-			       DRIVER_NAME, val, tok);
-			err = -EINVAL;
-			break;
-		}
-	}
-	kfree(str);
-	if (err)
-		return err;
-
-	WRITE_ONCE(mitigations, new);
-	return 0;
-}
-
-static int mitigations_get(char *buffer, const struct kernel_param *kp)
-{
-	unsigned long local = READ_ONCE(mitigations);
-	int count, i;
-	bool enable;
-
-	if (!local)
-		return scnprintf(buffer, PAGE_SIZE, "%s\n", "off");
-
-	if (local & BIT(BITS_PER_LONG - 1)) {
-		count = scnprintf(buffer, PAGE_SIZE, "%s,", "auto");
-		enable = false;
-	} else {
-		enable = true;
-		count = 0;
-	}
-
-	for (i = 0; i < ARRAY_SIZE(names); i++) {
-		if ((local & BIT(i)) != enable)
-			continue;
-
-		count += scnprintf(buffer + count, PAGE_SIZE - count,
-				   "%s%s,", enable ? "" : "!", names[i]);
-	}
-
-	buffer[count - 1] = '\n';
-	return count;
-}
-
-static const struct kernel_param_ops ops = {
-	.set = mitigations_set,
-	.get = mitigations_get,
-};
-
-module_param_cb_unsafe(mitigations, &ops, NULL, 0600);
-MODULE_PARM_DESC(mitigations,
-"Selectively enable security mitigations for all Intel® GPUs in the system.\n"
-"\n"
-"  auto -- enables all mitigations required for the platform [default]\n"
-"  off  -- disables all mitigations\n"
-"\n"
-"Individual mitigations can be enabled by passing a comma-separated string,\n"
-"e.g. mitigations=residuals to enable only clearing residuals or\n"
-"mitigations=auto,noresiduals to disable only the clear residual mitigation.\n"
-"Either '!' or 'no' may be used to switch from enabling the mitigation to\n"
-"disabling it.\n"
-"\n"
-"Active mitigations for Ivybridge, Baytrail, Haswell:\n"
-"  residuals -- clear all thread-local registers between contexts"
-);
diff --git a/drivers/gpu/drm/i915/i915_mitigations.h b/drivers/gpu/drm/i915/i915_mitigations.h
deleted file mode 100644
index 1359d8135287..000000000000
--- a/drivers/gpu/drm/i915/i915_mitigations.h
+++ /dev/null
@@ -1,13 +0,0 @@
-/* SPDX-License-Identifier: MIT */
-/*
- * Copyright © 2021 Intel Corporation
- */
-
-#ifndef __I915_MITIGATIONS_H__
-#define __I915_MITIGATIONS_H__
-
-#include <linux/types.h>
-
-bool i915_mitigate_clear_residuals(void);
-
-#endif /* __I915_MITIGATIONS_H__ */
-- 
2.25.1

