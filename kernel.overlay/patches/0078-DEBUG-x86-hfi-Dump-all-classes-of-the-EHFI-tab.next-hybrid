From 6325fbd40d26758a6b7ab3e3ebbcaa1dabc0a638 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Mon, 2 Nov 2020 18:33:01 -0800
Subject: [PATCH 78/80] DEBUG: x86/hfi: Dump all classes of the EHFI table

Extend the hw_state debugfs file to print all classes of the EHFI table.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 drivers/thermal/intel/intel_hfi.c | 42 +++++++++++++++++++++++--------
 1 file changed, 31 insertions(+), 11 deletions(-)

diff --git a/drivers/thermal/intel/intel_hfi.c b/drivers/thermal/intel/intel_hfi.c
index 8328086f052d..17fff4680b99 100644
--- a/drivers/thermal/intel/intel_hfi.c
+++ b/drivers/thermal/intel/intel_hfi.c
@@ -215,7 +215,7 @@ static int class_cpu_capacities_show(struct seq_file *s, void *data)
 	seq_printf(s, "\n");
 	for_each_online_cpu(cpu) {
 		seq_printf(s, "%4d", cpu);
-		for (class = 0; class < hfi_params.nr_classes; class++)
+		for (class = 0; class < hfi_features.nr_classes; class++)
 			seq_printf(s, " %6ld", topology_get_class_cpu_scale(cpu, class));
 		seq_printf(s, "\n");
 	}
@@ -227,9 +227,9 @@ DEFINE_SHOW_ATTRIBUTE(class_cpu_capacities);
 static int hfi_state_show(struct seq_file *s, void *unused)
 {
 	struct hfi_params *params = s->private;
-	struct hfi_hdr *hfi_hdr = params->hdr;
+	struct hfi_hdr *hfi_hdr;
 	u64 msr_val;
-	int cpu;
+	int cpu, i;
 
 	/* Dump the relevant registers */
 	rdmsrl_on_cpu(params->handling_cpu, MSR_IA32_PACKAGE_THERM_STATUS, &msr_val);
@@ -275,26 +275,46 @@ static int hfi_state_show(struct seq_file *s, void *unused)
 	}
 
 	/* Dump the performance capability change indication */
-	seq_printf(s, "\nPerf Cap Change Indication:");
-	seq_printf(s, "%u", hfi_hdr->perf_updated);
+	seq_printf(s, "\nPerf Cap Change Indication:\n");
+	hfi_hdr = params->hdr;
+	for (i = 0; i < hfi_features.nr_classes; i++) {
+		struct hfi_hdr *hdr_data = hfi_hdr;
+
+		seq_printf(s, "Class%d:%u\t", i, hdr_data->perf_updated);
+		hfi_hdr++;
+	}
+
 
 	/* Dump the energy efficiency capability change indication */
-	seq_printf(s, "\n\nEnergy Efficiency Cap Change Indication:");
-	seq_printf(s, "%u\n", hfi_hdr->ee_updated);
+	seq_printf(s, "\n\nEnergy Efficiency Cap Change Indication:\n");
+	hfi_hdr = params->hdr;
+	for (i = 0; i < hfi_features.nr_classes; i++) {
+		struct hfi_hdr *hdr_data = hfi_hdr;
+
+		seq_printf(s, "Class%d:%u\t", i, hdr_data->ee_updated);
+		hfi_hdr++;
+	}
 
 	/* Dump the HFI table */
-	seq_printf(s, "\nHFI table:\n");
+	seq_printf(s, "\n\nHFI table:\n");
 	seq_printf(s, "CPU\tIndex");
-	seq_printf(s, "\tPe  Ef");
+	for (i = 0; i < hfi_features.nr_classes; i++)
+		seq_printf(s, "\tPe%u Ef%u", i, i);
+
 	seq_printf(s, "\tHFI-interrupts\n");
 	for_each_cpu(cpu, params->cpus) {
 		s16 index = per_cpu(hfi_cpu_info, cpu).index;
 		void *data_ptr = params->data +
 				       index * hfi_features.cpu_stride;
-		struct hfi_cpu_data *data = data_ptr;
 
 		seq_printf(s, "%4u\t%4d", cpu, index);
-		seq_printf(s, "\t%3u %3u", data->perf_cap, data->ee_cap);
+
+		for (i = 0; i < hfi_features.nr_classes; i++) {
+			struct hfi_cpu_data *data = data_ptr +
+						    i * hfi_features.class_stride;
+
+			seq_printf(s, "\t%3u %3u", data->perf_cap, data->ee_cap);
+		}
 		seq_printf(s, "\t%15llu\n", per_cpu(hfi_interrupts, cpu));
 	}
 
-- 
2.27.0

