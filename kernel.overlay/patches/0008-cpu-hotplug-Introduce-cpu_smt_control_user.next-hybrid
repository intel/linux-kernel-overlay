From 68823e354eb8e5447da68f6ff714b14cf06e9084 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Mon, 10 Aug 2020 12:57:52 -0700
Subject: [PATCH 08/80] cpu/hotplug: Introduce cpu_smt_control_user

In hybrid systems, some CPUs may support SMT while others do not.
Currently, cpu_smt_control is set from check_bugs() via
cpu_smt_check_topology() only once using the boot CPU. Thus, if the boot
CPU does not support SMT, it will not be enabled on any CPU. Hence,
support for SMT needs to be evaluated for each individual CPU.

Furthermore, since cpu_smt_control also handles the SMT settings
specified in the kernel command line (using "nosmt"). Hence, user
settings would also need to be checked along with hardware support. It
would be simpler to have a separate flag to handle the user settings.

Introduce a new cpu_smt_control_user flag to keep the setting of the
kernel parameter and compare it with cpu_smt_control when bringing up
individual CPUs. A subsequent change will introduce updates to handle
SMT support for each CPU.

Cc: Andi Kleen <ak@linux.intel.com>
Cc: Aubrey Li <aubrey.li@linux.intel.com>
Cc: Chen Yu <yu.c.chen@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: Kan Liang <kan.liang@linux.intel.com>
Cc: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Cc: Tony Luck <tony.luck@intel.com>
Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
Changes since v4:
 * None

Changes since v3:
 * Introduced this patch.

Changes since v2:
 * N/A

Changes since v1:
 * N/A
---
 kernel/cpu.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/kernel/cpu.c b/kernel/cpu.c
index e538518556f4..1a613101c9a6 100644
--- a/kernel/cpu.c
+++ b/kernel/cpu.c
@@ -401,6 +401,7 @@ void __weak arch_smt_update(void) { }
 
 #ifdef CONFIG_HOTPLUG_SMT
 enum cpuhp_smt_control cpu_smt_control __read_mostly = CPU_SMT_ENABLED;
+enum cpuhp_smt_control cpu_smt_control_user __read_mostly = CPU_SMT_ENABLED;
 
 void __init cpu_smt_disable(bool force)
 {
@@ -409,11 +410,13 @@ void __init cpu_smt_disable(bool force)
 
 	if (force) {
 		pr_info("SMT: Force disabled\n");
-		cpu_smt_control = CPU_SMT_FORCE_DISABLED;
+		cpu_smt_control_user = CPU_SMT_FORCE_DISABLED;
 	} else {
 		pr_info("SMT: disabled\n");
-		cpu_smt_control = CPU_SMT_DISABLED;
+		cpu_smt_control_user = CPU_SMT_DISABLED;
 	}
+
+	cpu_smt_control = cpu_smt_control_user;
 }
 
 /*
-- 
2.27.0

