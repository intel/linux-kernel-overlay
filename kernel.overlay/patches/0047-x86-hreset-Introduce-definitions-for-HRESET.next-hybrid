From 4ee5347882ecd1f2b16dc0323e6fc0be71c5b469 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Wed, 14 Oct 2020 09:33:43 -0700
Subject: [PATCH 47/72] x86/hreset: Introduce definitions for HRESET

Certain Intel parts feature hardware to classify tasks into several
classes. Hardware uses various event counters and statistically
identifies classes of tasks using the execution history. This
classification must be done per task. Hence, when switching tasks
the clasification history must be clobbered using the HRESET
instruction.

Add definitions to identify support for such instructions as well
as machine code for such instruction.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 arch/x86/include/asm/hreset.h | 35 +++++++++++++++++++++++++++++++++++
 1 file changed, 35 insertions(+)
 create mode 100644 arch/x86/include/asm/hreset.h

diff --git a/arch/x86/include/asm/hreset.h b/arch/x86/include/asm/hreset.h
new file mode 100644
index 000000000000..2232cbc7b49b
--- /dev/null
+++ b/arch/x86/include/asm/hreset.h
@@ -0,0 +1,35 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef _ASM_X86_HRESET_H
+
+/* Find the supported HRESET features in this leaf */
+#define CPUID_HRESET_LEAF_EAX		0x20
+
+#ifdef __ASSEMBLY__
+
+/**
+ * HRESET - History reset. Available since binutils vX.YY
+ *
+ * Provides a hint to reset a subset of features of the history prediction in
+ * current processor. The subset of features is indicated in %eax. The
+ * instruction defines an 1-byte immediate operand, which is ignored. The
+ * assembly code would look like:
+ *
+ *	hreset %eax, $0
+ *
+ * The corresponding machine code looks like:
+ *
+ *	F3 0F 3A F0 ModRM Imm
+ *
+ * F3 is a mandatory prefix (?). Thee ModRM must specify register addressing
+ * and use the %eax register. The machine code below uses 0xc0 for such
+ * purpose. The ignored immediate operand is set as 0.
+ *
+ * The instruction is documented in the Intel Architecture Instruction Set
+ * Extensions and Future Programming Reference.
+ */
+
+#define __ASM_HRESET  .byte 0xf3, 0xf, 0x3a, 0xf0, 0xc0, 0x0
+
+#endif /* __ASSEMBLY */
+
+#endif /* _ASM_X86_HRESET_H */
-- 
2.27.0

