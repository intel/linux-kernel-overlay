From c4cb763812696742c083f6e1c5683f0442e29577 Mon Sep 17 00:00:00 2001
From: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date: Tue, 22 Jun 2021 15:17:17 -0700
Subject: [PATCH 71/80] thermal: netlink: Add new event to notfy CPU capacities
 change

It is possible that CPU capacities change dynamically by firmware
to respond to thermals on that part of die. This is true on some
Intel processors with support of Hardware feedback interface. The
kernel can stop scheduling, but that is a reactive approach. If
there are too many such events are happening, user space can
proactively adjust power limits of the CPUs so that this issue
can be prevented.

This change adds a new netlink event to notify, when there is a
capcity change sent by the firmware. This takes one argument
which is the timestamp. This timestamp can be from firmware or
local kernel timestamp.

[Fixed build break when !CONFIG_THERMAL_NETLINK by adding a
u64 timestamp argument to thermal_notify_cpu_capacities_change()
                  -- Ricardo                                     ]

Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
---
 drivers/thermal/thermal_netlink.c | 19 +++++++++++++++++++
 drivers/thermal/thermal_netlink.h |  6 ++++++
 include/uapi/linux/thermal.h      |  2 ++
 3 files changed, 27 insertions(+)

diff --git a/drivers/thermal/thermal_netlink.c b/drivers/thermal/thermal_netlink.c
index 1234dbe95895..f69dbfd35478 100644
--- a/drivers/thermal/thermal_netlink.c
+++ b/drivers/thermal/thermal_netlink.c
@@ -43,12 +43,15 @@ static const struct nla_policy thermal_genl_policy[THERMAL_GENL_ATTR_MAX + 1] =
 	[THERMAL_GENL_ATTR_CDEV_MAX_STATE]	= { .type = NLA_U32 },
 	[THERMAL_GENL_ATTR_CDEV_NAME]		= { .type = NLA_STRING,
 						    .len = THERMAL_NAME_LENGTH },
+	/* Others */
+	[THERMAL_GENL_ATTR_CAPACITIES]		= { .type = NLA_U64 },
 };
 
 struct param {
 	struct nlattr **attrs;
 	struct sk_buff *msg;
 	const char *name;
+	u64 timestamp;
 	int tz_id;
 	int cdev_id;
 	int trip_id;
@@ -189,6 +192,14 @@ static int thermal_genl_event_gov_change(struct param *p)
 	return 0;
 }
 
+static int thermal_genl_event_cpu_capacities_change(struct param *p)
+{
+	if (nla_put_u32(p->msg, THERMAL_GENL_ATTR_CAPACITIES, p->timestamp))
+		return -EMSGSIZE;
+
+	return 0;
+}
+
 int thermal_genl_event_tz_delete(struct param *p)
 	__attribute__((alias("thermal_genl_event_tz")));
 
@@ -218,6 +229,7 @@ static cb_t event_cb[] = {
 	[THERMAL_GENL_EVENT_CDEV_DELETE]	= thermal_genl_event_cdev_delete,
 	[THERMAL_GENL_EVENT_CDEV_STATE_UPDATE]	= thermal_genl_event_cdev_state_update,
 	[THERMAL_GENL_EVENT_TZ_GOV_CHANGE]	= thermal_genl_event_gov_change,
+	[THERMAL_GENL_EVENT_CPU_CAPACITIES_CHANGE] = thermal_genl_event_cpu_capacities_change,
 };
 
 /*
@@ -355,6 +367,13 @@ int thermal_notify_tz_gov_change(int tz_id, const char *name)
 	return thermal_genl_send_event(THERMAL_GENL_EVENT_TZ_GOV_CHANGE, &p);
 }
 
+int thermal_notify_cpu_capacities_change(u64 timestamp)
+{
+	struct param p = { .timestamp = timestamp };
+
+	return thermal_genl_send_event(THERMAL_GENL_EVENT_CPU_CAPACITIES_CHANGE, &p);
+}
+
 /*************************** Command encoding ********************************/
 
 static int __thermal_genl_cmd_tz_get_id(struct thermal_zone_device *tz,
diff --git a/drivers/thermal/thermal_netlink.h b/drivers/thermal/thermal_netlink.h
index 828d1dddfa98..3d7729551386 100644
--- a/drivers/thermal/thermal_netlink.h
+++ b/drivers/thermal/thermal_netlink.h
@@ -22,6 +22,7 @@ int thermal_notify_cdev_state_update(int cdev_id, int state);
 int thermal_notify_cdev_add(int cdev_id, const char *name, int max_state);
 int thermal_notify_cdev_delete(int cdev_id);
 int thermal_notify_tz_gov_change(int tz_id, const char *name);
+int thermal_notify_cpu_capacities_change(u64 timestamp);
 int thermal_genl_sampling_temp(int id, int temp);
 #else
 static inline int thermal_netlink_init(void)
@@ -97,6 +98,11 @@ static inline int thermal_notify_tz_gov_change(int tz_id, const char *name)
 	return 0;
 }
 
+static inline int thermal_notify_cpu_capacities_change(u64 timestamp)
+{
+	return 0;
+}
+
 static inline int thermal_genl_sampling_temp(int id, int temp)
 {
 	return 0;
diff --git a/include/uapi/linux/thermal.h b/include/uapi/linux/thermal.h
index 9aa2fedfa309..99a0927bfce6 100644
--- a/include/uapi/linux/thermal.h
+++ b/include/uapi/linux/thermal.h
@@ -44,6 +44,7 @@ enum thermal_genl_attr {
 	THERMAL_GENL_ATTR_CDEV_MAX_STATE,
 	THERMAL_GENL_ATTR_CDEV_NAME,
 	THERMAL_GENL_ATTR_GOV_NAME,
+	THERMAL_GENL_ATTR_CAPACITIES,
 
 	__THERMAL_GENL_ATTR_MAX,
 };
@@ -71,6 +72,7 @@ enum thermal_genl_event {
 	THERMAL_GENL_EVENT_CDEV_DELETE,		/* Cdev unbound */
 	THERMAL_GENL_EVENT_CDEV_STATE_UPDATE,	/* Cdev state updated */
 	THERMAL_GENL_EVENT_TZ_GOV_CHANGE,	/* Governor policy changed  */
+	THERMAL_GENL_EVENT_CPU_CAPACITIES_CHANGE, /* CPU Capacities change */
 	__THERMAL_GENL_EVENT_MAX,
 };
 #define THERMAL_GENL_EVENT_MAX (__THERMAL_GENL_EVENT_MAX - 1)
-- 
2.27.0

