From 4224b28d266348a01c7dc49b2a3cc64ea02a7dc9 Mon Sep 17 00:00:00 2001
From: sandeep singh <sandeep1.singh@intel.com>
Date: Fri, 18 Dec 2020 08:32:50 +0530
Subject: [PATCH 048/170] THB Bug Fixes

THB Bug fixes for Intel TSENS and HDDL driver

Signed-off-by: sandeep singh <sandeep1.singh@intel.com>
---
 drivers/misc/hddl_device/hddl_device.c        |  11 +-
 drivers/misc/hddl_device/hddl_device_lh.c     |   1 +
 drivers/misc/hddl_device/hddl_device_util.h   |   2 +-
 drivers/misc/intel_tsens/Kconfig              |   2 +-
 .../misc/intel_tsens/intel_tsens_thermal.c    |   3 +-
 drivers/misc/intel_tsens/thunderbay_thermal.c |   1 +
 drivers/misc/intel_tsens/thunderbay_tsens.h   | 151 ++++++++++++++++++
 7 files changed, 165 insertions(+), 6 deletions(-)
 create mode 100644 drivers/misc/intel_tsens/thunderbay_tsens.h

diff --git a/drivers/misc/hddl_device/hddl_device.c b/drivers/misc/hddl_device/hddl_device.c
index 76ca42dd7b21..ed8530ab9110 100644
--- a/drivers/misc/hddl_device/hddl_device.c
+++ b/drivers/misc/hddl_device/hddl_device.c
@@ -148,11 +148,13 @@ struct intel_hddl_clients **
 	intel_hddl_setup_device(struct device *dev,
 				intel_hddl_connect_task task, u32 *n_devs,
 				struct intel_hddl_clients **hddl_clients,
-				void *pdata)
+				void *pdata,
+				struct mutex *lock)
 {
 	u32 sw_device_id_list[XLINK_MAX_DEVICE_LIST_SIZE];
 	char device_name[XLINK_MAX_DEVICE_NAME_SIZE];
 	struct intel_hddl_clients **cls;
+	int initialized = 0;
 	u32 num_devices = 0;
 	u32 i = 0;
 
@@ -466,6 +468,7 @@ void intel_hddl_device_remove(struct intel_hddl_clients *d)
 	mutex_unlock(&d->lock);
 }
 
+#ifdef XLINK_ASYNC_ENABLED
 static int intel_hddl_device_event_notify(u32 sw_device_id,
 					  uint32_t event_type)
 {
@@ -503,7 +506,7 @@ static int intel_hddl_device_event_notify(u32 sw_device_id,
 	}
 	return ret;
 }
-
+#endif
 void intel_hddl_close_xlink_device(struct device *dev,
 				   struct intel_hddl_clients *d)
 {
@@ -543,11 +546,13 @@ int intel_hddl_open_xlink_device(struct device *dev,
 		return -ENODEV;
 	}
 	mutex_init(&d->lock);
+
+#ifdef XLINK_ASYNC_ENABLED
 	xlink_register_device_event(&d->xlink_dev,
 				    hddl_device_events,
 				    HDDL_NUM_EVENT_TYPE,
 				    intel_hddl_device_event_notify);
-
+#endif
 	d->status = HDDL_DEV_STATUS_CONNECTED;
 	/*
 	 * Try opening xlink channel, open channel will fail till host/client
diff --git a/drivers/misc/hddl_device/hddl_device_lh.c b/drivers/misc/hddl_device/hddl_device_lh.c
index 3a5a89f76637..6551d4417e88 100644
--- a/drivers/misc/hddl_device/hddl_device_lh.c
+++ b/drivers/misc/hddl_device/hddl_device_lh.c
@@ -774,6 +774,7 @@ static int intel_hddl_client_probe(struct platform_device *pdev)
 		devm_kfree(&pdev->dev, priv);
 		return -EINVAL;
 	}
+	mutex_init(&priv->lock);
 	ret = intel_hddl_device_init(priv);
 	if (ret) {
 		dev_err(&pdev->dev, "HDDL device init failed\n");
diff --git a/drivers/misc/hddl_device/hddl_device_util.h b/drivers/misc/hddl_device/hddl_device_util.h
index 628619e0cdb9..67a68e4bda74 100644
--- a/drivers/misc/hddl_device/hddl_device_util.h
+++ b/drivers/misc/hddl_device/hddl_device_util.h
@@ -21,7 +21,7 @@ struct intel_hddl_clients **
 	intel_hddl_setup_device(struct device *dev,
 				intel_hddl_connect_task task, u32 *n_devs,
 				struct intel_hddl_clients **hddl_clients,
-				void *pdata);
+				void *pdata, struct mutex *lock);
 
 int intel_hddl_xlink_remove_i2c_adap(struct device *dev,
 				     struct intel_hddl_clients *c);
diff --git a/drivers/misc/intel_tsens/Kconfig b/drivers/misc/intel_tsens/Kconfig
index 8066be0801ea..261eccb435c0 100644
--- a/drivers/misc/intel_tsens/Kconfig
+++ b/drivers/misc/intel_tsens/Kconfig
@@ -56,7 +56,7 @@ config INTEL_TSENS_IA_HOST
 
 config THUNDERBAY_THERMAL
 	tristate "Temperature sensor driver for intel keembay"
-	depends on INTEL_TSENS_LOCAL_HOST && ARCH_THUNDERBAY
+	depends on INTEL_TSENS_LOCAL_HOST
 	help
 	  Enable this option if you want to have support for thunderbay
 	  thermal management sensors.
diff --git a/drivers/misc/intel_tsens/intel_tsens_thermal.c b/drivers/misc/intel_tsens/intel_tsens_thermal.c
index 8b690eee6c10..d0eefbd60aa1 100644
--- a/drivers/misc/intel_tsens/intel_tsens_thermal.c
+++ b/drivers/misc/intel_tsens/intel_tsens_thermal.c
@@ -361,7 +361,8 @@ static int intel_tsens_config_dt(struct intel_tsens_priv *priv)
 	int i = 0, ret;
 
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-	priv->base_addr = devm_ioremap_resource(&pdev->dev, res);
+	//priv->base_addr = devm_ioremap_resource(&pdev->dev, res);
+	priv->base_addr = ioremap(res->start, (res->end - res->start));
 	node = of_parse_phandle(np, "soc-sensors", 0);
 	if (!node)
 		return -EINVAL;
diff --git a/drivers/misc/intel_tsens/thunderbay_thermal.c b/drivers/misc/intel_tsens/thunderbay_thermal.c
index 86b93265f606..ba805b2eac5a 100644
--- a/drivers/misc/intel_tsens/thunderbay_thermal.c
+++ b/drivers/misc/intel_tsens/thunderbay_thermal.c
@@ -17,6 +17,7 @@
 #include <linux/delay.h>
 #include <linux/slab.h>
 #include <linux/hddl_device.h>
+#include "intel_tsens_thermal.h"
 #include "thunderbay_tsens.h"
 
 struct thunderbay_thermal_priv {
diff --git a/drivers/misc/intel_tsens/thunderbay_tsens.h b/drivers/misc/intel_tsens/thunderbay_tsens.h
new file mode 100644
index 000000000000..14d5bfec7ac4
--- /dev/null
+++ b/drivers/misc/intel_tsens/thunderbay_tsens.h
@@ -0,0 +1,151 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
+/*
+ * Thunderbay Temperature sensor local-host module.
+ *
+ * Copyright (C) 2019-2020 Intel Corporation.
+ */
+
+#ifndef _LINUX_THB_TSENS_H
+#define _LINUX_THB_TSENS_H
+
+#include <linux/thermal.h>
+
+/* Register values for thunderbay temperature (PVT Sensor) */
+#define SAR_TEMP_DTS0_OFFSET 0x4048
+#define SAR_TEMP_DTS1_OFFSET 0x404c
+#define SAR_TEMP_DTS2_OFFSET 0x4050
+#define COM_CPR_3_BASE 0x485520000
+#define COM_CPR_2_BASE 0x385520000
+#define COM_CPR_1_BASE 0x285520000
+#define COM_CPR_0_BASE 0x185520000
+#define A53SS_BASE     0x88830000
+/* SAR_PID_EN */
+#define DTS_THD_SAR_PID_EN_ABORT 0x3024
+
+/*temp boundary cases */
+/* temperature boundary cases */
+#define LOWER_TEMP_NRANGE 27
+#define UPPER_TEMP_NRANGE 260
+#define LOWER_TEMP -13736
+#define UPPER_TEMP 153123
+
+/* temperature calculation lookup */
+
+#define THUNDERBAY_SENSOR_BASE_TEMP 27
+
+static int raw_thb[] = {
+-13736, -13300, -12862, -12422, -11981,
+
+-11539, -11095, -10649, -10202, -9754,
+
+-9304, -8852, -8399, -7945, -7489,
+
+-7031, -6572, -6111, -5649, -5185,
+
+-4719, -4252, -3783, -3313, -2841,
+
+-2367, -1892, -1415, -936, -456,
+
+25, 508, 994, 1481, 1970,
+
+2460, 2952, 3446, 3942, 4439,
+
+4939, 5440, 5943, 6447, 6954,
+
+7462, 7972, 8484, 8998, 9513,
+
+10031, 10550, 11071, 11594, 12119,
+
+12646, 13175, 13706, 14239, 14774,
+
+15310, 15849, 16390, 16933, 17477,
+
+18024, 18573, 19124, 19677, 20232,
+
+20789, 21348, 21909, 22473, 23038,
+
+23606, 24176, 24748, 25322, 25899,
+
+26477, 27058, 27641, 28226, 28814,
+
+29404, 29996, 30590, 31187, 31786,
+
+32388, 32991, 33598, 34206, 34817,
+
+35430, 36046, 36664, 37285, 37908,
+
+38534, 39162, 39792, 40426, 41061,
+
+41699, 42340, 42984, 43630, 44278,
+
+44930, 45584, 46240, 46899, 47561,
+
+48226, 48894, 49564, 50237, 50912,
+
+51591, 52272, 52957, 53644, 54334,
+
+55026, 55722, 56421, 57122, 57827,
+
+58535, 59245, 59959, 60675, 61395,
+
+62118, 62844, 63573, 64305, 65040,
+
+65779, 66521, 67266, 68014, 68765,
+
+69520, 70278, 71039, 71804, 72572,
+
+73344, 74119, 74897, 75679, 76464,
+
+77253, 78046, 78842, 79641, 80444,
+
+81251, 82061, 82876, 83693, 84515,
+
+85340, 86169, 87002, 87839, 88680,
+
+89524, 90373, 91225, 92082, 92942,
+
+93806, 94675, 95547, 96424, 97305,
+
+98190, 99079, 99973, 100870, 101772,
+
+102679, 103589, 104504, 105424, 106348,
+
+107276, 108209, 109147, 110089, 111035,
+
+111987, 112943, 113904, 114869, 115839,
+
+116815, 117795, 118779, 119769, 120764,
+
+121764, 122769, 123779, 124794, 125814,
+
+126840, 127870, 128906, 129948, 130994,
+
+132047, 133104, 134167, 135236, 136310,
+
+137390, 138475, 139566, 140663, 141766,
+
+142875, 143989, 145110, 146236, 147369,
+
+148507, 149652, 150803, 151960, 153123};
+
+static int raw_thb_size = sizeof(raw_thb) / sizeof(int);
+
+enum thb_thermal_sensor_en {
+	CPUSS_SOUTH_NOC,
+	CPUSS_NORTH_NOC,
+	PAR_VPU_0,
+	PAR_VPU_1,
+	PAR_VPU_2,
+	PAR_VPU_3,
+	PAR_MEDIA_0,
+	PAR_MEDIA_1,
+	PAR_MEDIA_2,
+	PAR_MEDIA_3,
+	NOC_VPU_DDR_0,
+	NOC_VPU_DDR_1,
+	NOC_VPU_DDR_2,
+	NOC_VPU_DDR_3,
+	THUNDERBAY_SENSOR_MAX
+};
+
+#endif /* _LINUX_THB_TSENS_H */
-- 
2.27.0

