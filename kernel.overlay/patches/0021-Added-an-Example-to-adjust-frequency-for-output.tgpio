From 4d13f0e7dfa1167d8ebb72f89e6086441743c7d6 Mon Sep 17 00:00:00 2001
From: Rajvi Jingar <rajvi.jingar@intel.com>
Date: Fri, 10 Jan 2020 15:45:30 -0800
Subject: [PATCH 21/23] Added an Example to adjust frequency for output

This patch adds an example to adjust frequency for tgpio pin with
periodic mode enabled.

Signed-off-by: Rajvi Jingar <rajvi.jingar@intel.com>
---
 tools/testing/selftests/ptp/testptp.c | 21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

diff --git a/tools/testing/selftests/ptp/testptp.c b/tools/testing/selftests/ptp/testptp.c
index 748020cc3bd7..046fc99e9a02 100644
--- a/tools/testing/selftests/ptp/testptp.c
+++ b/tools/testing/selftests/ptp/testptp.c
@@ -117,6 +117,8 @@ static void usage(char *progname)
 {
 	fprintf(stderr,
 		"usage: %s [options]\n"
+		" -a val     adjust frequency for periodic output with a period\n"
+		"            of 'val' nanoseconds\n"
 		" -c         query the ptp clock's capabilities\n"
 		" -d name    device to open\n"
 		" -e val     read 'val' external time stamp events\n"
@@ -173,6 +175,7 @@ int main(int argc, char *argv[])
 	int list_pins = 0;
 	int pct_offset = 0;
 	int n_samples = 0;
+	int new_period = -1;
 	int pin_index = -1, pin_func;
 	int pps = -1;
 	int seconds = 0;
@@ -186,8 +189,11 @@ int main(int argc, char *argv[])
 
 	progname = strrchr(argv[0], '/');
 	progname = progname ? 1+progname : argv[0];
-	while (EOF != (c = getopt(argc, argv, "cd:e:f:ghH:i:k:lL:p:P:sSt:T:w:z"))) {
+	while (EOF != (c = getopt(argc, argv, "a:cd:e:f:ghi:k:lL:p:P:sSt:T:z"))) {
 		switch (c) {
+		case 'a':
+			new_period = atoi(optarg);
+			break;
 		case 'c':
 			capabilities = 1;
 			break;
@@ -430,6 +436,19 @@ int main(int argc, char *argv[])
 		return -1;
 	}
 
+	if (new_period >= 0) {
+		memset(&perout_request, 0, sizeof(perout_request));
+		perout_request.index = index;
+		perout_request.flags = PTP_PEROUT_FREQ_ADJ;
+		perout_request.period.sec = 0;
+		perout_request.period.nsec = new_period;
+		if (ioctl(fd, PTP_PEROUT_REQUEST2, &perout_request)) {
+			perror("PTP_PEROUT_REQUEST");
+		} else {
+			puts("periodic output request okay");
+		}
+	}
+
 	if (perout >= 0) {
 		if (clock_gettime(clkid, &ts)) {
 			perror("clock_gettime");
-- 
2.32.0

