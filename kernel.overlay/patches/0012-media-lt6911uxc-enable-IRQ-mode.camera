From 5f5a0604b2858f945d6996833992d34ce0558059 Mon Sep 17 00:00:00 2001
From: Ng Khai Wen <khai.wen.ng@intel.com>
Date: Wed, 14 Jul 2021 13:34:21 +0800
Subject: [PATCH 12/14] media: lt6911uxc: enable IRQ mode

Change Description:
1. Modify IRQ pin for Kernel 5.10
2. uncomment MACRO for IRQ mode
3. fix mutex locked in irq causing node not enumerated

Signed-off-by: khaiwenn <khai.wen.ng@intel.com>
Signed-off-by: zouxiaoh <xiaohong.zou@intel.com>
Signed-off-by: Ng Khai Wen <khai.wen.ng@intel.com>
---
 drivers/media/i2c/lt6911uxc.c                 | 46 ++-----------------
 .../media/platform/intel/ipu6-tglrvp-pdata.c  |  4 +-
 2 files changed, 6 insertions(+), 44 deletions(-)

diff --git a/drivers/media/i2c/lt6911uxc.c b/drivers/media/i2c/lt6911uxc.c
index 26239f33a48b..44efa0adffe8 100644
--- a/drivers/media/i2c/lt6911uxc.c
+++ b/drivers/media/i2c/lt6911uxc.c
@@ -1346,9 +1346,8 @@ static void  lt6911uxc_check_status(struct lt6911uxc_state *lt6911uxc)
 	lt6911uxc_ext_control(lt6911uxc, false);
 }
 
-//#define LT69111UXC_IRQ_MODE
+#define LT69111UXC_IRQ_MODE
 
-#ifdef LT69111UXC_IRQ_MODE
 static irqreturn_t lt6911uxc_threaded_irq_fn(int irq, void *dev_id)
 {
 	struct v4l2_subdev *sd = dev_id;
@@ -1365,30 +1364,10 @@ static irqreturn_t lt6911uxc_threaded_irq_fn(int irq, void *dev_id)
 		return IRQ_NONE;
 	}
 
-	mutex_lock(&lt6911uxc->mutex);
 	dev_info(sd->dev, "%s in kthread %d\n", __func__, current->pid);
 	lt6911uxc_check_status(lt6911uxc);
-	mutex_unlock(&lt6911uxc->mutex);
 	return IRQ_HANDLED;
 }
-#else
-static int lt6911uxc_detect_thread(void *data)
-{
-	struct lt6911uxc_state *lt6911uxc = (struct lt6911uxc_state *)data;
-	struct i2c_client *client = v4l2_get_subdevdata(&lt6911uxc->sd);
-
-	if (!lt6911uxc) {
-		dev_err(&client->dev,  "Invalid argument\n");
-		return -EINVAL;
-	}
-
-	while (lt6911uxc->thread_run) {
-		lt6911uxc_check_status(lt6911uxc);
-		usleep_range(2000000, 2050000);
-	}
-	return 0;
-}
-#endif
 
 static int lt6911uxc_probe(struct i2c_client *client)
 {
@@ -1446,11 +1425,10 @@ static int lt6911uxc_probe(struct i2c_client *client)
 		dev_err(&client->dev, "Init entity pads failed:%d\n", ret);
 		goto probe_error_v4l2_ctrl_handler_free;
 	}
-#ifdef LT69111UXC_IRQ_MODE
 	/* Setting irq */
 	ret = devm_gpio_request_one(&client->dev,
 			lt6911uxc->platform_data->irq_pin,
-			GPIOF_OUT_INIT_HIGH, "Interrupt signal");
+			GPIOF_IN, "Interrupt signal");
 	if (ret) {
 		dev_err(&client->dev, "IRQ pin %d (name: %s) request failed! ret: %d\n",
 			lt6911uxc->platform_data->irq_pin,
@@ -1465,6 +1443,8 @@ static int lt6911uxc_probe(struct i2c_client *client)
 		goto probe_error_v4l2_ctrl_handler_free;
 	}
 
+	lt6911uxc_check_status(lt6911uxc);
+
 	ret = devm_request_threaded_irq(&client->dev,
 			gpio_to_irq(lt6911uxc->platform_data->irq_pin),
 			NULL, lt6911uxc_threaded_irq_fn,
@@ -1474,24 +1454,6 @@ static int lt6911uxc_probe(struct i2c_client *client)
 		dev_err(&client->dev, "IRQ request failed! ret: %d\n", ret);
 		goto probe_error_v4l2_ctrl_handler_free;
 	}
-
-	/* Check the current status */
-	usleep_range(2000000, 2050000);
-	mutex_lock(&lt6911uxc->mutex);
-	lt6911uxc_check_status(lt6911uxc);
-	mutex_unlock(&lt6911uxc->mutex);
-#else
-	lt6911uxc->poll_task = kthread_create(lt6911uxc_detect_thread,
-		lt6911uxc, "lt6911uxc polling thread");
-	if (lt6911uxc->poll_task == NULL) {
-		dev_err(&client->dev, "create lt6911uxc polling thread failed.\n");
-		goto probe_error_media_entity_cleanup;
-	} else {
-		lt6911uxc->thread_run = true;
-		wake_up_process(lt6911uxc->poll_task);
-		dev_info(&client->dev, "Started lt6911uxc polling thread.\n");
-	}
-#endif
 	ret = v4l2_async_register_subdev_sensor_common(&lt6911uxc->sd);
 	if (ret < 0) {
 		dev_err(&client->dev, "failed to register V4L2 subdev: %d",
diff --git a/drivers/media/platform/intel/ipu6-tglrvp-pdata.c b/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
index cba0a523dd01..b437fd2c8c44 100644
--- a/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
+++ b/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
@@ -443,7 +443,7 @@ static struct lt6911uxc_platform_data lt6911uxc_pdata_1 = {
 	.port = 1,
 	.lanes = LT6911UXC_LANES,
 	.i2c_slave_address = LT6911UXC_I2C_ADDRESS,
-	.irq_pin = 258,
+	.irq_pin = 410,
 	.irq_pin_name = "C2",
 	.irq_pin_flags = IRQF_TRIGGER_RISING
 		| IRQF_TRIGGER_FALLING | IRQF_ONESHOT,
@@ -470,7 +470,7 @@ static struct lt6911uxc_platform_data lt6911uxc_pdata_2 = {
 	.port = 2,
 	.lanes = LT6911UXC_LANES,
 	.i2c_slave_address = LT6911UXC_I2C_ADDRESS,
-	.irq_pin = 258,
+	.irq_pin = 410,
 	.irq_pin_name = "C2",
 	.irq_pin_flags = IRQF_TRIGGER_RISING
 		| IRQF_TRIGGER_FALLING | IRQF_ONESHOT,
-- 
2.25.1

