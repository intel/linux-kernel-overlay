From ac249ef55a8f45af0789279eb121863c21432545 Mon Sep 17 00:00:00 2001
From: Ng Khai Wen <khai.wen.ng@intel.com>
Date: Thu, 1 Jul 2021 15:34:48 +0800
Subject: [PATCH 34/48] media: imx390: skip unchanged mode reg list

Change Description:
1920x1200 applied in probe time, as default mode.
skip unchanged mode reg list to save start time.

Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: Ng Khai Wen <khai.wen.ng@intel.com>
---
 drivers/media/i2c/imx390.c | 32 +++++++++++++++++++++++++-------
 1 file changed, 25 insertions(+), 7 deletions(-)

diff --git a/drivers/media/i2c/imx390.c b/drivers/media/i2c/imx390.c
index 258b016186727..4f6b664461677 100644
--- a/drivers/media/i2c/imx390.c
+++ b/drivers/media/i2c/imx390.c
@@ -180,6 +180,8 @@ struct imx390 {
 
 	/* Current mode */
 	const struct imx390_mode *cur_mode;
+	/* Previous mode */
+	const struct imx390_mode *pre_mode;
 
 	/* To serialize asynchronus callbacks */
 	struct mutex mutex;
@@ -626,12 +628,16 @@ static int imx390_start_streaming(struct imx390 *imx390)
 	struct i2c_client *client = v4l2_get_subdevdata(&imx390->sd);
 	const struct imx390_reg_list *reg_list;
 
-	reg_list = &imx390->cur_mode->reg_list;
-	ret = imx390_write_reg_list(imx390, reg_list);
-	if (ret) {
-		dev_err(&client->dev, "failed to set stream mode");
-		return ret;
-	}
+	if (imx390->cur_mode != imx390->pre_mode) {
+		reg_list = &imx390->cur_mode->reg_list;
+		ret = imx390_write_reg_list(imx390, reg_list);
+		if (ret) {
+			dev_err(&client->dev, "failed to set stream mode");
+			return ret;
+		}
+		imx390->pre_mode = imx390->cur_mode;
+	} else
+		dev_dbg(&client->dev, "same mode, skip write reg list");
 
 	ret = imx390_write_reg(imx390, IMX390_REG_STANDBY,
 			       IMX390_REG_VALUE_08BIT, 0);
@@ -988,6 +994,7 @@ static int imx390_probe(struct i2c_client *client)
 {
 	struct v4l2_subdev *sd;
 	struct imx390 *imx390;
+	const struct imx390_reg_list *reg_list;
 	int ret;
 
 	imx390 = devm_kzalloc(&client->dev, sizeof(*imx390), GFP_KERNEL);
@@ -1029,7 +1036,18 @@ static int imx390_probe(struct i2c_client *client)
 				imx390->platform_data->suffix);
 
 	mutex_init(&imx390->mutex);
-	imx390->cur_mode = &supported_modes[0];
+
+	/* 1920x1200 default */
+	imx390->cur_mode = &supported_modes[1];
+	imx390->pre_mode = imx390->cur_mode;
+
+	reg_list = &imx390->cur_mode->reg_list;
+	ret = imx390_write_reg_list(imx390, reg_list);
+	if (ret) {
+		dev_err(&client->dev, "failed to apply preset mode");
+		return ret;
+	}
+
 	ret = imx390_init_controls(imx390);
 	if (ret) {
 		dev_err(&client->dev, "failed to init controls: %d", ret);
-- 
2.25.1

