From 7cecf85a6f0f85bd901758659b4472b6b0ff8aee Mon Sep 17 00:00:00 2001
From: Ranjan Dutta <ranjan.dutta@intel.com>
Date: Sat, 13 Feb 2021 16:02:08 +0800
Subject: [PATCH 17/19] Revert "drm/i915: Always flush the active worker before
 returning from the wait"

This reverts commit aa39818d92564ff2a52a40685e363439b9833959.
---
 drivers/gpu/drm/i915/i915_active.c | 28 +++++++++++++---------------
 1 file changed, 13 insertions(+), 15 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_active.c b/drivers/gpu/drm/i915/i915_active.c
index 9ed19b8bca60..10a865f3dc09 100644
--- a/drivers/gpu/drm/i915/i915_active.c
+++ b/drivers/gpu/drm/i915/i915_active.c
@@ -631,26 +631,24 @@ static int flush_lazy_signals(struct i915_active *ref)
 
 int __i915_active_wait(struct i915_active *ref, int state)
 {
+	int err;
+
 	might_sleep();
 
-	/* Any fence added after the wait begins will not be auto-signaled */
-	if (i915_active_acquire_if_busy(ref)) {
-		int err;
+	if (!i915_active_acquire_if_busy(ref))
+		return 0;
 
-		err = flush_lazy_signals(ref);
-		i915_active_release(ref);
-		if (err)
-			return err;
+	/* Any fence added after the wait begins will not be auto-signaled */
+	err = flush_lazy_signals(ref);
+	i915_active_release(ref);
+	if (err)
+		return err;
 
-		if (___wait_var_event(ref, i915_active_is_idle(ref),
-				      state, 0, 0, schedule()))
-			return -EINTR;
-	}
+	if (!i915_active_is_idle(ref) &&
+	    ___wait_var_event(ref, i915_active_is_idle(ref),
+			      state, 0, 0, schedule()))
+		return -EINTR;
 
-	/*
-	 * After the wait is complete, the caller may free the active.
-	 * We have to flush any concurrent retirement before returning.
-	 */
 	flush_work(&ref->work);
 	return 0;
 }
-- 
2.25.1

