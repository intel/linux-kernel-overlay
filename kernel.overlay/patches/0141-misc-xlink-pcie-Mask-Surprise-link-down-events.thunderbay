From 9fa79c19ba3368d95602bfdb6f0287665d7daf4e Mon Sep 17 00:00:00 2001
From: Srikanth Thokala <srikanth.thokala@intel.com>
Date: Tue, 22 Jun 2021 04:41:14 +0530
Subject: [PATCH 141/170] misc: xlink-pcie: Mask Surprise link down events

With v5.4 kernel, Link Down events are being treated as
AER errors and not as link down.  So mask them in the
AER register.

Signed-off-by: Srikanth Thokala <srikanth.thokala@intel.com>
---
 drivers/misc/xlink-pcie/remote_host/pci.c | 26 +++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/drivers/misc/xlink-pcie/remote_host/pci.c b/drivers/misc/xlink-pcie/remote_host/pci.c
index 07e33b7e3a02..7857e32f95e9 100644
--- a/drivers/misc/xlink-pcie/remote_host/pci.c
+++ b/drivers/misc/xlink-pcie/remote_host/pci.c
@@ -116,6 +116,29 @@ static void intel_xpcie_pci_set_aspm(struct xpcie_dev *xdev, int aspm)
 			      link_control);
 }
 
+#ifdef XLINK_PCIE_RH_DRV_AER
+static int intel_xpcie_mask_surprise_link_down(struct xpcie_dev *xdev,
+					       bool mask)
+{
+	struct pci_dev *pdev = xdev->pci;
+	u32 reg32;
+	int pos;
+
+	pos = pdev->aer_cap;
+	if (!pos)
+		return -ENODEV;
+
+	pci_read_config_dword(pdev, pos + PCI_ERR_UNCOR_MASK, &reg32);
+	if (mask)
+		reg32 |= PCI_ERR_UNC_SURPDN;
+	else
+		reg32 &= ~PCI_ERR_UNC_SURPDN;
+	pci_write_config_dword(pdev, pos + PCI_ERR_UNCOR_MASK, reg32);
+
+	return 0;
+}
+#endif
+
 static void intel_xpcie_pci_unmap_bar(struct xpcie_dev *xdev)
 {
 	if (xdev->xpcie.bar0) {
@@ -470,6 +493,8 @@ int intel_xpcie_pci_init(struct xpcie_dev *xdev, struct pci_dev *pdev)
 		goto init_exit;
 
 #ifdef XLINK_PCIE_RH_DRV_AER
+	intel_xpcie_mask_surprise_link_down(xdev, true);
+
 	rc = pci_enable_pcie_error_reporting(xdev->pci);
 	if (rc)
 		dev_warn(&pdev->dev,
@@ -526,6 +551,7 @@ int intel_xpcie_pci_cleanup(struct xpcie_dev *xdev)
 
 #ifdef XLINK_PCIE_RH_DRV_AER
 	pci_disable_pcie_error_reporting(xdev->pci);
+	intel_xpcie_mask_surprise_link_down(xdev, false);
 #endif
 	intel_xpcie_pci_unmap_bar(xdev);
 	pci_release_regions(xdev->pci);
-- 
2.27.0

