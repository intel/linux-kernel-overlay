From 502fb23c31632a692c31a19c3028e1d650a3e329 Mon Sep 17 00:00:00 2001
From: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
Date: Tue, 21 Jul 2020 21:49:30 -0700
Subject: [PATCH 46/82] x86/tdx: Add command line option to disable TDX guest
 filter support

Add a kernel command line option to disable device filter support
for TDX guest platform. It is a debug feature.

Reviewed-by: Andi Kleen <ak@linux.intel.com>
Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
---
 Documentation/admin-guide/kernel-parameters.txt |  3 +++
 arch/x86/include/asm/tdx.h                      |  2 ++
 arch/x86/kernel/tdx-filter.c                    | 16 ++++++++++++++++
 arch/x86/kernel/tdx.c                           |  5 ++++-
 4 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt
index 0882d49b9db3..22d89c75ded7 100644
--- a/Documentation/admin-guide/kernel-parameters.txt
+++ b/Documentation/admin-guide/kernel-parameters.txt
@@ -5491,6 +5491,9 @@
 			Disable automatic kernel lockdown for TD guest.
 			Only allowed for debug TD.
 
+	tdx_disable_filter [x86]
+			Disable TDX guest filter support.
+
 	test_suspend=	[SUSPEND][,N]
 			Specify "mem" (for Suspend-to-RAM) or "standby" (for
 			standby suspend) or "freeze" (for suspend type freeze)
diff --git a/arch/x86/include/asm/tdx.h b/arch/x86/include/asm/tdx.h
index 2df3337272e2..0dc49d76f633 100644
--- a/arch/x86/include/asm/tdx.h
+++ b/arch/x86/include/asm/tdx.h
@@ -93,6 +93,8 @@ extern phys_addr_t tdg_shared_mask(void);
 extern int tdx_hcall_gpa_intent(phys_addr_t gpa, int numpages,
 				enum tdx_map_type map_type);
 
+bool tdg_filter_enabled(void);
+
 /*
  * To support I/O port access in decompressor or early kernel init
  * code, since #VE exception handler cannot be used, use paravirt
diff --git a/arch/x86/kernel/tdx-filter.c b/arch/x86/kernel/tdx-filter.c
index 8eee26fa52ca..218f453e5149 100644
--- a/arch/x86/kernel/tdx-filter.c
+++ b/arch/x86/kernel/tdx-filter.c
@@ -10,6 +10,9 @@
 #include <linux/protected_guest.h>
 
 #include <asm/tdx.h>
+#include <asm/cmdline.h>
+
+static bool tdg_filter_status = 1;
 
 #define ADD_FILTER_NODE(bname, alist, st)		\
 {							\
@@ -47,6 +50,11 @@ static struct drv_filter_node filter_list[] = {
 	ADD_FILTER_NODE(virtio, virtio_allow_list, false),
 };
 
+bool tdg_filter_enabled(void)
+{
+	return tdg_filter_status;
+}
+
 void __init tdg_filter_init(void)
 {
 	int i;
@@ -54,6 +62,14 @@ void __init tdg_filter_init(void)
 	if (!prot_guest_has(PR_GUEST_TDX))
 		return;
 
+	if (cmdline_find_option_bool(boot_command_line, "tdx_disable_filter"))
+		tdg_filter_status = 0;
+
+	if (!tdg_filter_enabled()) {
+		pr_info("Disabled TDX guest filter support\n");
+		return;
+	}
+
 	for (i = 0; i < ARRAY_SIZE(filter_list); i++)
 		register_drv_filter(&filter_list[i]);
 
diff --git a/arch/x86/kernel/tdx.c b/arch/x86/kernel/tdx.c
index 3969f0a7447c..e89c6a035d4d 100644
--- a/arch/x86/kernel/tdx.c
+++ b/arch/x86/kernel/tdx.c
@@ -105,14 +105,17 @@ static inline bool cpuid_has_tdx_guest(void)
 
 bool tdx_prot_guest_has(unsigned long flag)
 {
+	bool tdx_guest_enabled = cpu_feature_enabled(X86_FEATURE_TDX_GUEST);
+
 	switch (flag) {
 	case PR_GUEST_MEM_ENCRYPT:
 	case PR_GUEST_MEM_ENCRYPT_ACTIVE:
 	case PR_GUEST_UNROLL_STRING_IO:
 	case PR_GUEST_SHARED_MAPPING_INIT:
 	case PR_GUEST_TDX:
+		return tdx_guest_enabled;
 	case PR_GUEST_DRIVER_FILTER:
-		return cpu_feature_enabled(X86_FEATURE_TDX_GUEST);
+		return tdg_filter_enabled() && tdx_guest_enabled;
 	}
 
 	return false;
-- 
2.27.0

