From fc4e0ba4f83b0611b3dc0c23b92cf01965818bac Mon Sep 17 00:00:00 2001
From: Ravikumar PM <ravikumar.pm@intel.com>
Date: Fri, 5 Feb 2021 10:26:21 +0530
Subject: [PATCH 152/170] xlink-core: Increase the control data size.

Increasing the control data size over non-ipc interface.
The increased size will help to transfer more data over the header.
---
 drivers/misc/xlink-core/xlink-core.c  |  9 +++--
 drivers/misc/xlink-core/xlink-defs.h  | 47 ++++++++++++++-------------
 drivers/misc/xlink-core/xlink-ioctl.c |  4 +--
 3 files changed, 33 insertions(+), 27 deletions(-)

diff --git a/drivers/misc/xlink-core/xlink-core.c b/drivers/misc/xlink-core/xlink-core.c
index 62e52af248f4..98c9e8db451b 100644
--- a/drivers/misc/xlink-core/xlink-core.c
+++ b/drivers/misc/xlink-core/xlink-core.c
@@ -752,8 +752,13 @@ enum xlink_error xlink_write_control_data(struct xlink_handle *handle,
 	trace_xlink_write_control(handle->sw_device_id, chan, size);
 	if (!xlink || !handle)
 		return X_LINK_ERROR;
-	if (size > XLINK_MAX_CONTROL_DATA_SIZE)
-		return X_LINK_ERROR; // TODO: XLink Parameter Error
+	if (chan < XLINK_IPC_MAX_CHANNELS) {
+		if (size > XLINK_MAX_CONTROL_DATA_SIZE)
+			return X_LINK_ERROR;
+	} else {
+		if (size > XLINK_MAX_CONTROL_DATA_PCIE_SIZE)
+			return X_LINK_ERROR;
+	}
 	link = get_link_by_sw_device_id(handle->sw_device_id);
 	if (!link)
 		return X_LINK_ERROR;
diff --git a/drivers/misc/xlink-core/xlink-defs.h b/drivers/misc/xlink-core/xlink-defs.h
index eaec0f8450b7..248d7a918792 100644
--- a/drivers/misc/xlink-core/xlink-defs.h
+++ b/drivers/misc/xlink-core/xlink-defs.h
@@ -12,29 +12,30 @@
 #include <linux/xlink.h>
 #include "xlink-trace.h"
 
-#define XLINK_MAX_BUF_SIZE		128U
-#define XLINK_MAX_DATA_SIZE		(1024U * 1024U * 1024U)
-#define XLINK_MAX_CONTROL_DATA_SIZE	100U
-#define XLINK_MAX_CONNECTIONS		16
-#define XLINK_PACKET_ALIGNMENT		64
-#define XLINK_INVALID_EVENT_ID		0xDEADBEEF
-#define XLINK_INVALID_CHANNEL_ID	0xDEAD
-#define XLINK_PACKET_QUEUE_CAPACITY	10000
-#define XLINK_EVENT_QUEUE_CAPACITY	10000
-#define XLINK_EVENT_HEADER_MAGIC	0x786C6E6B
-#define XLINK_PING_TIMEOUT_MS		5000U
-#define XLINK_MAX_DEVICE_NAME_SIZE	128
-#define XLINK_MAX_DEVICE_LIST_SIZE	8
-#define XLINK_INVALID_LINK_ID		0xDEADBEEF
-#define XLINK_INVALID_SW_DEVICE_ID	0xDEADBEEF
+#define XLINK_MAX_BUF_SIZE		   128U
+#define XLINK_MAX_DATA_SIZE		   (1024U * 1024U * 1024U)
+#define XLINK_MAX_CONTROL_DATA_SIZE	   100U
+#define XLINK_MAX_CONTROL_DATA_PCIE_SIZE   100U
+#define XLINK_MAX_CONNECTIONS		   16
+#define XLINK_PACKET_ALIGNMENT		   64
+#define XLINK_INVALID_EVENT_ID		   0xDEADBEEF
+#define XLINK_INVALID_CHANNEL_ID	   0xDEAD
+#define XLINK_PACKET_QUEUE_CAPACITY	   10000
+#define XLINK_EVENT_QUEUE_CAPACITY	   10000
+#define XLINK_EVENT_HEADER_MAGIC	   0x786C6E6B
+#define XLINK_PING_TIMEOUT_MS		   5000U
+#define XLINK_MAX_DEVICE_NAME_SIZE	   128
+#define XLINK_MAX_DEVICE_LIST_SIZE	   8
+#define XLINK_INVALID_LINK_ID		   0xDEADBEEF
+#define XLINK_INVALID_SW_DEVICE_ID	   0xDEADBEEF
 
-#define NMB_CHANNELS			4096
-#define IP_CONTROL_CHANNEL		0x0A
-#define VPU_CONTROL_CHANNEL		0x400
-#define CONTROL_CHANNEL_OPMODE		RXB_TXB	// blocking
-#define CONTROL_CHANNEL_DATASIZE	128U	// size of internal rx/tx buffers
-#define CONTROL_CHANNEL_TIMEOUT_MS	0U	// wait indefinitely
-#define SIGXLNK				44	// signal XLink uses for callback signalling
+#define NMB_CHANNELS			   4096
+#define IP_CONTROL_CHANNEL		   0x0A
+#define VPU_CONTROL_CHANNEL		   0x400
+#define CONTROL_CHANNEL_OPMODE		   RXB_TXB	// blocking
+#define CONTROL_CHANNEL_DATASIZE	   128U	// size of internal rx/tx buffers
+#define CONTROL_CHANNEL_TIMEOUT_MS	   0U	// wait indefinitely
+#define SIGXLNK				   44	// signal XLink uses for callback signalling
 
 #define UNUSED(x) ((void)(x))
 
@@ -128,7 +129,7 @@ struct xlink_event_header {
 	u32 chan;
 	size_t size;
 	u32 timeout;
-	u8  control_data[XLINK_MAX_CONTROL_DATA_SIZE];
+	u8  control_data[XLINK_MAX_CONTROL_DATA_PCIE_SIZE];
 };
 
 struct xlink_event {
diff --git a/drivers/misc/xlink-core/xlink-ioctl.c b/drivers/misc/xlink-core/xlink-ioctl.c
index 7822a7b35bb6..3fe832310761 100644
--- a/drivers/misc/xlink-core/xlink-ioctl.c
+++ b/drivers/misc/xlink-core/xlink-ioctl.c
@@ -153,7 +153,7 @@ int ioctl_write_control_data(unsigned long arg)
 {
 	struct xlink_handle	devh	= {};
 	struct xlinkwritedata	wr	= {};
-	u8 volbuf[XLINK_MAX_BUF_SIZE];
+	u8 volbuf[XLINK_MAX_CONTROL_DATA_PCIE_SIZE];
 	int rc = 0;
 
 	if (copy_from_user(&wr, (void __user *)arg,
@@ -162,7 +162,7 @@ int ioctl_write_control_data(unsigned long arg)
 	if (copy_from_user(&devh, (void __user *)wr.handle,
 			   sizeof(struct xlink_handle)))
 		return -EFAULT;
-	if (wr.size > XLINK_MAX_CONTROL_DATA_SIZE)
+	if (wr.size > XLINK_MAX_CONTROL_DATA_PCIE_SIZE)
 		return -EFAULT;
 	if (copy_from_user(volbuf, (void __user *)wr.pmessage, wr.size))
 		return -EFAULT;
-- 
2.27.0

