From cde4189f644fbf5b869eccc52dd28b900965e7a6 Mon Sep 17 00:00:00 2001
From: "MP, Sureshkumar" <sureshkumar.mp@intel.com>
Date: Tue, 18 May 2021 15:12:59 +0530
Subject: [PATCH 014/170] dt-bindings: reset: Add Intel Thunder Bay reset
 dt-bindings

Add support for Intel Thunder Bay SoC's peripherals
reset controller dt-bindings. Also it provides the list of reset ids for
different sub-systems available in the SoC and these ids
shall be used by devices nodes to perform reset operations.

Signed-off-by: MP, Sureshkumar <sureshkumar.mp@intel.com>
---
 .../reset/intel,thunderbay-reset.yaml         | 146 ++++++++++++++++++
 include/dt-bindings/reset/thunderbay-reset.h  |  99 ++++++++++++
 2 files changed, 245 insertions(+)
 create mode 100644 Documentation/devicetree/bindings/reset/intel,thunderbay-reset.yaml
 create mode 100644 include/dt-bindings/reset/thunderbay-reset.h

diff --git a/Documentation/devicetree/bindings/reset/intel,thunderbay-reset.yaml b/Documentation/devicetree/bindings/reset/intel,thunderbay-reset.yaml
new file mode 100644
index 000000000000..df97174c8db2
--- /dev/null
+++ b/Documentation/devicetree/bindings/reset/intel,thunderbay-reset.yaml
@@ -0,0 +1,146 @@
+# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
+%YAML 1.2
+---
+$id: http://devicetree.org/schemas/reset/intel,thunderbay-reset.yaml#
+$schema: http://devicetree.org/meta-schemas/core.yaml#
+
+title: Intel, Thunder Bay Peripheral Reset Controller Device Tree Bindings
+
+maintainers:
+  - MP Sureshkumar <sureshkumar.mp@intel.com>
+  - Shruthi Sanil <shruthi.sanil@intel.com>
+
+properties:
+  compatible:
+    enum:
+      - intel,thunderbay-comss-rst
+      - intel,thunderbay-cpuss-rst
+      - intel,thunderbay-memss-rst
+      - intel,thunderbay-pcie-rst
+      - intel,thunderbay-pss-rst1
+      - intel,thunderbay-pss-rst2
+
+  reg:
+    description: |
+      Physical base address and length of Reset registers.
+      It contains 4 unsigned 32-bit integer. The first 2 integers
+      combine to become an unsigned 64-bit physical address.
+      The last 2 integers combine the length of the reset registers memory.
+    maxItems: 1
+
+  "#reset-cells":
+    const: 1
+    description: |
+      This additional argument passed to that reset controller is the
+      offset of the bit controlling this particular reset line in the
+      register.
+
+required:
+  - compatible
+  - reg
+  - "#reset-cells"
+
+additionalProperties: false
+
+examples:
+  - |
+    rst {
+        #address-cells = <2>;
+        #size-cells = <2>;
+
+        rst_cpuss: reset-controller@88830040 {
+          compatible = "intel,thunderbay-cpuss-rst";
+          reg = <0x0 0x88830040 0x0 0x10>;
+          #reset-cells = <1>;
+        };
+
+        rst_pss1: reset-controller@80430000 {
+          compatible = "intel,thunderbay-pss-rst1";
+          reg = <0x0 0x80430000 0x0 0x10404>;
+          #reset-cells = <1>;
+        };
+
+        rst_pss2: reset-controller@80441000 {
+          compatible = "intel,thunderbay-pss-rst2";
+          reg = <0x0 0x80441000 0x0 0xE004>;
+          #reset-cells = <1>;
+        };
+
+        rst_pcie: reset-controller@82800000 {
+          compatible = "intel,thunderbay-pcie-rst";
+          reg = <0x0 0x82800000 0x0 0x10>;
+          #reset-cells = <1>;
+        };
+
+        rst_comss0: reset-controller@185520000 {
+          compatible = "intel,thunderbay-comss-rst";
+          reg = <0x1 0x85520000 0x0 0x1010>;
+          #reset-cells = <1>;
+        };
+
+        rst_comss1: reset-controller@285520000 {
+          compatible = "intel,thunderbay-comss-rst";
+          reg = <0x2 0x85520000 0x0 0x1010>;
+          #reset-cells = <1>;
+        };
+
+        rst_comss2: reset-controller@385520000 {
+          compatible = "intel,thunderbay-comss-rst";
+          reg = <0x3 0x85520000 0x0 0x1010>;
+          #reset-cells = <1>;
+        };
+
+        rst_comss3: reset-controller@485520000 {
+          compatible = "intel,thunderbay-comss-rst";
+          reg = <0x4 0x85520000 0x0 0x1010>;
+          #reset-cells = <1>;
+        };
+
+        rst_memss0_0: reset-controller@184400000 {
+          compatible = "intel,thunderbay-memss-rst";
+          reg = <0x1 0x84400000 0x0 0x30>;
+          #reset-cells = <1>;
+        };
+
+        rst_memss0_1: reset-controller@184410000 {
+          compatible = "intel,thunderbay-memss-rst";
+          reg = <0x1 0x84410000 0x0 0x30>;
+          #reset-cells = <1>;
+        };
+
+        rst_memss1_0: reset-controller@284400000 {
+          compatible = "intel,thunderbay-memss-rst";
+          reg = <0x2 0x84400000 0x0 0x30>;
+          #reset-cells = <1>;
+        };
+
+        rst_memss1_1: reset-controller@284410000 {
+          compatible = "intel,thunderbay-memss-rst";
+          reg = <0x2 0x84410000 0x0 0x30>;
+          #reset-cells = <1>;
+        };
+
+        rst_memss2_0: reset-controller@384400000 {
+          compatible = "intel,thunderbay-memss-rst";
+          reg = <0x3 0x84400000 0x0 0x30>;
+          #reset-cells = <1>;
+        };
+
+        rst_memss2_1: reset-controller@384410000 {
+          compatible = "intel,thunderbay-memss-rst";
+          reg = <0x3 0x84410000 0x0 0x30>;
+          #reset-cells = <1>;
+        };
+
+        rst_memss3_0: reset-controller@484400000 {
+          compatible = "intel,thunderbay-memss-rst";
+          reg = <0x4 0x84400000 0x0 0x30>;
+          #reset-cells = <1>;
+        };
+
+        rst_memss3_1: reset-controller@484410000 {
+          compatible = "intel,thunderbay-memss-rst";
+          reg = <0x4 0x84410000 0x0 0x30>;
+          #reset-cells = <1>;
+        };
+    };
diff --git a/include/dt-bindings/reset/thunderbay-reset.h b/include/dt-bindings/reset/thunderbay-reset.h
new file mode 100644
index 000000000000..45f1750e8195
--- /dev/null
+++ b/include/dt-bindings/reset/thunderbay-reset.h
@@ -0,0 +1,99 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Intel Thunder Bay Harbor reset controllers
+ *
+ * Copyright (C) 2020 Intel Corporation
+ */
+
+#ifndef __DT_BINDINGS_THUNDERBAY_RESET_H__
+#define __DT_BINDINGS_THUNDERBAY_RESET_H__
+
+/* CPUSS reset ID's */
+#define TBH_CPUSS_OCS_RST				1
+
+/* PSS reset ID's */
+#define TBH_PSS_EFUSE_PRSTN				1
+#define TBH_PSS_GPIO_RST_N				2
+#define TBH_PSS_I2C_INST_0_RST_N			3
+#define TBH_PSS_I2C_INST_1_RST_N			4
+#define TBH_PSS_I2C_INST_2_RST_N			5
+#define TBH_PSS_I2C_INST_3_RST_N			6
+#define TBH_PSS_I2C_INST_4_RST_N			7
+#define TBH_PSS_UART_INST_0_RST_N			8
+#define TBH_PSS_UART_INST_1_RST_N			9
+#define TBH_PSS_EMMC_RST_N				10
+
+#define TBH_PSS_SSI_INST_0_RST_N			1
+#define TBH_PSS_SSI_INST_1_RST_N			2
+#define TBH_PSS_SMBUS_RST_N				3
+#define TBH_PSS_DMAC_INST_0_RST_N			4
+#define TBH_PSS_TRNG_RST_N				5
+#define TBH_PSS_ETHERNET_INST_0_RST_N			6
+#define TBH_PSS_ETHERNET_INST_1_RST_N			7
+#define TBH_PSS_DMAC_SECURE_RST_N			8
+
+/* PCIe reset ID's */
+#define TBH_PCIE_CTRL1_RST				1
+#define TBH_PCIE_CTRL0_RST				2
+#define TBH_PCIE_PHY_RST				3
+#define TBH_PCIE_SUBSYSTEM_RST				4
+#define TBH_PCIE_POWER_ON_RST				5
+
+/* COMSS reset ID's */
+#define TBH_COMSS_VPU_VPU_RESET_N			1
+#define TBH_COMSS_OCS_OCS_RESET_N			2
+#define TBH_COMSS_MEDIA_VCEJ_CORERST_N			3
+#define TBH_COMSS_MEDIA_VCEJ_ARESET_N			4
+#define TBH_COMSS_MEDIA_VCEJ_PRESET_N			5
+#define TBH_COMSS_MEDIA_VCE_CORERST_N			6
+#define TBH_COMSS_MEDIA_VCE_ARESET_N			7
+#define TBH_COMSS_MEDIA_VCE_PRESET_N			8
+#define TBH_COMSS_MEDIA_VCDA_CORERST_N			9
+#define TBH_COMSS_MEDIA_VCDA_ARESET_N			10
+#define TBH_COMSS_MEDIA_VCDA_PRESET_N			11
+#define TBH_COMSS_MEDIA_VCDB_CORERST_N			12
+#define TBH_COMSS_MEDIA_VCDB_ARESET_N			13
+#define TBH_COMSS_MEDIA_VCDB_PRESET_N			14
+#define TBH_COMSS_MEDIA_TBU0_ARESET_N			15
+#define TBH_COMSS_MEDIA_TBU1_ARESET_N			16
+#define TBH_COMSS_MEDIA_TBU2_ARESET_N			17
+#define TBH_COMSS_MEDIA_TBU3_ARESET_N			18
+#define TBH_COMSS_MEDIA_TBU4_ARESET_N			19
+#define TBH_COMSS_MEDIA_TCU_ARESET_N			20
+#define TBH_COMSS_MEDIA_DTI_ARESET_N			21
+#define TBH_COMSS_MEDIA_PVT_ARESET_N			22
+#define TBH_COMSS_MEDIA_PVT_PRESET_N			23
+
+/* MEMSS reset ID's */
+# define TBH_MEMSS_MC_MC_U1_CORE_DDRC_RSTN		1
+# define TBH_MEMSS_MC_MC_U2_CORE_DDRC_RSTN		2
+# define TBH_MEMSS_MC_MC_U1_SBR_RESETN			3
+# define TBH_MEMSS_MC_MC_U2_SBR_RESETN			4
+# define TBH_MEMSS_MC_MC_U1_ARESETN_0			5
+# define TBH_MEMSS_MC_MC_U2_ARESETN_0			6
+# define TBH_MEMSS_MC_MC_U1_PRESETN			7
+# define TBH_MEMSS_MC_MC_U2_PRESETN			8
+# define TBH_MEMSS_MC_MC_U1_SCAN_RESETN			9
+# define TBH_MEMSS_MC_MC_U2_SCAN_RESETN			10
+# define TBH_MEMSS_MC_PHY_U1_PRESETN_APB		11
+# define TBH_MEMSS_MC_PHY_U1_PWROKIN			12
+# define TBH_MEMSS_MC_PHY_U1_RESET			13
+# define TBH_MEMSS_MC_PHY_U1_WRSTN			14
+# define TBH_MEMSS_MC_DDRSS_APB_REGS_U1_I_PRESETN	15
+# define TBH_MEMSS_MC_DDRSS_APB_REGS_U1_I_RSTN		16
+# define TBH_MEMSS_MC_MC_COUNTER_TOP_U1_I_MCA_RSTN	17
+# define TBH_MEMSS_MC_MC_COUNTER_TOP_U1_I_MCB_RSTN	18
+# define TBH_MEMSS_MC_DDRSS_GLUE_U1_I_MCA_RSTN		19
+# define TBH_MEMSS_MC_DDRSS_GLUE_U1_I_MCB_RSTN		20
+# define TBH_MEMSS_PHY_PHY_U1_PRESETN_APB		21
+# define TBH_MEMSS_PHY_PHY_U1_PWROKIN			22
+# define TBH_MEMSS_PHY_PHY_U1_RESET			23
+# define TBH_MEMSS_PHY_PHY_U1_WRSTN			24
+# define TBH_MEMSS_MISC_DDRSS_APB_REGS_U1_I_PRESETN	25
+# define TBH_MEMSS_MISC_DDRSS_APB_REGS_U1_I_RSTN	26
+# define TBH_MEMSS_MISC_MC_COUNTER_TOP_U1_I_MCA_RSTN	27
+# define TBH_MEMSS_MISC_MC_COUNTER_TOP_U1_I_MCB_RSTN	28
+# define TBH_MEMSS_MISC_DDRSS_GLUE_U1_I_MCA_RSTN	29
+# define TBH_MEMSS_MISC_DDRSS_GLUE_U1_I_MCB_RSTN	30
+
+#endif
-- 
2.27.0

