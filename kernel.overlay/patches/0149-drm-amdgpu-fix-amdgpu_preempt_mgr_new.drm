From cdec2ff1bb6b8d1095be367a2206bf95cf197c7b Mon Sep 17 00:00:00 2001
From: Dan Carpenter <dan.carpenter@oracle.com>
Date: Fri, 18 Jun 2021 11:37:21 +0300
Subject: [PATCH 0149/1423] drm/amdgpu: fix amdgpu_preempt_mgr_new()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

There is a reversed if statement in amdgpu_preempt_mgr_new() so it
always returns -ENOMEM.

Fixes: 09b020bb05a5 ("Merge tag 'drm-misc-next-2021-06-09' of git://anongit.freedesktop.org/drm/drm-misc into drm-next")
Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Reviewed-by: Christian König <christian.koenig@amd.com>
Link: https://patchwork.freedesktop.org/patch/msgid/YMxbQXg/Wqm0ACxt@mwanda
Signed-off-by: Christian König <christian.koenig@amd.com>
---
 .../gpu/drm/amd/amdgpu/amdgpu_preempt_mgr.c   | 20 +++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_preempt_mgr.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_preempt_mgr.c
index d607f314cc1b..45f2c0450220 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_preempt_mgr.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_preempt_mgr.c
@@ -64,17 +64,21 @@ static DEVICE_ATTR_RO(mem_info_preempt_used);
  * Dummy, just count the space used without allocating resources or any limit.
  */
 static int amdgpu_preempt_mgr_new(struct ttm_resource_manager *man,
-				  struct ttm_buffer_object *tbo,
-				  const struct ttm_place *place,
-				  struct ttm_resource *mem)
+                                  struct ttm_buffer_object *tbo,
+                                  const struct ttm_place *place,
+                                  struct ttm_resource **res)
 {
-	struct amdgpu_preempt_mgr *mgr = to_preempt_mgr(man);
+        struct amdgpu_preempt_mgr *mgr = to_preempt_mgr(man);
 
-	atomic64_add(mem->num_pages, &mgr->used);
+        *res = kzalloc(sizeof(**res), GFP_KERNEL);
+        if (!*res)
+                return -ENOMEM;
 
-	mem->mm_node = NULL;
-	mem->start = AMDGPU_BO_INVALID_OFFSET;
-	return 0;
+        ttm_resource_init(tbo, place, *res);
+        (*res)->start = AMDGPU_BO_INVALID_OFFSET;
+
+        atomic64_add((*res)->num_pages, &mgr->used);
+        return 0;
 }
 
 /**
-- 
2.27.0

