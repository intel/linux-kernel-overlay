From 76e7015309fff5ddb950fb66c4e3c2d6dfaf8d99 Mon Sep 17 00:00:00 2001
From: Mika Westerberg <mika.westerberg@linux.intel.com>
Date: Tue, 16 Mar 2021 15:06:03 +0200
Subject: [PATCH 08/24] thunderbolt: keep count of DP IN adapters in the domain

In order to perform more accurate credit (buffer) allocation we need to
know how many DP IN adapters the domain currently has. This information
can be used to estimate how many DP tunnels we can establish and then
how many credits we need to allocate for DP tunneling.

Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
---
 drivers/thunderbolt/tb.c    | 8 +++++++-
 include/linux/thunderbolt.h | 2 ++
 2 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/thunderbolt/tb.c b/drivers/thunderbolt/tb.c
index 7e6dc2b03bed..3c695525c3ff 100644
--- a/drivers/thunderbolt/tb.c
+++ b/drivers/thunderbolt/tb.c
@@ -81,6 +81,7 @@ static void tb_add_dp_resources(struct tb_switch *sw)
 			continue;
 
 		list_add_tail(&port->list, &tcm->dp_resources);
+		sw->tb->ndpin++;
 		tb_port_dbg(port, "DP IN resource available\n");
 	}
 }
@@ -98,7 +99,12 @@ static void tb_remove_dp_resources(struct tb_switch *sw)
 
 	list_for_each_entry_safe(port, tmp, &tcm->dp_resources, list) {
 		if (port->sw == sw) {
-			tb_port_dbg(port, "DP OUT resource unavailable\n");
+			if (tb_port_is_dpin(port)) {
+				sw->tb->ndpin--;
+				tb_port_dbg(port, "DP IN resource unavailable\n");
+			} else {
+				tb_port_dbg(port, "DP OUT resource unavailable\n");
+			}
 			list_del_init(&port->list);
 		}
 	}
diff --git a/include/linux/thunderbolt.h b/include/linux/thunderbolt.h
index e7c96c37174f..85ff1c03632f 100644
--- a/include/linux/thunderbolt.h
+++ b/include/linux/thunderbolt.h
@@ -70,6 +70,7 @@ enum tb_security_level {
  * @index: Linux assigned domain number
  * @security_level: Current security level
  * @nboot_acl: Number of boot ACLs the domain supports
+ * @ndpin: Number of usable DP IN adapters in the domain (SW CM only)
  * @privdata: Private connection manager specific data
  */
 struct tb {
@@ -83,6 +84,7 @@ struct tb {
 	int index;
 	enum tb_security_level security_level;
 	size_t nboot_acl;
+	size_t ndpin;
 	unsigned long privdata[];
 };
 
-- 
2.27.0

