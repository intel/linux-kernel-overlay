From 583cde4abd60329a95d41c2e218df65d061c629f Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Wed, 3 Feb 2021 11:49:30 -0800
Subject: [PATCH 24/72] sched/fair: Carve out logic to check if local group can
 pull misfit tasks

The logic used identify a scheduling group of type group_misfit_task
as busiest does not consider cases in which either the local or the
busiest group have SMT siblings. A subsequent changeset will introduce
such logic. In preparation for such logic, carve out the existing logic
into a separate function. No functional changes are introduced.

Cc: Andi Kleen <ak@linux.intel.com>
Cc: Aubrey Li <aubrey.li@linux.intel.com>
Cc: Len Brown <len.brown@intel.com>
Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Cc: Tim Chen <tim.c.chen@linux.intel.com>
Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
Changes since v5:
  * Introduced this patch.

Changes since v4:
  * N/A

Changes since v3:
  * N/A

Changes since v2:
  * N/A

Changes since v1:
  * N/A
---
 kernel/sched/fair.c | 28 ++++++++++++++++++++++++++--
 1 file changed, 26 insertions(+), 2 deletions(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index cc1e16e790dd..658b9b874f83 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -8618,6 +8618,31 @@ static inline void update_sg_lb_stats(struct lb_env *env,
 				sgs->group_capacity;
 }
 
+/**
+ * can_pull_misfit_tasks - Check if the local group can pull misfit tasks
+ *
+ * @env:		The load balancing environment
+ * @candidate:		A sched_group candidate to be identified as busiest
+ * @candidate_sgs:	Load-balancing statistics of @candidate
+ * @sds:		Load-balancing statistics of the balancing domain
+ *
+ * Compare the status of the load-balancing local group and @candidate
+ * Return %true if the local group meets the conditions to pull misfit tasks
+ * from @candidate.
+ */
+static bool can_pull_misfit_tasks(struct lb_env *env,
+				  struct sched_group *candidate,
+				  struct sg_lb_stats *candidate_sgs,
+				  struct sd_lb_stats *sds)
+{
+	if (sds->local_stat.group_type != group_has_spare)
+		return false;
+
+	/* If the local group has bigger CPUs, it can pull tasks. */
+	return capacity_greater(capacity_of(env->dst_cpu),
+				candidate->sgc->max_capacity);
+}
+
 /**
  * update_sd_pick_busiest - return 1 on busiest group
  * @env: The load balancing environment.
@@ -8649,8 +8674,7 @@ static bool update_sd_pick_busiest(struct lb_env *env,
 	 * internally or be covered by avg_load imbalance (eventually).
 	 */
 	if (sgs->group_type == group_misfit_task &&
-	    (!capacity_greater(capacity_of(env->dst_cpu), sg->sgc->max_capacity) ||
-	     sds->local_stat.group_type != group_has_spare))
+	    !can_pull_misfit_tasks(env, sg, sgs, sds))
 		return false;
 
 	if (sgs->group_type > busiest->group_type)
-- 
2.27.0

