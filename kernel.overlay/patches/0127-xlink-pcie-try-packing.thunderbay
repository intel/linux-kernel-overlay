From a7198c4b00fff37a02c6134cbcb10cff4611bdf7 Mon Sep 17 00:00:00 2001
From: Shashank A P <shashankx.ap@intel.com>
Date: Wed, 14 Apr 2021 16:27:27 +0530
Subject: [PATCH 127/170] xlink-pcie: try packing

try packing in xlink-pcie level

Signed-off-by: Shashank A P <shashankx.ap@intel.com>
---
 drivers/misc/xlink-pcie/common/util.c      | 23 ++++++++++++++++++++++
 drivers/misc/xlink-pcie/common/util.h      |  2 ++
 drivers/misc/xlink-pcie/local_host/core.c  |  6 ++++++
 drivers/misc/xlink-pcie/remote_host/core.c |  6 ++++++
 4 files changed, 37 insertions(+)

diff --git a/drivers/misc/xlink-pcie/common/util.c b/drivers/misc/xlink-pcie/common/util.c
index 8b3da57540f3..dd1c36a79e6b 100644
--- a/drivers/misc/xlink-pcie/common/util.c
+++ b/drivers/misc/xlink-pcie/common/util.c
@@ -9,6 +9,9 @@
 
 #include "util.h"
 
+/*Set the PCIE TX queue threashold when try packing*/
+#define PACKING_QUEUE_DEPTH  (1)
+
 void intel_xpcie_set_device_status(struct xpcie *xpcie, u32 status)
 {
 	xpcie->status = status;
@@ -449,3 +452,23 @@ void *intel_xpcie_cap_find(struct xpcie *xpcie, u32 start, u16 id)
 	/* If we reached here, the capability list is corrupted */
 	return NULL;
 }
+
+bool intel_xpcie_list_try_packing(struct xpcie_list *list, void *data, size_t size)
+{
+	struct xpcie_buf_desc *bd_tail;
+	bool is_packed = false;
+
+	spin_lock(&list->lock);
+	if (list->tail && list->buffers >= PACKING_QUEUE_DEPTH) {
+		bd_tail = list->tail;
+		if ((bd_tail->length + size) <= bd_tail->true_len) {
+			memcpy((bd_tail->data + bd_tail->length), data, size);
+			bd_tail->length += size;
+			list->bytes += size;
+			is_packed = true;
+		}
+	}
+
+	spin_unlock(&list->lock);
+	return is_packed;
+}
diff --git a/drivers/misc/xlink-pcie/common/util.h b/drivers/misc/xlink-pcie/common/util.h
index 8486ad853269..1300779f8b63 100644
--- a/drivers/misc/xlink-pcie/common/util.h
+++ b/drivers/misc/xlink-pcie/common/util.h
@@ -77,4 +77,6 @@ int intel_xpcie_interfaces_init(struct xpcie *xpcie);
 void intel_xpcie_add_bd_to_interface(struct xpcie *xpcie,
 				     struct xpcie_buf_desc *bd);
 void *intel_xpcie_cap_find(struct xpcie *xpcie, u32 start, u16 id);
+bool intel_xpcie_list_try_packing(struct xpcie_list *list, void *data,
+					size_t size);
 #endif /* XPCIE_UTIL_HEADER_ */
diff --git a/drivers/misc/xlink-pcie/local_host/core.c b/drivers/misc/xlink-pcie/local_host/core.c
index 4e74c853f459..b01183484556 100644
--- a/drivers/misc/xlink-pcie/local_host/core.c
+++ b/drivers/misc/xlink-pcie/local_host/core.c
@@ -696,6 +696,12 @@ int intel_xpcie_core_write(struct xpcie *xpcie, void *buffer,
 	if (ret < 0)
 		return -EINTR;
 
+	if (intel_xpcie_list_try_packing(&xpcie->write, buffer, len)) {
+		*length = len;
+		mutex_unlock(&xpcie->wlock);
+		return 0;
+	}
+
 	do {
 		bd = intel_xpcie_alloc_tx_bd(xpcie);
 		head = bd;
diff --git a/drivers/misc/xlink-pcie/remote_host/core.c b/drivers/misc/xlink-pcie/remote_host/core.c
index 9d58e7d652eb..786dfa78ca7b 100644
--- a/drivers/misc/xlink-pcie/remote_host/core.c
+++ b/drivers/misc/xlink-pcie/remote_host/core.c
@@ -562,6 +562,12 @@ int intel_xpcie_core_write(struct xpcie *xpcie, void *buffer, size_t *length,
 	if (ret < 0)
 		return -EINTR;
 
+	if (intel_xpcie_list_try_packing(&xpcie->write, buffer, len)) {
+		*length = len;
+		mutex_unlock(&xpcie->wlock);
+		return 0;
+	}
+
 	do {
 		bd = intel_xpcie_alloc_tx_bd(xpcie);
 		head = bd;
-- 
2.27.0

