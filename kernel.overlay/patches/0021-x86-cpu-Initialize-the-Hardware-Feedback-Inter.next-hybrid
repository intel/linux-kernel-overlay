From 76bed48d3d05e879579054cc883a1bf6536f3724 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Tue, 5 Jan 2021 18:06:11 -0800
Subject: [PATCH 21/72] x86/cpu: Initialize the Hardware Feedback Interface CPU
 index

The Hardware Feedback Table contains an entry (i.e., a row) for each CPU
in the system. A CPUID leaf provides such index to such entry for each
CPU. Therefore, the index is only known when a CPU comes online, at boot
or afterwards). Implement functionality read the index in the HFI table at
SMP boot.

Cc: Andi Kleen <ak@linux.intel.com>
Cc: Aubrey Li <aubrey.li@linux.intel.com>
Cc: Len Brown <len.brown@intel.com>
Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Cc: Tim Chen <tim.c.chen@linux.intel.com>
Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
Suggested-by: Len Brown <len.brown@intel.com>
Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
Changes since v4:
  * Introduced this patch.

Changes since v3:
  * N/A

Changes since v2:
  * N/A

Changes since v1:
  * N/A
---
 arch/x86/include/asm/hfi.h    |  6 ++++++
 arch/x86/kernel/cpu/common.c  |  3 +++
 arch/x86/platform/intel/hfi.c | 28 ++++++++++++++++++++++++++++
 3 files changed, 37 insertions(+)

diff --git a/arch/x86/include/asm/hfi.h b/arch/x86/include/asm/hfi.h
index 3c76aac72741..8b20712004b6 100644
--- a/arch/x86/include/asm/hfi.h
+++ b/arch/x86/include/asm/hfi.h
@@ -24,4 +24,10 @@
 #define HFI_CAPABILITIES_PERFORMANCE	BIT(0)
 #define HFI_CAPABILITIES_ENERGY_EFF	BIT(1)
 
+#if defined(CONFIG_INTEL_HFI)
+void hfi_setup_cpu(struct cpuinfo_x86 *c);
+#else
+static inline void hfi_setup_cpu(struct cpuinfo_x86 *c) { }
+#endif
+
 #endif /* _ASM_X86_INTEL_HFI_H */
diff --git a/arch/x86/kernel/cpu/common.c b/arch/x86/kernel/cpu/common.c
index a1b756c49a93..505ad8dfa8d8 100644
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@ -50,6 +50,7 @@
 #include <asm/asm.h>
 #include <asm/bugs.h>
 #include <asm/cpu.h>
+#include <asm/hfi.h>
 #include <asm/mce.h>
 #include <asm/msr.h>
 #include <asm/memtype.h>
@@ -1623,6 +1624,8 @@ static void identify_cpu(struct cpuinfo_x86 *c)
 #ifdef CONFIG_NUMA
 	numa_add_cpu(smp_processor_id());
 #endif
+
+	hfi_setup_cpu(c);
 }
 
 /*
diff --git a/arch/x86/platform/intel/hfi.c b/arch/x86/platform/intel/hfi.c
index 5542a92abba4..fa17b232ee00 100644
--- a/arch/x86/platform/intel/hfi.c
+++ b/arch/x86/platform/intel/hfi.c
@@ -63,8 +63,36 @@ struct hfi_params {
 	unsigned int	cpu_stride;
 };
 
+/* CPU's indexes (i.e., rows) in the HFI table */
+static DEFINE_PER_CPU(s16, hfi_cpu_index) = -1;
+
 static struct hfi_params hfi_params;
 
+/**
+ * hfi_setup_cpu - Setup per-CPU HFI data for @cpu
+ *
+ * @cpu:	CPU for which per-CPU data is being setup. Specifically,
+ *		it sets the index (i.e., the row) in the HFI table that
+ *		contains the capabilities of @cpu.
+ */
+void hfi_setup_cpu(struct cpuinfo_x86 *c)
+{
+	s16 hfi_idx;
+	u32 edx;
+
+	if (!cpu_feature_enabled(X86_FEATURE_INTEL_HFI))
+		return;
+
+	/* Do not re-read this CPU's index if it has been initialized. */
+	if (per_cpu(hfi_cpu_index, c->cpu_index) > -1)
+		return;
+
+	edx = cpuid_edx(CPUID_HFI_LEAF);
+	hfi_idx = (edx & CPUID_HFI_CPU_INDEX_MASK) >> CPUID_HFI_CPU_INDEX_SHIFT;
+
+	per_cpu(hfi_cpu_index, c->cpu_index) = hfi_idx;
+}
+
 /*
  * The format of the HFI table depends on the number of capabilities that the
  * hardware supports. Keep a data structure to navigate the table.
-- 
2.27.0

