From fcc99a66c75b6847974250304f3f585bbef09853 Mon Sep 17 00:00:00 2001
From: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
Date: Tue, 22 Jun 2021 11:57:12 +0800
Subject: [PATCH 111/122] igc: New launchtime calculation

In this new calculation, ktime_get_clocktai() will be use as approximation
current time value in the sense of PTP clock are synchronized.

Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
---
 drivers/net/ethernet/intel/igc/igc_main.c | 25 +++++++++++++----------
 drivers/net/ethernet/intel/igc/igc_tsn.c  |  2 +-
 2 files changed, 15 insertions(+), 12 deletions(-)

diff --git a/drivers/net/ethernet/intel/igc/igc_main.c b/drivers/net/ethernet/intel/igc/igc_main.c
index e5ee7340606f..2954952575d8 100644
--- a/drivers/net/ethernet/intel/igc/igc_main.c
+++ b/drivers/net/ethernet/intel/igc/igc_main.c
@@ -991,19 +991,22 @@ static int igc_write_mc_addr_list(struct net_device *netdev)
 
 static __le32 igc_tx_launchtime(struct igc_adapter *adapter, ktime_t txtime)
 {
-	ktime_t cycle_time = adapter->cycle_time;
-	ktime_t base_time = adapter->base_time;
-	u32 launchtime;
-
-	/* FIXME: when using ETF together with taprio, we may have a
-	 * case where 'delta' is larger than the cycle_time, this may
-	 * cause problems if we don't read the current value of
-	 * IGC_BASET, as the value writen into the launchtime
-	 * descriptor field may be misinterpreted.
+	ktime_t now = ktime_get_clocktai();
+	struct timespec64 launchtime;
+	ktime_t baset_est;
+	s64 n;
+
+	n = div64_s64(ktime_sub_ns(now, adapter->base_time), adapter->cycle_time);
+
+	/* The BASET registers are increased by cycle-time everytime
+	 * value of systim registers(SYSTIM) cross the current system time,
+	 * so they point to a time one cycle in the future
 	 */
-	div_s64_rem(ktime_sub_ns(txtime, base_time), cycle_time, &launchtime);
+	baset_est = ktime_add_ns(adapter->base_time, adapter->cycle_time * (n + 1));
+	baset_est = ktime_sub_ns(txtime, baset_est);
+	launchtime = ktime_to_timespec64(baset_est);
 
-	return cpu_to_le32(launchtime);
+	return cpu_to_le32(launchtime.tv_nsec);
 }
 
 static void igc_tx_ctxtdesc(struct igc_ring *tx_ring,
diff --git a/drivers/net/ethernet/intel/igc/igc_tsn.c b/drivers/net/ethernet/intel/igc/igc_tsn.c
index f845316d67f2..1dde53f60c8a 100644
--- a/drivers/net/ethernet/intel/igc/igc_tsn.c
+++ b/drivers/net/ethernet/intel/igc/igc_tsn.c
@@ -116,7 +116,7 @@ static int igc_tsn_enable_offload(struct igc_adapter *adapter)
 		s64 n;
 
 		n = div64_s64(ktime_sub_ns(systim, base_time), cycle);
-		base_time = ktime_add_ns(base_time, (n + 1) * cycle);
+		base_time = ktime_add_ns(base_time, n * cycle);
 	}
 
 	baset_h = div_s64_rem(base_time, NSEC_PER_SEC, &baset_l);
-- 
2.17.1

