From bd8c7120c481ebe8e2e40e6b9308d689f8adfff7 Mon Sep 17 00:00:00 2001
From: Ng Khai Wen <khai.wen.ng@intel.com>
Date: Thu, 1 Jul 2021 15:34:56 +0800
Subject: [PATCH 37/48] media: ti960: remove crlmodule dependency

Change Description:
crlmodule platform data structure used by ti960,
define ti960 structure instead, to remove the depends.

Signed-off-by: Chen Meng J <meng.j.chen@intel.com>
Signed-off-by: Ng Khai Wen <khai.wen.ng@intel.com>
---
 drivers/media/i2c/ti960-des.c                 | 17 ++++----
 .../media/platform/intel/ipu6-tglrvp-pdata.c  | 11 +++---
 include/media/ti960.h                         | 39 +++++++++++++++++++
 3 files changed, 53 insertions(+), 14 deletions(-)

diff --git a/drivers/media/i2c/ti960-des.c b/drivers/media/i2c/ti960-des.c
index c90b266fcc1cb..6f0b9d1301ac1 100644
--- a/drivers/media/i2c/ti960-des.c
+++ b/drivers/media/i2c/ti960-des.c
@@ -13,7 +13,6 @@
 #include <media/media-device.h>
 #include <media/media-entity.h>
 #include <media/ti960.h>
-#include <media/crlmodule.h>
 #include <media/v4l2-device.h>
 #include <media/videobuf2-core.h>
 
@@ -36,7 +35,7 @@ struct ti960 {
 	struct v4l2_ctrl_handler ctrl_handler;
 	struct ti960_pdata *pdata;
 	struct ti960_subdev sub_devs[NR_OF_TI960_SINK_PADS];
-	struct crlmodule_platform_data subdev_pdata[NR_OF_TI960_SINK_PADS];
+	struct ti960_subdev_pdata subdev_pdata[NR_OF_TI960_SINK_PADS];
 	const char *name;
 
 	struct mutex mutex;
@@ -641,8 +640,8 @@ static int ti960_registered(struct v4l2_subdev *subdev)
 	for (i = 0, k = 0; i < va->pdata->subdev_num; i++) {
 		struct ti960_subdev_info *info =
 			&va->pdata->subdev_info[i];
-		struct crlmodule_platform_data *pdata =
-			(struct crlmodule_platform_data *)
+		struct ti960_subdev_pdata *pdata =
+			(struct ti960_subdev_pdata *)
 			info->board_info.platform_data;
 
 		if (k >= va->nsinks)
@@ -692,18 +691,18 @@ static int ti960_registered(struct v4l2_subdev *subdev)
 				TI953_RESET_CTL, TI953_DIGITAL_RESET_1);
 		msleep(50);
 
-		if (va->subdev_pdata[k].module_flags & CRL_MODULE_FL_INIT_SER) {
+		if (va->subdev_pdata[k].module_flags & TI960_FL_INIT_SER) {
 			rval = ti953_init(&va->sd, info->rx_port, info->ser_alias);
 			if (rval)
 				return rval;
 		}
 
-		if (va->subdev_pdata[k].module_flags & CRL_MODULE_FL_POWERUP) {
+		if (va->subdev_pdata[k].module_flags & TI960_FL_POWERUP) {
 			ti953_reg_write(&va->sd, info->rx_port, info->ser_alias,
 					TI953_GPIO_INPUT_CTRL, TI953_GPIO_OUT_EN);
 
 			/* boot sequence */
-			for (m = 0; m < CRL_MAX_GPIO_POWERUP_SEQ; m++) {
+			for (m = 0; m < TI960_MAX_GPIO_POWERUP_SEQ; m++) {
 				if (va->subdev_pdata[k].gpio_powerup_seq[m] < 0)
 					break;
 				ti953_reg_write(&va->sd, info->rx_port, info->ser_alias,
@@ -1003,7 +1002,7 @@ static int ti960_set_stream(struct v4l2_subdev *subdev, int enable)
 					i, enable);
 				return rval;
 			}
-			if (va->subdev_pdata[j].module_flags & CRL_MODULE_FL_RESET) {
+			if (va->subdev_pdata[j].module_flags & TI960_FL_RESET) {
 				rval = reset_sensor(va, rx_port, ser_alias,
 						va->subdev_pdata[j].reset);
 				if (rval)
@@ -1045,7 +1044,7 @@ static int ti960_set_stream(struct v4l2_subdev *subdev, int enable)
 					return rval;
 				}
 
-				if (va->subdev_pdata[i].module_flags & CRL_MODULE_FL_RESET) {
+				if (va->subdev_pdata[i].module_flags & TI960_FL_RESET) {
 					rx_port = va->sub_devs[i].rx_port;
 					ser_alias = va->sub_devs[i].ser_i2c_addr;
 					rval = reset_sensor(va, rx_port, ser_alias,
diff --git a/drivers/media/platform/intel/ipu6-tglrvp-pdata.c b/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
index ddd226f7e2eed..34c0d357c5114 100644
--- a/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
+++ b/drivers/media/platform/intel/ipu6-tglrvp-pdata.c
@@ -8,7 +8,6 @@
 
 #include <media/ipu-isys.h>
 
-#include <media/crlmodule.h>
 #include <media/ti960.h>
 #include <media/ar0234.h>
 #include <media/imx390.h>
@@ -176,17 +175,17 @@ static struct ipu_isys_subdev_info ar0234_sd_4 = {
 #define IMX390C_SER_ADDRESS	0x42
 #define IMX390D_SER_ADDRESS	0x43
 
-static struct crlmodule_platform_data imx390_d3rcm_pdata_stub = {
+static struct ti960_subdev_pdata imx390_d3rcm_pdata_stub = {
 	.lanes = 4,
 	.gpio_powerup_seq = {0, 0xa, -1, -1},
-	.module_flags = CRL_MODULE_FL_POWERUP,
+	.module_flags = TI960_FL_POWERUP,
 	.fsin = 0, /* gpio 0 used for FSIN */
 };
 
-static struct crlmodule_platform_data imx390_d3cm_pdata_stub = {
+static struct ti960_subdev_pdata imx390_d3cm_pdata_stub = {
 	.lanes = 4,
 	.gpio_powerup_seq = {0, 0x9, -1, -1},
-	.module_flags = CRL_MODULE_FL_POWERUP,
+	.module_flags = TI960_FL_POWERUP,
 	.fsin = 3, /* gpio 3 used for FSIN */
 };
 
@@ -201,6 +200,7 @@ static struct ipu_isys_csi2_config ti960_csi2_cfg_2 = {
 };
 
 static struct ti960_subdev_info ti960_subdevs[] = {
+#if IS_ENABLED(CONFIG_VIDEO_IMX390)
 	/* D3RCM */
 	{
 		.board_info = {
@@ -291,6 +291,7 @@ static struct ti960_subdev_info ti960_subdevs[] = {
 		.ser_alias = IMX390D_SER_ADDRESS,
 		.suffix = 'd',
 	},
+#endif
 };
 
 static struct ti960_pdata ti960_pdata = {
diff --git a/include/media/ti960.h b/include/media/ti960.h
index b63668ffd0add..80163922f2341 100644
--- a/include/media/ti960.h
+++ b/include/media/ti960.h
@@ -64,4 +64,43 @@ struct ti960_pdata {
 	const char suffix;
 };
 
+#define TI960_MAX_GPIO_POWERUP_SEQ        4
+
+/* set this flag if this module needs serializer initialization */
+#define TI960_FL_INIT_SER	BIT(0)
+/* set this flag if this module has extra powerup sequence */
+#define TI960_FL_POWERUP	BIT(1)
+/* set this flag if this module needs reset signal */
+#define TI960_FL_RESET	BIT(2)
+
+struct ti960_subdev_pdata {
+	unsigned short i2c_addr;
+	unsigned short i2c_adapter;
+
+	unsigned int lanes;		/* Number of CSI-2 lanes */
+
+	/* specify gpio pins of Deser for PWDN, FSIN, RESET. */
+	int xshutdown;
+	int fsin;
+	int reset;
+
+	/* specify gpio pins boot timing. */
+	/* Bit 3 write 0/1 on GPIO3
+	 * Bit 2 write 0/1 on GPIO2
+	 * Bit 1 write 0/1 on GPIO1
+	 * Bit 0 write 0/1 on GPIO0
+	 */
+	char gpio_powerup_seq[TI960_MAX_GPIO_POWERUP_SEQ];
+
+	/* module_flags can be:
+	 * TI960_FL_INIT_SER
+	 * TI960_FL_POWERUP
+	 * TI960_FL_RESET
+	 */
+	unsigned int module_flags;
+
+	char module_name[16]; /* module name from ACPI */
+	char suffix; /* suffix to identify multi sensors, abcd.. */
+};
+
 #endif
-- 
2.25.1

