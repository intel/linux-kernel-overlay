From 68b755616417334a9e40be4fe9f0373708b93f0e Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Mon, 15 Jun 2020 10:36:48 -0700
Subject: [PATCH 26/80] sched/topology: Introduce arch_has_hw_sched_feedback()

Some platforms have hardware that provides to the kernel dynamic feedback
about the performance and energy efficiency of CPUs in the system. Also,
these platforms have hardware-controlled performance states that update
the operation point of CPUs given their utilizations. These features
provide the same functionality as the schedutil frequency governor. Hence,
we use it as an alternative to it.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 include/linux/sched/topology.h |  8 ++++++++
 kernel/sched/topology.c        | 26 ++++++++++++++++----------
 2 files changed, 24 insertions(+), 10 deletions(-)

diff --git a/include/linux/sched/topology.h b/include/linux/sched/topology.h
index 8f0f778b7c91..ba6f6a824da4 100644
--- a/include/linux/sched/topology.h
+++ b/include/linux/sched/topology.h
@@ -266,6 +266,14 @@ void arch_set_thermal_pressure(const struct cpumask *cpus,
 { }
 #endif
 
+#ifndef arch_has_hw_sched_feedback
+static __always_inline
+bool arch_has_hw_sched_feedback(void)
+{
+	return false;
+}
+#endif
+
 static inline int task_node(const struct task_struct *p)
 {
 	return cpu_to_node(task_cpu(p));
diff --git a/kernel/sched/topology.c b/kernel/sched/topology.c
index eedbfd90ddfe..d9c0d0bdd24a 100644
--- a/kernel/sched/topology.c
+++ b/kernel/sched/topology.c
@@ -382,17 +382,23 @@ static bool build_perf_domains(const struct cpumask *cpu_map)
 		if (find_pd(pd, i))
 			continue;
 
-		/* Do not attempt EAS if schedutil is not being used. */
-		policy = cpufreq_cpu_get(i);
-		if (!policy)
-			goto free;
-		gov = policy->governor;
-		cpufreq_cpu_put(policy);
-		if (gov != &schedutil_gov) {
-			if (rd->pd)
-				pr_warn("rd %*pbl: Disabling EAS, schedutil is mandatory\n",
+		/*
+		 * Hardware-based performance states can be used instead
+		 * of schedutil.
+		 */
+		if (!arch_has_hw_sched_feedback()) {
+			/* Do not attempt EAS if schedutil is not being used. */
+			policy = cpufreq_cpu_get(i);
+			if (!policy)
+				goto free;
+			gov = policy->governor;
+			cpufreq_cpu_put(policy);
+			if (gov != &schedutil_gov) {
+				if (rd->pd)
+					pr_warn("rd %*pbl: Disabling EAS, schedutil is mandatory\n",
 						cpumask_pr_args(cpu_map));
-			goto free;
+				goto free;
+			}
 		}
 
 		/* Create the new pd and add it to the local list. */
-- 
2.27.0

