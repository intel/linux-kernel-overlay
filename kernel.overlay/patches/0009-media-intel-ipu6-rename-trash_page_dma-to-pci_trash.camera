From a1cb29cdff6ec7a155b19a613dfb9c2c6cfef267 Mon Sep 17 00:00:00 2001
From: Ng Khai Wen <khai.wen.ng@intel.com>
Date: Wed, 14 Jul 2021 13:34:16 +0800
Subject: [PATCH 09/14] media: intel-ipu6: rename trash_page_dma to
 pci_trash_page and add comments

Change Description:
rename trash_page_dma to pci_trash_page and add comments

Signed-off-by: Bingbu Cao <bingbu.cao@intel.com>
Signed-off-by: Ng Khai Wen <khai.wen.ng@intel.com>
---
 drivers/media/pci/intel/ipu-mmu.c | 10 +++++-----
 drivers/media/pci/intel/ipu-mmu.h |  4 ++--
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/media/pci/intel/ipu-mmu.c b/drivers/media/pci/intel/ipu-mmu.c
index 7d6e19278ee9..2fdf70730a86 100644
--- a/drivers/media/pci/intel/ipu-mmu.c
+++ b/drivers/media/pci/intel/ipu-mmu.c
@@ -390,7 +390,7 @@ static int allocate_trash_buffer(struct ipu_mmu *mmu)
 		goto out_free_iova;
 	}
 
-	mmu->trash_page_dma = dma;
+	mmu->pci_trash_page = dma;
 
 	/*
 	 * Map the 8MB iova address range to the same physical trash page
@@ -399,7 +399,7 @@ static int allocate_trash_buffer(struct ipu_mmu *mmu)
 	iova_addr = iova->pfn_lo;
 	for (i = 0; i < n_pages; i++) {
 		ret = ipu_mmu_map(mmu->dmap->mmu_info, iova_addr << PAGE_SHIFT,
-				  mmu->trash_page_dma, PAGE_SIZE);
+				  mmu->pci_trash_page, PAGE_SIZE);
 		if (ret) {
 			dev_err(mmu->dev,
 				"mapping trash buffer range failed\n");
@@ -417,7 +417,7 @@ static int allocate_trash_buffer(struct ipu_mmu *mmu)
 out_unmap:
 	ipu_mmu_unmap(mmu->dmap->mmu_info, iova->pfn_lo << PAGE_SHIFT,
 		      (iova->pfn_hi - iova->pfn_lo + 1) << PAGE_SHIFT);
-	dma_unmap_page(mmu->dmap->mmu_info->dev, mmu->trash_page_dma,
+	dma_unmap_page(mmu->dmap->mmu_info->dev, mmu->pci_trash_page,
 		       PAGE_SIZE, DMA_BIDIRECTIONAL);
 out_free_iova:
 	__free_iova(&mmu->dmap->iovad, iova);
@@ -762,9 +762,9 @@ static void ipu_mmu_destroy(struct ipu_mmu *mmu)
 		}
 
 		mmu->iova_trash_page = 0;
-		dma_unmap_page(mmu_info->dev, mmu->trash_page_dma,
+		dma_unmap_page(mmu_info->dev, mmu->pci_trash_page,
 			       PAGE_SIZE, DMA_BIDIRECTIONAL);
-		mmu->trash_page_dma = 0;
+		mmu->pci_trash_page = 0;
 		__free_page(mmu->trash_page);
 	}
 
diff --git a/drivers/media/pci/intel/ipu-mmu.h b/drivers/media/pci/intel/ipu-mmu.h
index ea9b54392aa4..5f55d6b831fa 100644
--- a/drivers/media/pci/intel/ipu-mmu.h
+++ b/drivers/media/pci/intel/ipu-mmu.h
@@ -52,8 +52,8 @@ struct ipu_mmu {
 	struct list_head vma_list;
 
 	struct page *trash_page;
-	dma_addr_t trash_page_dma;
-	dma_addr_t iova_trash_page;
+	dma_addr_t pci_trash_page; /* IOVA from PCI DMA services (parent) */
+	dma_addr_t iova_trash_page; /* IOVA for IPU child nodes to use */
 
 	bool ready;
 	spinlock_t ready_lock;	/* Serialize access to bool ready */
-- 
2.25.1

