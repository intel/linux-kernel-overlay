From 6f3ac538ac435e7f1fdd68d73be4d1d3ab903937 Mon Sep 17 00:00:00 2001
From: Andi Kleen <ak@linux.intel.com>
Date: Fri, 25 Jun 2021 16:15:11 -0700
Subject: [PATCH 45/82] Handle bus_register_notifier if bus is not initialized

This can happen with the driver filter. The psmouse subsystem assumed the
bus was initialized. Error out in this case. This fixes the following
boot crash inside TDX with the driver filter enabled:

serio: driver_register() failed for atkbd, error: -13
general protection fault, probably for non-canonical address 0xdffffc000000004f: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN NOPTI
KASAN: null-ptr-deref in range [0x0000000000000278-0x000000000000027f]
CPU: 3 PID: 1 Comm: swapper/0 Not tainted 5.13.0-rc4-00082-gaaefd4f370a6 #110
RIP: 0010:__lock_acquire+0xdef/0x2210
Code: c7 44 24 0c 01 00 00 00 0f 86 c6 00 00 00 89 05 67 12 2c 05 e9 bb 00 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 ea 48 c1 ea 03 <80> 3c 02 00 0f 85 52 10 00 00 49 81 7d 00 e0 f3 2d 86 0f 84 da f2
...
Call Trace:
 down_write+0x97/0x150
 blocking_notifier_chain_register+0x67/0xc0
 psmouse_smbus_module_init+0x1f/0x4f
 psmouse_init+0x1b/0xc1
 do_one_initcall+0xee/0x550
...

Signed-off-by: Andi Kleen <ak@linux.intel.com>
---
 drivers/base/bus.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/base/bus.c b/drivers/base/bus.c
index 36d0c654ea61..82b47876f983 100644
--- a/drivers/base/bus.c
+++ b/drivers/base/bus.c
@@ -883,12 +883,16 @@ EXPORT_SYMBOL_GPL(bus_unregister);
 
 int bus_register_notifier(struct bus_type *bus, struct notifier_block *nb)
 {
+	if (!bus->p)
+		return -EIO;
 	return blocking_notifier_chain_register(&bus->p->bus_notifier, nb);
 }
 EXPORT_SYMBOL_GPL(bus_register_notifier);
 
 int bus_unregister_notifier(struct bus_type *bus, struct notifier_block *nb)
 {
+	if (!bus->p)
+		return -EIO;
 	return blocking_notifier_chain_unregister(&bus->p->bus_notifier, nb);
 }
 EXPORT_SYMBOL_GPL(bus_unregister_notifier);
-- 
2.27.0

