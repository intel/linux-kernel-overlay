From 3591f58f759e7fe2ea29d8aa299ef5467b05f835 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Sat, 31 Oct 2020 13:51:01 -0700
Subject: [PATCH 71/76] DEBUG: proc: Make /proc/<pid>/classid writeable

This is useful to inject a classification value to a task.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 fs/proc/base.c | 25 ++++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

diff --git a/fs/proc/base.c b/fs/proc/base.c
index cdba67e323ea..25c2452d1e3a 100644
--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -392,8 +392,31 @@ static ssize_t proc_pid_classid_read(struct file *file, char __user *buf,
 	return simple_read_from_buffer(buf, count, pos, buffer, len);
 }
 
+static ssize_t proc_pid_classid_write(struct file *file,
+				      const char __user *buf,
+				      size_t count, loff_t *pos)
+{
+	struct task_struct *tsk;
+	unsigned int classid;
+	int err;
+
+	err = kstrtou32_from_user(buf, count, 10, &classid);
+	if (err)
+		return err;
+
+	tsk = get_proc_task(file_inode(file));
+	if (!tsk)
+		return -ESRCH;
+
+	tsk->classid = classid;
+	put_task_struct(tsk);
+
+	return sizeof(classid);
+}
+
 static const struct file_operations proc_pid_classid_ops = {
 	.read	= proc_pid_classid_read,
+	.write	= proc_pid_classid_write,
 };
 
 #ifdef CONFIG_KALLSYMS
@@ -3207,7 +3230,7 @@ static const struct pid_entry tgid_base_stuff[] = {
 	ONE("syscall",    S_IRUSR, proc_pid_syscall),
 #endif
 	REG("cmdline",    S_IRUGO, proc_pid_cmdline_ops),
-	REG("classid",    S_IRUGO, proc_pid_classid_ops),
+	REG("classid",    S_IRUGO|S_IWUSR, proc_pid_classid_ops),
 	ONE("stat",       S_IRUGO, proc_tgid_stat),
 	ONE("statm",      S_IRUGO, proc_pid_statm),
 	REG("maps",       S_IRUGO, proc_pid_maps_operations),
-- 
2.27.0

