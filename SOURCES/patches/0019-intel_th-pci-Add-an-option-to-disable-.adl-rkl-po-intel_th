From c1c06e3ee3e60763ebfc6fcff68ce4884f911f18 Mon Sep 17 00:00:00 2001
From: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date: Tue, 30 Jun 2020 10:53:04 +0300
Subject: [PATCH 19/23] intel_th: pci: Add an option to disable quirks

Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
---
 drivers/hwtracing/intel_th/pci.c | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

diff --git a/drivers/hwtracing/intel_th/pci.c b/drivers/hwtracing/intel_th/pci.c
index 7d134023a8bb..8235e71ee0c1 100644
--- a/drivers/hwtracing/intel_th/pci.c
+++ b/drivers/hwtracing/intel_th/pci.c
@@ -86,6 +86,14 @@ static void intel_th_pci_deactivate(struct intel_th *th)
 		dev_err(&pdev->dev, "failed to read NPKDSC register\n");
 }
 
+static const struct intel_th_drvdata intel_th_2x = {
+	.tscu_enable	= 1,
+	.has_mintctl	= 1,
+};
+
+static bool override_quirks;
+module_param(override_quirks, bool, 0644);
+
 static int intel_th_pci_probe(struct pci_dev *pdev,
 			      const struct pci_device_id *id)
 {
@@ -105,6 +113,11 @@ static int intel_th_pci_probe(struct pci_dev *pdev,
 	if (err)
 		return err;
 
+	if (override_quirks && drvdata) {
+		dev_info(&pdev->dev, "overriding device quirks\n");
+		drvdata = &intel_th_2x;
+	}
+
 	if (drvdata && drvdata->reset_on_probe)
 		intel_th_pci_reset(pdev);
 
@@ -145,11 +158,6 @@ static const struct intel_th_drvdata intel_th_1x_multi_is_broken = {
 	.multi_is_broken	= 1,
 };
 
-static const struct intel_th_drvdata intel_th_2x = {
-	.tscu_enable	= 1,
-	.has_mintctl	= 1,
-};
-
 static const struct intel_th_drvdata intel_th_2x_tgl = {
 	.tscu_enable	= 1,
 	.has_mintctl	= 1,
-- 
2.27.0

