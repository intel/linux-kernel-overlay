From 301c4729d8e825665f322c2fe76c4fbd3146fe45 Mon Sep 17 00:00:00 2001
From: Gayatri Kammela <gayatri.kammela@intel.com>
Date: Wed, 19 May 2021 18:13:22 -0700
Subject: [PATCH 07/14] platform/x86: intel_pmc_core: Add Meteor Lake support
 to pmc_core driver

Add Meteor Lake client and mobile support to pmc_core driver.

Signed-off-by: Gayatri Kammela <gayatri.kammela@intel.com>
---
 drivers/platform/x86/intel_pmc_core.c | 28 +++++++++++++++++++++++++++
 drivers/platform/x86/intel_pmc_core.h | 10 ++++++++++
 2 files changed, 38 insertions(+)

diff --git a/drivers/platform/x86/intel_pmc_core.c b/drivers/platform/x86/intel_pmc_core.c
index 59c58c8dd749..44618235d07a 100644
--- a/drivers/platform/x86/intel_pmc_core.c
+++ b/drivers/platform/x86/intel_pmc_core.c
@@ -1042,6 +1042,32 @@ static const struct pmc_reg_map lkf_reg_map = {
         .etr3_offset = ETR3_OFFSET,
 };
 
+static const struct pmc_reg_map mtl_reg_map = {
+        .pfear_sts = ext_tgl_pfear_map,
+        .slp_s0_offset = ADL_PMC_SLP_S0_RES_COUNTER_OFFSET,
+        .slp_s0_res_counter_step = TGL_PMC_SLP_S0_RES_COUNTER_STEP,
+        .ltr_show_sts = adl_ltr_show_map,
+        .msr_sts = msr_map,
+        .ltr_ignore_offset = CNP_PMC_LTR_IGNORE_OFFSET,
+        .regmap_length = CNP_PMC_MMIO_REG_LEN,
+        .ppfear0_offset = CNP_PMC_HOST_PPFEAR0A,
+        .ppfear_buckets = ICL_PPFEAR_NUM_ENTRIES,
+        .pm_cfg_offset = CNP_PMC_PM_CFG_OFFSET,
+        .pm_read_disable_bit = CNP_PMC_READ_DISABLE_BIT,
+        .ltr_ignore_max = ADL_NUM_IP_IGN_ALLOWED,
+        .lpm_num_modes = ADL_LPM_NUM_MODES,
+        .lpm_num_maps = ADL_LPM_NUM_MAPS,
+        .lpm_res_counter_step_x2 = TGL_PMC_LPM_RES_COUNTER_STEP_X2,
+        .etr3_offset = ETR3_OFFSET,
+        .lpm_sts_latch_en_offset = MTL_LPM_STATUS_LATCH_EN_OFFSET,
+        .lpm_priority_offset = MTL_LPM_PRI_OFFSET,
+        .lpm_en_offset = MTL_LPM_EN_OFFSET,
+        .lpm_residency_offset = MTL_LPM_RESIDENCY_OFFSET,
+        .lpm_sts = adl_lpm_maps,
+        .lpm_status_offset = MTL_LPM_STATUS_OFFSET,
+        .lpm_live_status_offset = MTL_LPM_LIVE_STATUS_OFFSET,
+};
+
 static inline u32 pmc_core_reg_read(struct pmc_dev *pmcdev, int reg_offset)
 {
 	return readl(pmcdev->regbase + reg_offset);
@@ -1973,6 +1999,8 @@ static const struct x86_cpu_id intel_pmc_core_ids[] = {
 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L,		&tgl_reg_map),
 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE,           &adl_reg_map),
 	X86_MATCH_INTEL_FAM6_MODEL(LAKEFIELD,           &lkf_reg_map),
+	X86_MATCH_INTEL_FAM6_MODEL(METEORLAKE,          &mtl_reg_map),
+	X86_MATCH_INTEL_FAM6_MODEL(METEORLAKE_L,        &mtl_reg_map),
 	{}
 };
 
diff --git a/drivers/platform/x86/intel_pmc_core.h b/drivers/platform/x86/intel_pmc_core.h
index 9650f27ee67a..9e2c339aa453 100644
--- a/drivers/platform/x86/intel_pmc_core.h
+++ b/drivers/platform/x86/intel_pmc_core.h
@@ -234,6 +234,16 @@ enum ppfear_regs {
 #define ADL_LPM_STATUS_LATCH_EN_OFFSET         0x1704
 #define ADL_LPM_LIVE_STATUS_OFFSET             0x1764
 
+/* Meteor Lake Power Management Controller register offsets */
+#define MTL_LPM_EN_OFFSET                      0x1798
+#define MTL_LPM_RESIDENCY_OFFSET               0x17A0
+
+/* Meteor Lake Low Power Mode debug registers */
+#define MTL_LPM_PRI_OFFSET		       0x179C
+#define MTL_LPM_STATUS_LATCH_EN_OFFSET         0x16F8
+#define MTL_LPM_STATUS_OFFSET                  0x1700
+#define MTL_LPM_LIVE_STATUS_OFFSET             0x175C
+
 const char *pmc_lpm_modes[] = {
 	"S0i2.0",
 	"S0i2.1",
-- 
2.27.0

