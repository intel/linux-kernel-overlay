From 3dd340511af697a62e0d064b54912d4198e56285 Mon Sep 17 00:00:00 2001
From: "Murphy, Paul J" <paul.j.murphy@intel.com>
Date: Fri, 9 Aug 2019 13:43:36 +0000
Subject: [PATCH 067/223] keembay-vpu-ipc: Fix clock retrieval issue

If the system fails to find the clock driver when this driver is probed,
it will return PROBE_DEFER, however, because the resources are grabbed
before that, the next time the kernel tries to probe this driver, the
memory resources are not available.

The fix for this is to check if the clock is available first, if it is,
the probe will continue, if not, we will cancel the probe and the kernel
will come back and probe us repeatedly until the clock driver is found,
and then we can retrieve the memory resources.

Signed-off-by: Murphy, Paul J <paul.j.murphy@intel.com>

(cherry picked from commit e2f8c21db817a3ca27f635be2f1432e5226f0197)
---
 drivers/firmware/keembay-vpu-ipc.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/firmware/keembay-vpu-ipc.c b/drivers/firmware/keembay-vpu-ipc.c
index f937e5014240..c844664b9d0c 100644
--- a/drivers/firmware/keembay-vpu-ipc.c
+++ b/drivers/firmware/keembay-vpu-ipc.c
@@ -1357,6 +1357,13 @@ static int keembay_vpu_ipc_probe(struct platform_device *pdev)
 	spin_lock_init(&vpu_dev->lock);
 	init_waitqueue_head(&vpu_dev->ready_queue);
 
+	/* Retrieve clocks */
+	rc = retrieve_clocks(vpu_dev);
+	if (rc) {
+		dev_err(dev, "Failed to retrieve clocks %d\n", rc);
+		return rc;
+	}
+
 	/* Retrieve memory regions, allocate memory */
 	rc = setup_reserved_memory(vpu_dev);
 	if (rc) {
@@ -1365,13 +1372,6 @@ static int keembay_vpu_ipc_probe(struct platform_device *pdev)
 		return rc;
 	}
 
-	/* Retrieve clocks */
-	rc = retrieve_clocks(vpu_dev);
-	if (rc) {
-		dev_err(dev, "Failed to retrieve clocks %d\n", rc);
-		goto probe_fail_post_resmem_setup;
-	}
-
 	/* Request watchdog timer resources */
 	rc = setup_watchdog_resources(vpu_dev);
 	if (rc) {
-- 
2.27.0

