From 118292acd43cc91e7b8b7e30fb9ad25756c3045a Mon Sep 17 00:00:00 2001
From: Paul Murphy <paul.j.murphy@intel.com>
Date: Thu, 30 Apr 2020 18:07:13 +0100
Subject: [PATCH 104/223] keembay-vpu-ipc: Allow boot/reset from ERROR state

Allow boot/reset from ERROR state

Signed-off-by: Paul Murphy <paul.j.murphy@intel.com>
---
 drivers/firmware/keembay-vpu-ipc.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/firmware/keembay-vpu-ipc.c b/drivers/firmware/keembay-vpu-ipc.c
index 13ab9a5ae5b0..9a3dbae3dc93 100644
--- a/drivers/firmware/keembay-vpu-ipc.c
+++ b/drivers/firmware/keembay-vpu-ipc.c
@@ -271,10 +271,6 @@ static int vpu_ipc_handle_event(struct vpu_ipc_dev *vpu_dev,
 		}
 		break;
 	case KEEMBAY_VPU_READY:
-		if (event == KEEMBAY_VPU_EVENT_BOOT) {
-			vpu_dev->state = KEEMBAY_VPU_BUSY;
-			rc = 0;
-		}
 		if (event == KEEMBAY_VPU_EVENT_NCE_WDT_TIMEOUT ||
 		    event == KEEMBAY_VPU_EVENT_MSS_WDT_TIMEOUT) {
 			vpu_dev->state = KEEMBAY_VPU_ERROR;
@@ -282,6 +278,10 @@ static int vpu_ipc_handle_event(struct vpu_ipc_dev *vpu_dev,
 		}
 		fallthrough;
 	case KEEMBAY_VPU_ERROR:
+		if (event == KEEMBAY_VPU_EVENT_BOOT) {
+			vpu_dev->state = KEEMBAY_VPU_BUSY;
+			rc = 0;
+		}
 		if (event == KEEMBAY_VPU_EVENT_STOP) {
 			vpu_dev->state = KEEMBAY_VPU_STOPPING;
 			rc = 0;
@@ -1300,7 +1300,7 @@ int intel_keembay_vpu_startup(struct device *dev, const char *firmware_name)
 	if (IS_ERR(vpu_dev))
 		return -EINVAL;
 
-	return do_boot_sequence(vpu_dev, firmware_name);
+	return do_boot_sequence(vpu_dev, NULL);
 
 }
 EXPORT_SYMBOL(intel_keembay_vpu_startup);
-- 
2.27.0

