From a1a5dd55d7d9eb38d143391f9c2cabfbf54a57bc Mon Sep 17 00:00:00 2001
From: Srikanth Thokala <srikanth.thokala@intel.com>
Date: Fri, 11 Sep 2020 01:14:03 +0530
Subject: [PATCH 151/223] Changes required after rebasing to Linus v5.9-rc3

Signed-off-by: Srikanth Thokala <srikanth.thokala@intel.com>
---
 drivers/misc/xlink-pcie/Kconfig           |  1 -
 drivers/misc/xlink-pcie/local_host/dma.c  | 15 +++----
 drivers/misc/xlink-pcie/remote_host/pci.c | 48 +++++++++++++++--------
 3 files changed, 39 insertions(+), 25 deletions(-)

diff --git a/drivers/misc/xlink-pcie/Kconfig b/drivers/misc/xlink-pcie/Kconfig
index 5c5c958638c3..5c5c1b65b725 100644
--- a/drivers/misc/xlink-pcie/Kconfig
+++ b/drivers/misc/xlink-pcie/Kconfig
@@ -18,4 +18,3 @@ config XLINK_PCIE_LH_DRIVER
 	  Choose M here to compile this driver as a module, name is mxlk_ep.
 	  This driver is used for XLink communication over PCIe and is to be
 	  loaded on the Intel Keem Bay platform.
-
diff --git a/drivers/misc/xlink-pcie/local_host/dma.c b/drivers/misc/xlink-pcie/local_host/dma.c
index 424a62a21770..7658e22be8d6 100644
--- a/drivers/misc/xlink-pcie/local_host/dma.c
+++ b/drivers/misc/xlink-pcie/local_host/dma.c
@@ -47,8 +47,6 @@
 #define DMA_ABORT_INTERRUPT_CH_MASK(_c) (BIT(_c) << DMA_ABORT_INTERRUPT_SHIFT)
 #define DMA_DONE_INTERRUPT_MASK (0xFF)
 #define DMA_DONE_INTERRUPT_CH_MASK(_c) (BIT(_c))
-#define DMA_DONE_ABORT_INTERRUPT_CH_MASK(_c)				\
-	(DMA_DONE_INTERRUPT_CH_MASK(_c) | DMA_ABORT_INTERRUPT_CH_MASK(_c))
 #define DMA_ALL_INTERRUPT_MASK                                            \
 	(DMA_ABORT_INTERRUPT_MASK | DMA_DONE_INTERRUPT_MASK)
 
@@ -364,7 +362,8 @@ int intel_xpcie_ep_dma_write_ll(struct pci_epf *epf, int chan, int descs_num)
 	for (i = 0; i < 1000000; i++) {
 		usleep_range(5, 10);
 		if (ioread32(&dma_reg->dma_write_int_status) &
-		    DMA_DONE_ABORT_INTERRUPT_CH_MASK(chan))
+		    (DMA_DONE_INTERRUPT_CH_MASK(chan) |
+		     DMA_ABORT_INTERRUPT_CH_MASK(chan)))
 			break;
 	}
 	if (i == 1000000) {
@@ -377,7 +376,8 @@ int intel_xpcie_ep_dma_write_ll(struct pci_epf *epf, int chan, int descs_num)
 
 cleanup:
 	/* Clear the done/abort interrupt. */
-	iowrite32(DMA_DONE_ABORT_INTERRUPT_CH_MASK(chan),
+	iowrite32((DMA_DONE_INTERRUPT_CH_MASK(chan) |
+		   DMA_ABORT_INTERRUPT_CH_MASK(chan)),
 		  &dma_reg->dma_write_int_clear);
 
 	if (rc) {
@@ -420,7 +420,8 @@ int intel_xpcie_ep_dma_read_ll(struct pci_epf *epf, int chan, int descs_num)
 	for (i = 0; i < 1000000; i++) {
 		usleep_range(5, 10);
 		if (ioread32(&dma_reg->dma_read_int_status) &
-		    DMA_DONE_ABORT_INTERRUPT_CH_MASK(chan))
+		    (DMA_DONE_INTERRUPT_CH_MASK(chan) |
+		     DMA_ABORT_INTERRUPT_CH_MASK(chan)))
 			break;
 	}
 	if (i == 1000000) {
@@ -437,7 +438,8 @@ int intel_xpcie_ep_dma_read_ll(struct pci_epf *epf, int chan, int descs_num)
 	}
 cleanup:
 	/* Clear the done/abort interrupt. */
-	iowrite32(DMA_DONE_ABORT_INTERRUPT_CH_MASK(chan),
+	iowrite32((DMA_DONE_INTERRUPT_CH_MASK(chan) |
+		   DMA_ABORT_INTERRUPT_CH_MASK(chan)),
 		  &dma_reg->dma_read_int_clear);
 
 	if (rc) {
@@ -558,4 +560,3 @@ int intel_xpcie_ep_dma_init(struct pci_epf *epf)
 
 	return intel_xpcie_ep_dma_reset(epf);
 }
-
diff --git a/drivers/misc/xlink-pcie/remote_host/pci.c b/drivers/misc/xlink-pcie/remote_host/pci.c
index 93ff5018e14b..8169698d3e83 100644
--- a/drivers/misc/xlink-pcie/remote_host/pci.c
+++ b/drivers/misc/xlink-pcie/remote_host/pci.c
@@ -174,8 +174,6 @@ static int intel_xpcie_pci_map_bar(struct xpcie_dev *xdev)
 	return -EIO;
 }
 
-#define STR_EQUAL(a, b) !strncmp(a, b, strlen(b))
-
 static enum xpcie_stage intel_xpcie_check_magic(struct xpcie_dev *xdev)
 {
 	char magic[XPCIE_BOOT_MAGIC_STRLEN];
@@ -186,22 +184,28 @@ static enum xpcie_stage intel_xpcie_check_magic(struct xpcie_dev *xdev)
 	if (strlen(magic) == 0)
 		return STAGE_UNINIT;
 
-	if (STR_EQUAL(magic, XPCIE_BOOT_MAGIC_ROM))
+	if (!strncmp(magic, XPCIE_BOOT_MAGIC_ROM,
+		     strlen(XPCIE_BOOT_MAGIC_ROM)))
 		return STAGE_ROM;
 
-	if (STR_EQUAL(magic, XPCIE_BOOT_MAGIC_EMMC))
+	if (!strncmp(magic, XPCIE_BOOT_MAGIC_EMMC,
+		     strlen(XPCIE_BOOT_MAGIC_EMMC)))
 		return STAGE_ROM;
 
-	if (STR_EQUAL(magic, XPCIE_BOOT_MAGIC_BL2))
+	if (!strncmp(magic, XPCIE_BOOT_MAGIC_BL2,
+		     strlen(XPCIE_BOOT_MAGIC_BL2)))
 		return STAGE_BL2;
 
-	if (STR_EQUAL(magic, XPCIE_BOOT_MAGIC_UBOOT))
+	if (!strncmp(magic, XPCIE_BOOT_MAGIC_UBOOT,
+		     strlen(XPCIE_BOOT_MAGIC_UBOOT)))
 		return STAGE_UBOOT;
 
-	if (STR_EQUAL(magic, XPCIE_BOOT_MAGIC_RECOV))
+	if (!strncmp(magic, XPCIE_BOOT_MAGIC_RECOV,
+		     strlen(XPCIE_BOOT_MAGIC_RECOV)))
 		return STAGE_RECOV;
 
-	if (STR_EQUAL(magic, XPCIE_BOOT_MAGIC_YOCTO))
+	if (!strncmp(magic, XPCIE_BOOT_MAGIC_YOCTO,
+		     strlen(XPCIE_BOOT_MAGIC_YOCTO)))
 		return STAGE_OS;
 
 	return STAGE_UNINIT;
@@ -239,25 +243,35 @@ static irqreturn_t intel_xpcie_interrupt(int irq, void *args)
 
 static void intel_xpcie_pci_irq_cleanup(struct xpcie_dev *xdev)
 {
-	if (!pci_msi_enabled())
+	int irq = pci_irq_vector(xdev->pci, 0);
+
+	if (irq < 0)
 		return;
 
-	synchronize_irq(xdev->pci->irq);
-	free_irq(xdev->pci->irq, xdev);
-	pci_disable_msi(xdev->pci);
+	synchronize_irq(irq);
+	free_irq(irq, xdev);
+	pci_free_irq_vectors(xdev->pci);
 }
 
 static int intel_xpcie_pci_irq_init(struct xpcie_dev *xdev)
 {
+	int irq;
 	int rc;
 
-	rc = pci_enable_msi(xdev->pci);
-	if (rc < 1) {
-		dev_err(&xdev->pci->dev, "failed to allocate MSI vectors\n");
+	rc = pci_alloc_irq_vectors(xdev->pci, 1, 1, PCI_IRQ_MSI);
+	if (rc < 0) {
+		dev_err(&xdev->pci->dev,
+			"failed to allocate %d MSI vectors\n", 1);
 		return rc;
 	}
 
-	rc = request_irq(xdev->pci->irq, &intel_xpcie_interrupt, 0,
+	irq = pci_irq_vector(xdev->pci, 0);
+	if (irq < 0) {
+		dev_err(&xdev->pci->dev, "failed to get irq\n");
+		rc = irq;
+		goto error_irq;
+	}
+	rc = request_irq(irq, &intel_xpcie_interrupt, 0,
 			 XPCIE_DRIVER_NAME, xdev);
 	if (rc) {
 		dev_err(&xdev->pci->dev, "failed to request irqs\n");
@@ -267,7 +281,7 @@ static int intel_xpcie_pci_irq_init(struct xpcie_dev *xdev)
 	return 0;
 
 error_irq:
-	pci_disable_msi(xdev->pci);
+	pci_free_irq_vectors(xdev->pci);
 	return rc;
 }
 
-- 
2.27.0

