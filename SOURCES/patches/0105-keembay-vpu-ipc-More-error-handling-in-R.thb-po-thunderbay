From dcf198eb21a9d2f64961002c430bcc1c2c2e7705 Mon Sep 17 00:00:00 2001
From: Paul Murphy <paul.j.murphy@intel.com>
Date: Fri, 1 May 2020 16:37:30 +0100
Subject: [PATCH 105/223] keembay-vpu-ipc: More error handling in READY

More error handling in READY

Signed-off-by: Paul Murphy <paul.j.murphy@intel.com>
---
 drivers/firmware/keembay-vpu-ipc.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/firmware/keembay-vpu-ipc.c b/drivers/firmware/keembay-vpu-ipc.c
index 9a3dbae3dc93..b2afbc27139b 100644
--- a/drivers/firmware/keembay-vpu-ipc.c
+++ b/drivers/firmware/keembay-vpu-ipc.c
@@ -271,6 +271,11 @@ static int vpu_ipc_handle_event(struct vpu_ipc_dev *vpu_dev,
 		}
 		break;
 	case KEEMBAY_VPU_READY:
+		if (event == KEEMBAY_VPU_EVENT_MSS_READY_FAIL ||
+		    event == KEEMBAY_VPU_EVENT_BOOT_FAILED) {
+			vpu_dev->state = KEEMBAY_VPU_ERROR;
+			rc = 0;
+		}
 		if (event == KEEMBAY_VPU_EVENT_NCE_WDT_TIMEOUT ||
 		    event == KEEMBAY_VPU_EVENT_MSS_WDT_TIMEOUT) {
 			vpu_dev->state = KEEMBAY_VPU_ERROR;
@@ -1300,7 +1305,7 @@ int intel_keembay_vpu_startup(struct device *dev, const char *firmware_name)
 	if (IS_ERR(vpu_dev))
 		return -EINVAL;
 
-	return do_boot_sequence(vpu_dev, NULL);
+	return do_boot_sequence(vpu_dev, firmware_name);
 
 }
 EXPORT_SYMBOL(intel_keembay_vpu_startup);
-- 
2.27.0

