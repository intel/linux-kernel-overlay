From 2a1bc5afc3670725bd06ca0596b761bc5159ae32 Mon Sep 17 00:00:00 2001
From: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date: Thu, 9 Apr 2020 10:56:07 +0300
Subject: [PATCH 16/23] intel_th: pci: Add reset-on-probe quirk

Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
---
 drivers/hwtracing/intel_th/intel_th.h |  1 +
 drivers/hwtracing/intel_th/pci.c      | 21 +++++++++++++++++++++
 2 files changed, 22 insertions(+)

diff --git a/drivers/hwtracing/intel_th/intel_th.h b/drivers/hwtracing/intel_th/intel_th.h
index 640f33229572..3b7b0a87e701 100644
--- a/drivers/hwtracing/intel_th/intel_th.h
+++ b/drivers/hwtracing/intel_th/intel_th.h
@@ -55,6 +55,7 @@ struct intel_th_output {
 struct intel_th_drvdata {
 	unsigned int	tscu_enable        : 1,
 			multi_is_broken    : 1,
+			reset_on_probe     : 1,
 			has_mintctl        : 1,
 			host_mode_only     : 1,
 			does_d3            : 1;
diff --git a/drivers/hwtracing/intel_th/pci.c b/drivers/hwtracing/intel_th/pci.c
index abb0d77b4b8d..c3b5240f3050 100644
--- a/drivers/hwtracing/intel_th/pci.c
+++ b/drivers/hwtracing/intel_th/pci.c
@@ -27,6 +27,24 @@ enum {
 
 #define PCI_REG_NPKDSC	0x80
 #define NPKDSC_TSACT	BIT(5)
+#define NPKDSC_FSR	BIT(1)
+
+static int intel_th_pci_reset(struct pci_dev *pdev)
+{
+	u32 npkdsc;
+	int err;
+
+	err = pci_read_config_dword(pdev, PCI_REG_NPKDSC, &npkdsc);
+	if (!err) {
+		npkdsc |= NPKDSC_FSR;
+		err = pci_write_config_dword(pdev, PCI_REG_NPKDSC, npkdsc);
+	}
+
+	if (err)
+		dev_err(&pdev->dev, "failed to read/write NPKDSC register\n");
+
+	return err;
+}
 
 static int intel_th_pci_activate(struct intel_th *th)
 {
@@ -87,6 +105,9 @@ static int intel_th_pci_probe(struct pci_dev *pdev,
 	if (err)
 		return err;
 
+	if (drvdata->reset_on_probe)
+		intel_th_pci_reset(pdev);
+
 	if (pdev->resource[TH_PCI_RTIT_BAR].start) {
 		resource[TH_MMIO_RTIT] = pdev->resource[TH_PCI_RTIT_BAR];
 		r++;
-- 
2.27.0

