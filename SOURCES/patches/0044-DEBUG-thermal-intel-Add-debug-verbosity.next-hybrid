From 170a462963b8efd26d5606406b3b9e2e6cb6cd22 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Sun, 21 Feb 2021 21:17:10 -0800
Subject: [PATCH 44/76] DEBUG: thermal: intel: Add debug verbosity

This is to monitor that the HFI has been configured correctly and that
thermal interrupts are received and processed accordingly.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 drivers/thermal/intel/intel_hfi.c   | 25 +++++++++++++++++++++++++
 drivers/thermal/intel/therm_throt.c |  1 +
 2 files changed, 26 insertions(+)

diff --git a/drivers/thermal/intel/intel_hfi.c b/drivers/thermal/intel/intel_hfi.c
index af0a8fb3f657..4c077f4293ff 100644
--- a/drivers/thermal/intel/intel_hfi.c
+++ b/drivers/thermal/intel/intel_hfi.c
@@ -16,6 +16,7 @@
  * seen by the scheduler.
  */
 
+#define DEBUG
 #define pr_fmt(fmt)  "intel-hfi: " fmt
 
 #include <linux/cpu.h>
@@ -130,6 +131,20 @@ static bool asym_capacity_initialized;
 static struct hfi_cpu_data class0_max_caps;
 static struct hfi_cpu_data class0_min_caps = { U8_MAX, U8_MAX };
 
+static bool hfi_debug_enable;
+
+#define hfi_debug(s, a...) do {	\
+		if (hfi_debug_enable)	\
+			pr_debug(s, ##a);\
+	} while (0)
+
+static int __init hfi_enable_debug(char *arg)
+{
+	hfi_debug_enable = true;
+	return 1;
+}
+__setup("hfi_debug", hfi_enable_debug);
+
 #ifdef CONFIG_DEBUG_FS
 static int cpu_capacities_show(struct seq_file *m, void *data)
 {
@@ -567,6 +582,7 @@ static void hfi_update_work_fn(struct work_struct *work)
 		return;
 
 	params = info->params;
+	hfi_debug("Doing HFI work from CPU %d\n", smp_processor_id());
 
 	/*
 	 * Sanity check that the timestamp moved forward before consuming
@@ -584,6 +600,7 @@ static void hfi_update_work_fn(struct work_struct *work)
 	raw_spin_lock_irqsave(&params->hfi_event_lock, flags);
 	params->processing_update = false;
 	raw_spin_unlock_irqrestore(&params->hfi_event_lock, flags);
+	hfi_debug("Done with HFI work in CPU%d\n", smp_processor_id());
 }
 DECLARE_DELAYED_WORK(hfi_update_work, hfi_update_work_fn);
 
@@ -593,6 +610,8 @@ void intel_hfi_check_event(__u64 pkg_therm_status_msr_val)
 	struct hfi_params *params;
 	unsigned long flags;
 
+	hfi_debug("Received interrupt in CPU%d\n", smp_processor_id());
+
 	if (!pkg_therm_status_msr_val)
 		return;
 
@@ -609,6 +628,7 @@ void intel_hfi_check_event(__u64 pkg_therm_status_msr_val)
 	params = info->params;
 	if (!params)
 		return;
+
 	/*
 	 * With the exception of certain systems, all CPUs receive the package-
 	 * level thermal interrupt and all of them will try to schedule delayed
@@ -625,6 +645,7 @@ void intel_hfi_check_event(__u64 pkg_therm_status_msr_val)
 				    ~PACKAGE_THERM_STATUS_HFI_UPDATED;
 	wrmsrl(MSR_IA32_PACKAGE_THERM_STATUS, pkg_therm_status_msr_val);
 	params->processing_update = true;
+	hfi_debug("Will schedule work to update HFI from CPU %d\n", smp_processor_id());
 	schedule_delayed_work_on(params->handling_cpu,
 				 &hfi_update_work, HFI_UPDATE_DELAY);
 	raw_spin_unlock_irqrestore(&params->hfi_event_lock, flags);
@@ -907,6 +928,7 @@ static __init int hfi_parse_features(void)
 	if (!boot_cpu_has(X86_FEATURE_INTEL_HFI))
 		return -ENODEV;
 
+	hfi_debug("CPU has HFI...\n");
 	if (hfi_features.parsed)
 		return 0;
 
@@ -955,6 +977,7 @@ void __init intel_hfi_init(void)
 	if (hfi_parse_features())
 		return;
 
+	hfi_debug("Initializing...\n");
 	max_hfi_param_instances = topology_max_packages() *
 				  topology_max_die_per_package();
 	hfi_param_instances = kcalloc(max_hfi_param_instances,
@@ -965,4 +988,6 @@ void __init intel_hfi_init(void)
 	}
 
 	hfi_dbgfs_register();
+
+	hfi_debug("Hardware Feedback Interface enabled\n");
 }
diff --git a/drivers/thermal/intel/therm_throt.c b/drivers/thermal/intel/therm_throt.c
index 975b5f9b9421..db9bccd7f8da 100644
--- a/drivers/thermal/intel/therm_throt.c
+++ b/drivers/thermal/intel/therm_throt.c
@@ -729,6 +729,7 @@ void intel_init_thermal(struct cpuinfo_x86 *c)
 				| PACKAGE_THERM_INT_HIGH_ENABLE), h);
 
 		if (cpu_has(c, X86_FEATURE_INTEL_HFI)) {
+			pr_debug("Enabling HFI interrupt\n");
 			rdmsr(MSR_IA32_PACKAGE_THERM_INTERRUPT, l, h);
 			wrmsr(MSR_IA32_PACKAGE_THERM_INTERRUPT,
 			      l | PACKAGE_THERM_INT_HFI_ENABLE, h);
-- 
2.27.0

