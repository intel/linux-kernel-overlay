From d49d74e634309071fb67a56a07113685cb35627e Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Wed, 30 Sep 2020 17:41:52 -0700
Subject: [PATCH 40/72] DEBUG: x86/platform/hfi: Count the number of HFI events

Add a per-CPU variable to count the number of thermal interrupts due to
HFI updates. Also, count the number of processed HFI updates a result of
HFI interrupts.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 arch/x86/platform/intel/hfi.c | 18 ++++++++++++++++--
 1 file changed, 16 insertions(+), 2 deletions(-)

diff --git a/arch/x86/platform/intel/hfi.c b/arch/x86/platform/intel/hfi.c
index 461e470a092c..dd8950697082 100644
--- a/arch/x86/platform/intel/hfi.c
+++ b/arch/x86/platform/intel/hfi.c
@@ -98,6 +98,10 @@ static int __init hfi_enable_debug(char *arg)
 __setup("hfi_debug", hfi_enable_debug);
 
 #ifdef CONFIG_DEBUG_FS
+
+static DEFINE_PER_CPU(u64, hfi_interrupts);
+static u64 hfi_updates;
+
 static int cpu_capacities_show(struct seq_file *m, void *data)
 {
 	int cpu;
@@ -140,6 +144,9 @@ static int hfi_state_show(struct seq_file *s, void *unused)
 
 	seq_printf(s, "\nTimestamp: %lld\n", *hfi_params.ts_counter);
 
+	/* Dump the number of times we have read the HFI table */
+	seq_printf(s, "\nHFI table updates: %llu\n", hfi_updates);
+
 	/* Dump the performance capability change indication */
 	seq_printf(s, "\nPerf Cap Change Indication:");
 	hfi_hdr = hfi_params.hdr;
@@ -154,7 +161,7 @@ static int hfi_state_show(struct seq_file *s, void *unused)
 	seq_printf(s, "CPU\tIndex");
 	seq_printf(s, "\tPe  Ef");
 
-	seq_printf(s, "\n");
+	seq_printf(s, "\tHFI-interrupts\n");
 	for_each_online_cpu(cpu) {
 		s16 index = per_cpu(hfi_cpu_index, cpu);
 		void *data_ptr = hfi_params.data +
@@ -163,7 +170,7 @@ static int hfi_state_show(struct seq_file *s, void *unused)
 
 		seq_printf(s, "%4u\t%4d", cpu, index);
 		seq_printf(s, "\t%3u %3u", data->perf_cap, data->ee_cap);
-		seq_printf(s, "\n");
+		seq_printf(s, "\t%15llu\n", per_cpu(hfi_interrupts, cpu));
 	}
 
 	return 0;
@@ -400,6 +407,9 @@ static void hfi_update_work_fn(struct work_struct *work)
 	update_capacity();
 	update_energy_efficiency();
 
+#ifdef CONFIG_DEBUG_FS
+	hfi_updates++;
+#endif
 	/*
 	 * Using the HFI means that not all CPUs will have the same capacity.
 	 * Thus,  the "MC" scheduling domain should have the SD_ASYM_CPUCAPACITY
@@ -442,6 +452,10 @@ void intel_hfi_check_event(__u64 pkg_therm_status_msr_val)
 	if (!pkg_therm_status_msr_val)
 		return;
 
+#ifdef CONFIG_DEBUG_FS
+	per_cpu(hfi_interrupts, smp_processor_id())++;
+#endif
+
 	/*
 	 * All CPUs receive the package-level thermal interrupt all of them
 	 * will try to schedule delayed work. However, only the first CPU
-- 
2.27.0

