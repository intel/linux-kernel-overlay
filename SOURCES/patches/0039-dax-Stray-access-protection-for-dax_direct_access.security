From 188a9234495556b22458a87f6aff9c00f4a2ff79 Mon Sep 17 00:00:00 2001
From: Ira Weiny <ira.weiny@intel.com>
Date: Thu, 4 Jun 2020 23:40:56 -0700
Subject: [PATCH 39/63] dax: Stray access protection for dax_direct_access()

dax_direct_access() is a special case of accessing pmem via a page
offset and without a struct page.

Because the dax driver is well aware of the special protections it has
mapped memory with, call dev_mk_[readwrite|noaccess]() directly instead of
going through the unnecessary overhead of trying to get a page to kmap.

Similar to kmap, we leverage the existing functions,
dax_read_[un]lock(), because they are already required to surround the
use of the memory returned from dax_direct_access().

Signed-off-by: Ira Weiny <ira.weiny@intel.com>
---
 drivers/dax/super.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/drivers/dax/super.c b/drivers/dax/super.c
index 5fa6ae9dbc8b..91cd24b27e48 100644
--- a/drivers/dax/super.c
+++ b/drivers/dax/super.c
@@ -30,6 +30,7 @@ static DEFINE_SPINLOCK(dax_host_lock);
 
 int dax_read_lock(void)
 {
+	dev_mk_readwrite();
 	return srcu_read_lock(&dax_srcu);
 }
 EXPORT_SYMBOL_GPL(dax_read_lock);
@@ -37,6 +38,7 @@ EXPORT_SYMBOL_GPL(dax_read_lock);
 void dax_read_unlock(int id)
 {
 	srcu_read_unlock(&dax_srcu, id);
+	dev_mk_noaccess();
 }
 EXPORT_SYMBOL_GPL(dax_read_unlock);
 
-- 
2.27.0

