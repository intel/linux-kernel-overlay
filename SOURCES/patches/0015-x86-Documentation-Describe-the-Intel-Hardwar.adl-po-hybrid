From cf74c9af24de60975adf1de529dcfed5d18145a9 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Mon, 18 Nov 2019 12:52:09 -0800
Subject: [PATCH 15/68] x86/Documentation: Describe the Intel Hardware Feedback
 Interface

Start a documentation file to describe the purpose and operation of Intel's
Hardware Feedback Interface. Describe how such interface is used in Linux
to set the capacity of CPUs in the scheduler.

Cc: Andi Kleen <ak@linux.intel.com>
Cc: Aubrey Li <aubrey.li@linux.intel.com>
Cc: Len Brown <len.brown@intel.com>
Cc: Tim Chen <tim.c.chen@linux.intel.com>
Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
Suggested-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
Changes since v4:
  * Removed details of the HFI table format. Readers can refer to Intel
    documentation for this information. (Len)
  * Relocated description of the handling of SMT to the changeset
    implementing support for it.
  * Miscellaneous rewording for clarity and readability.
  * Added intel-hfi to x86/index.rst

Changes since v3:
  * None

Changes since v2:
  * Updated to reflect use of CPU capacity instead of priority.
  * Included discussion on handling simultaneous multithreading.

Changes since v1:
  * Introduced this patch.
---
 Documentation/x86/index.rst     |   1 +
 Documentation/x86/intel-hfi.rst | 109 ++++++++++++++++++++++++++++++++
 2 files changed, 110 insertions(+)
 create mode 100644 Documentation/x86/intel-hfi.rst

diff --git a/Documentation/x86/index.rst b/Documentation/x86/index.rst
index 4693e192b447..020ba7e5dfea 100644
--- a/Documentation/x86/index.rst
+++ b/Documentation/x86/index.rst
@@ -21,6 +21,7 @@ x86-specific Documentation
    tlb
    mtrr
    pat
+   intel-hfi
    intel-iommu
    intel_txt
    amd-memory-encryption
diff --git a/Documentation/x86/intel-hfi.rst b/Documentation/x86/intel-hfi.rst
new file mode 100644
index 000000000000..68995b9ff532
--- /dev/null
+++ b/Documentation/x86/intel-hfi.rst
@@ -0,0 +1,109 @@
+.. SPDX-License-Identifier: GPL-2.0
+
+============================================================
+Hardware-Feedback Interface for scheduling on Intel Hardware
+============================================================
+
+Overview
+--------
+
+Intel has described the Hardware Feedback Interface (HFI) in the Intel 64 and
+IA-32 Architectures Software Developer's Manual Volume 3 Section 14.6 [1]_.
+Also, an Enhanced HFI is described in the Intel Architecture Instruction Set
+Extensions and Future Features Programming Reference [2]_.
+
+The HFI gives the operating system a performance and energy efficiency
+rating for each logical processor in the system. The Enhanced HFI introduces
+the concept of workload classes. In some processors, a subset of CPUs may be
+optimized to execute certain classes of instructions with higher performance.
+The EHFI provides performance and energy efficiency capability for workloads
+using the classes of optimized instructions.
+
+Linux uses the performance capabilities of the HFI to set the capacity of each
+CPU. Class 0 of the EHFI contains the same data as the HFI. In certain
+processors, the aforementioned ratings may change at runtime; the scheduler
+will update CPU capacities accordingly.
+
+HFI Goals
+---------
+
+One use of the HFI is to describe the capabilities of parts that have CPUs with
+asymmetric power and performance properties. This include hybrid parts. A hybrid
+processor contains one or more Core CPUs, and one or more Atom CPUs. All CPUs
+support the same instructions. CPUID enumerates the same features for all CPUs.
+
+The first goal of the HFI is to enhance the operation of the scheduler of the
+operating system for both single-thread-dominant and multi-threaded workloads.
+Linux can use HFI to identify the highest performance CPUs, and place
+performance-demanding threads on those CPUs.
+
+If the system becomes constrained in power or temperature, the Intel Core CPUs
+may be throttled such that the Intel Atom CPUs may be faster. The HFI
+will detect such conditions and reflect this performance inversion, allowing
+Linux to react and use the new set of highest performing CPUs.
+
+In the current implementation, Linux takes advantage of the HFI's performance
+rating of CPUs to define scheduler's CPU capacities. This allows it to improve
+the performance of single-threaded workloads, and also detect the performance
+inversion case (i.e., existing constraints make Atoms have higher performance).
+
+The Hardware Feedback Interface
+-------------------------------
+
+The Hardware Feedback Interface provides to the operating system two ratings for
+each logical processor in the system: performance and energy efficiency. Each
+capability is given as a unit-less quantity in the range [0-255]; where higher
+values indicate higher performance and energy efficiency. It is important to
+note that these capabilities may change at runtime as a result of changes in the
+operating conditions of the system and a result of the action of external
+factors.
+
+A hardware-specific algorithm continuously computes the performance and energy
+efficiency of each logical processor given the system workload as well as power
+and thermal limits. For instance, if the system has various types of CPUs, it
+may use the instructions-per-clock cycle (IPC) ratio between those CPUs (i.e.,
+CPUs with higher IPC will have a higher performance capability). Also, CPUs
+with higher maximum frequency will have a higher performance capability. If the
+system is running on a restrictive power limit (e.g., using the RAPL
+interfaces), CPUs with higher power consumption will be given a lower
+performance capability. If the package reaches a thermal limit, CPUs less able
+to dissipate heat will receive a lower performance rating. It follows that the
+operating system can use this information to decide on which CPUs to run tasks.
+
+The rate at which the mentioned performance and energy efficiency ratings are
+updated is specific to the processor model. On some processors, ratings are set
+at boot time and never change. On other processors it will change as frequently
+as 15ms.
+
+The operating system can opt to either poll the table periodically to look for
+updates or receive an interrupt whenever the hardware updates the table.
+
+Linux uses the interrupt mechanism. The HFI interrupt reuses the facilities
+implemented to handle thermal management events. Further details can be found
+in the Intel 64 and IA-32 Architectures Software Developer's Manual Vol. 3
+Section 14.9 [1]_. New package-level interrupt and status bits are added to the
+IA32_PACKAGE_THERM_INTERRUPT and IA32_PACKAGE_THERM_STATUS registers,
+respectively. An interrupt happens when hardware has updated the HFI table and
+is ready for the operating system to consume. CPUs receive such interrupt via
+the thermal entry in the Local APIC's LVT.
+
+Linux uses the performance ratings from the HFI table to set the scheduler
+CPU capacities by implementing arch_scale_cpu_capacity() to relay the data of
+the HFI table to the scheduler, scaled to the range [1, SCHED_CAPACITY_SCALE].
+That is, the CPU with the highest performance rating will have a capacity of
+SCHED_CAPACITY_SCALE. Furthermore, capabilities in the HFI data already factors
+in the maximum frequencies of CPUs. Thus, Linux does not need to do such scaling
+(see topology_normalize_cpu_scale()).
+
+Hence, if all CPUs share the last level cache memory, the "MC" scheduling
+domain will have groups with asymmetric overall and maximum capacity. The
+scheduler will set the SD_ASYM_CPUCAPACITY flag in the domain. As a result,
+the scheduler will migrate tasks that are too big for a given CPU (i.e., the
+task utilization is bigger than 80% of the CPU capacity) to CPUs with higher
+capacity.
+
+References
+----------
+
+.. [1] https://software.intel.com/content/dam/develop/public/us/en/documents/325462-sdm-vol-1-2abcd-3abcd.pdf
+.. [2] https://software.intel.com/content/dam/develop/external/us/en/documents/architecture-instruction-set-extensions-programming-reference.pdf
-- 
2.27.0

