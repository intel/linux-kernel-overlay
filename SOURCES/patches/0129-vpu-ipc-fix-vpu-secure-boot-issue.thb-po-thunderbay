From cfbe530dc6b606992c299bd89f163793b965d55a Mon Sep 17 00:00:00 2001
From: "Demakkanavar, Kenchappa" <kenchappa.demakkanavar@intel.com>
Date: Wed, 24 Mar 2021 13:59:16 +0530
Subject: [PATCH 129/223] vpu-ipc: fix vpu secure boot issue

VPU secure boot issue fixed

Signed-off-by: Demakkanavar, Kenchappa <kenchappa.demakkanavar@intel.com>
---
 drivers/firmware/keembay-vpu-ipc.c | 24 ++++++++++++++++--------
 1 file changed, 16 insertions(+), 8 deletions(-)

diff --git a/drivers/firmware/keembay-vpu-ipc.c b/drivers/firmware/keembay-vpu-ipc.c
index 4a8c40e5851b..a8fca7f0bb4e 100644
--- a/drivers/firmware/keembay-vpu-ipc.c
+++ b/drivers/firmware/keembay-vpu-ipc.c
@@ -302,13 +302,13 @@ enum keembay_vpu_event {
  */
 struct vpu_boot_ta_shmem {
 	u64 fw_header_addr;
-	u32 fw_header_size;
+	u64 fw_header_size;
 	u64 fw_version_addr;
-	u32 fw_version_size;
+	u64 fw_version_size;
 	u64 fw_load_addr;
-	u32 fw_load_size;
+	u64 fw_load_size;
 	u64 x509_addr;
-	u32 x509_size;
+	u64 x509_size;
 	u64 fw_entry_addr;
 	u32 slice_id;
 } __packed;
@@ -317,7 +317,7 @@ static struct vpu_ipc_dev *to_vpu_dev(struct device *dev);
 
 static struct kobject *vpu_ipc_kobj;
 
-static struct vpu_ipc_soc_info *vpu_ipc_soc_info;
+static struct vpu_ipc_soc_info *vpu_ipc_soc_info = NULL;
 
 /**
  * VPU_AUTH_TA_UUID: 7671AC66-1B46-4B34-B929-18BB15D398EE
@@ -958,14 +958,14 @@ static int request_vpu_boot(struct vpu_ipc_dev *vpu_dev)
 	vpu_boot_ta_args->fw_header_addr = vpu_dev->x509_mem.paddr +
 					   vpu_dev->x509_size;
 	vpu_boot_ta_args->fw_header_size = MAX_HEADER_SIZE;
-	vpu_boot_ta_args->fw_load_addr = vpu_dev->fw_res.start;
+	vpu_boot_ta_args->fw_load_addr = dma_to_phys(dev, vpu_dev->fw_res.start);
 	vpu_boot_ta_args->fw_load_size = resource_size(&vpu_dev->fw_res);
 	vpu_boot_ta_args->fw_version_addr = vpu_boot_ta_args->fw_load_addr -
 					    MAX_FIRMWARE_VERSION_SIZE;
 	vpu_boot_ta_args->fw_version_size = MAX_FIRMWARE_VERSION_SIZE;
 	vpu_boot_ta_args->x509_addr = vpu_dev->x509_mem.paddr;
 	vpu_boot_ta_args->x509_size = vpu_dev->x509_size;
-	vpu_boot_ta_args->fw_entry_addr = vpu_dev->boot_vec_paddr;
+	vpu_boot_ta_args->fw_entry_addr = dma_to_phys(dev, vpu_dev->boot_vec_paddr);
 	vpu_boot_ta_args->slice_id = vpu_dev->vpu_id;
 
 	ret = tee_client_invoke_func(vpu_dev->tee_ctx, &inv_arg, param);
@@ -1900,6 +1900,11 @@ static int keembay_vpu_ipc_probe(struct platform_device *pdev)
 		dev_err(dev, "Failed to retrieve clocks %d\n", rc);
 		return rc;
 	}
+	rc = clk_prepare_enable(vpu_dev->cpu_clock);
+	if (rc) {
+		dev_err(dev, "Failed to enable VPU clock: %d\n", rc);
+		return rc;
+	}
 
 	rc = ipc_device_get(vpu_dev);
 	if (rc)
@@ -1969,7 +1974,8 @@ static int keembay_vpu_ipc_probe(struct platform_device *pdev)
 
 	/* Allocate dynamic shared memory for VPU boot params */
 	vpu_dev->shm = tee_shm_alloc(vpu_dev->tee_ctx,
-				     sizeof(struct vpu_boot_ta_shmem),
+				     (sizeof(struct vpu_boot_ta_shmem) +
+				     MAX_HEADER_SIZE),
 				     (TEE_SHM_MAPPED | TEE_SHM_DMA_BUF));
 
 	if (IS_ERR(vpu_dev->shm)) {
@@ -2015,6 +2021,8 @@ static int keembay_vpu_ipc_remove(struct platform_device *pdev)
 
 	tee_client_close_context(vpu_dev->tee_ctx);
 
+	clk_disable_unprepare(vpu_dev->cpu_clock);
+
 	ipc_device_put(vpu_dev);
 
 	dev_info(dev, "Keem Bay VPU IPC driver removed.\n");
-- 
2.27.0

