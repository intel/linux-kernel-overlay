From eb1f2b370dcde4d276dad2c5679c24966253f724 Mon Sep 17 00:00:00 2001
From: "Pan, Kris" <kris.pan@intel.com>
Date: Wed, 17 Mar 2021 13:26:01 +0800
Subject: [PATCH 010/223] Revert "arm64: do not descend to vdso directories
 twice"

This reverts commit a5b8ca97fbf8300a5e21c393df25ce6f521e7939.
---
 arch/arm64/Makefile                                | 10 ++++------
 arch/arm64/kernel/Makefile                         |  5 ++---
 arch/arm64/kernel/vdso/Makefile                    |  1 +
 arch/arm64/kernel/{vdso-wrap.S => vdso/vdso.S}     |  0
 arch/arm64/kernel/vdso32/Makefile                  |  1 +
 arch/arm64/kernel/{vdso32-wrap.S => vdso32/vdso.S} |  0
 6 files changed, 8 insertions(+), 9 deletions(-)
 rename arch/arm64/kernel/{vdso-wrap.S => vdso/vdso.S} (100%)
 rename arch/arm64/kernel/{vdso32-wrap.S => vdso32/vdso.S} (100%)

diff --git a/arch/arm64/Makefile b/arch/arm64/Makefile
index 5b84aec31ed3..90309208bb28 100644
--- a/arch/arm64/Makefile
+++ b/arch/arm64/Makefile
@@ -188,12 +188,10 @@ ifeq ($(KBUILD_EXTMOD),)
 # this hack.
 prepare: vdso_prepare
 vdso_prepare: prepare0
-	$(Q)$(MAKE) $(build)=arch/arm64/kernel/vdso \
-	include/generated/vdso-offsets.h arch/arm64/kernel/vdso/vdso.so
-ifdef CONFIG_COMPAT_VDSO
-	$(Q)$(MAKE) $(build)=arch/arm64/kernel/vdso32 \
-	include/generated/vdso32-offsets.h arch/arm64/kernel/vdso32/vdso.so
-endif
+	$(Q)$(MAKE) $(build)=arch/arm64/kernel/vdso include/generated/vdso-offsets.h
+	$(if $(CONFIG_COMPAT_VDSO),$(Q)$(MAKE) \
+		$(build)=arch/arm64/kernel/vdso32  \
+		include/generated/vdso32-offsets.h)
 endif
 
 define archhelp
diff --git a/arch/arm64/kernel/Makefile b/arch/arm64/kernel/Makefile
index ed65576ce710..2262f0392857 100644
--- a/arch/arm64/kernel/Makefile
+++ b/arch/arm64/kernel/Makefile
@@ -59,10 +59,9 @@ obj-$(CONFIG_CRASH_CORE)		+= crash_core.o
 obj-$(CONFIG_ARM_SDE_INTERFACE)		+= sdei.o
 obj-$(CONFIG_ARM64_PTR_AUTH)		+= pointer_auth.o
 obj-$(CONFIG_ARM64_MTE)			+= mte.o
-obj-y					+= vdso-wrap.o
-obj-$(CONFIG_COMPAT_VDSO)		+= vdso32-wrap.o
 
-obj-y					+= probes/
+obj-y					+= vdso/ probes/
+obj-$(CONFIG_COMPAT_VDSO)		+= vdso32/
 head-y					:= head.o
 extra-y					+= $(head-y) vmlinux.lds
 
diff --git a/arch/arm64/kernel/vdso/Makefile b/arch/arm64/kernel/vdso/Makefile
index 945e6bb326e3..47cf442bbdf7 100644
--- a/arch/arm64/kernel/vdso/Makefile
+++ b/arch/arm64/kernel/vdso/Makefile
@@ -45,6 +45,7 @@ endif
 # Disable gcov profiling for VDSO code
 GCOV_PROFILE := n
 
+obj-y += vdso.o
 targets += vdso.lds
 CPPFLAGS_vdso.lds += -P -C -U$(ARCH)
 
diff --git a/arch/arm64/kernel/vdso-wrap.S b/arch/arm64/kernel/vdso/vdso.S
similarity index 100%
rename from arch/arm64/kernel/vdso-wrap.S
rename to arch/arm64/kernel/vdso/vdso.S
diff --git a/arch/arm64/kernel/vdso32/Makefile b/arch/arm64/kernel/vdso32/Makefile
index 789ad420f16b..a1e0f91e6cea 100644
--- a/arch/arm64/kernel/vdso32/Makefile
+++ b/arch/arm64/kernel/vdso32/Makefile
@@ -155,6 +155,7 @@ c-obj-vdso-gettimeofday := $(addprefix $(obj)/, $(c-obj-vdso-gettimeofday))
 asm-obj-vdso := $(addprefix $(obj)/, $(asm-obj-vdso))
 obj-vdso := $(c-obj-vdso) $(c-obj-vdso-gettimeofday) $(asm-obj-vdso)
 
+obj-y += vdso.o
 targets += vdso.lds
 CPPFLAGS_vdso.lds += -P -C -U$(ARCH)
 
diff --git a/arch/arm64/kernel/vdso32-wrap.S b/arch/arm64/kernel/vdso32/vdso.S
similarity index 100%
rename from arch/arm64/kernel/vdso32-wrap.S
rename to arch/arm64/kernel/vdso32/vdso.S
-- 
2.27.0

