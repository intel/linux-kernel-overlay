From ffee5c268e3400de789a747fdf4c00ad78964ead Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Mon, 23 Mar 2020 19:00:51 -0700
Subject: [PATCH 27/76] sched/topology: Do not depend on schedutil

When running with Intel Hardware Feedback Interface, we use autonomous
P-states. Thus, we don't rely on schedutil. Remove such dependency.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 kernel/sched/topology.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/kernel/sched/topology.c b/kernel/sched/topology.c
index 831c2df09009..edf9f2cc1085 100644
--- a/kernel/sched/topology.c
+++ b/kernel/sched/topology.c
@@ -205,7 +205,8 @@ sd_parent_degenerate(struct sched_domain *sd, struct sched_domain *parent)
 	return 1;
 }
 
-#if defined(CONFIG_ENERGY_MODEL) && defined(CONFIG_CPU_FREQ_GOV_SCHEDUTIL)
+#if defined(CONFIG_ENERGY_MODEL) && \
+    (defined(CONFIG_CPU_FREQ_GOV_SCHEDUTIL) || defined(CONFIG_INTEL_HFI))
 DEFINE_STATIC_KEY_FALSE(sched_energy_present);
 unsigned int sysctl_sched_energy_aware = 1;
 DEFINE_MUTEX(sched_energy_mutex);
@@ -326,7 +327,8 @@ static void sched_energy_set(bool has_eas)
  *    1. an Energy Model (EM) is available;
  *    2. the SD_ASYM_CPUCAPACITY flag is set in the sched_domain hierarchy.
  *    3. the EM complexity is low enough to keep scheduling overheads low;
- *    4. schedutil is driving the frequency of all CPUs of the rd;
+ *    4. schedutil or autonomous performance states are driving the frequency
+ *       of all CPUs of the rd;
  *    5. frequency invariance support is present;
  *
  * The complexity of the Energy Model is defined as:
@@ -444,7 +446,8 @@ static bool build_perf_domains(const struct cpumask *cpu_map)
 }
 #else
 static void free_pd(struct perf_domain *pd) { }
-#endif /* CONFIG_ENERGY_MODEL && CONFIG_CPU_FREQ_GOV_SCHEDUTIL*/
+#endif /* CONFIG_ENERGY_MODEL) && \
+	  (CONFIG_CPU_FREQ_GOV_SCHEDUTIL) || CONFIG_INTEL_HFI) */
 
 static void free_rootdomain(struct rcu_head *rcu)
 {
@@ -2359,7 +2362,8 @@ void partition_sched_domains_locked(int ndoms_new, cpumask_var_t doms_new[],
 		;
 	}
 
-#if defined(CONFIG_ENERGY_MODEL) && defined(CONFIG_CPU_FREQ_GOV_SCHEDUTIL)
+#if defined(CONFIG_ENERGY_MODEL) && \
+    (defined(CONFIG_CPU_FREQ_GOV_SCHEDUTIL) || defined(CONFIG_INTEL_HFI))
 	/* Build perf. domains: */
 	for (i = 0; i < ndoms_new; i++) {
 		for (j = 0; j < n && !sched_energy_update; j++) {
-- 
2.27.0

