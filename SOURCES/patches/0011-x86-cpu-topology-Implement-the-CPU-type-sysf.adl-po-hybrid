From 30c67c34edecf43d2f9bb0f90d4679618f7bc500 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Tue, 5 Nov 2019 11:28:29 -0800
Subject: [PATCH 11/68] x86/cpu/topology: Implement the CPU type sysfs
 interface

Recent Intel processors combine CPUs with different types of micro-
architecture in the same package. There may be applications interested in
knowing the type topology of the system. For instance, it can be used to
to determine which subsets of CPUs share a common feature.

Implement cpu_type sysfs interfaces for Intel processors.

In a system with four Intel Atom CPUs and one Intel Core CPU, these entries
look as shown below. In this example, the native model IDs for both types
of CPUs are 0.:

user@host:~$: ls /sys/devices/system/cpu/types
intel_atom_0 intel_core_0

user@host:~$ ls /sys/devices/system/cpu/types/intel_atom_0
cpulist cpumap

user@host:~$ ls /sys/devices/system/cpu/types/intel_core_0
cpulist cpumap

user@host:~$ cat /sys/devices/system/cpu/types/intel_atom/cpumap
f

user@host:~$ cat /sys/devices/system/cpu/types/intel_atom/cpulist
0-3

user@nost:~$ cat /sys/devices/system/cpu/types/intel_core/cpumap
10

user@host:~$ cat /sys/devices/system/cpu/types/intel_core/cpulist
4

Cc: Andi Kleen <ak@linux.intel.com>
Cc: Andy Shevchenko <andriy.shevchenko@intel.com>
Cc: Aubrey Li <aubrey.li@linux.intel.com>
Cc: Chen Yu <yu.c.chen@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>
Cc: Kan Liang <kan.liang@linux.intel.com>
Cc: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Cc: Tony Luck <tony.luck@intel.com>
Suggested-by: Len Brown <len.brown@intel.com> # Necessity of the interface
Suggested-by: Dave Hansen <dave.hansen@intel.com> # Details of the interface
Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
Changes since v1:
 * Extended the data type of cpu_type from u8 to u32 to accommodate both the
   CPU type and the native model ID.
 * Rebase changes on codebase not using cpuinfo_x86.x86_cpu_type.

----
Changes before submitting this series independently:

Changes since v3:
 * Corrected commit message to correctly represent the proposed sysfs
   entries. (Dave)
 * Relocated the implementation of the sysfs interfaces to
   drivers/base/cpu.c. Thus, this patch only overrides the required weak
   functions for Intel processors. (Dave)

Changes since v2:
 * Changed interface to make it look like NUMA CPU lists and structure.
   (Dave)
 * Removed unneeded checks for X86_FEATURE_HYBRID in hotplug callbacks.
   (Chen Yu)
 * Updated ABI documentation.
 * Gave static scope to cputype_entries and cpu_types. (Aubrey)
 * Free sysfs data structures of when all CPUs of the same type
   go offline. (Aubrey)

Changes since v1:
 * Implemented a dynamic, rather than predefined, list of CPU types. (Dave)

sq implement cpu_type
---
 arch/x86/include/asm/topology.h |  2 ++
 arch/x86/kernel/cpu/topology.c  | 19 +++++++++++++++++++
 2 files changed, 21 insertions(+)

diff --git a/arch/x86/include/asm/topology.h b/arch/x86/include/asm/topology.h
index 9239399e5491..aa736b970119 100644
--- a/arch/x86/include/asm/topology.h
+++ b/arch/x86/include/asm/topology.h
@@ -223,4 +223,6 @@ void init_freq_invariance_cppc(void);
 #define init_freq_invariance_cppc init_freq_invariance_cppc
 #endif
 
+#define CPUTYPES_MAX_NR 2
+
 #endif /* _ASM_X86_TOPOLOGY_H */
diff --git a/arch/x86/kernel/cpu/topology.c b/arch/x86/kernel/cpu/topology.c
index 8678864ce712..dd9bca310dba 100644
--- a/arch/x86/kernel/cpu/topology.c
+++ b/arch/x86/kernel/cpu/topology.c
@@ -7,6 +7,7 @@
 
 #include <linux/cpu.h>
 #include <asm/apic.h>
+#include <asm/cpu.h>
 #include <asm/memtype.h>
 #include <asm/processor.h>
 
@@ -159,3 +160,21 @@ int detect_extended_topology(struct cpuinfo_x86 *c)
 #endif
 	return 0;
 }
+
+u32 arch_get_cpu_type(int cpu)
+{
+	return get_hybrid_cpu_params(cpu);
+}
+
+bool arch_has_cpu_type(void)
+{
+	return boot_cpu_has(X86_FEATURE_HYBRID_CPU);
+}
+
+const char *arch_get_cpu_type_name(u32 cpu_type)
+{
+	if (boot_cpu_data.x86_vendor == X86_VENDOR_INTEL)
+		return intel_get_hybrid_cpu_type_name(cpu_type);
+
+	return NULL;
+}
-- 
2.27.0

