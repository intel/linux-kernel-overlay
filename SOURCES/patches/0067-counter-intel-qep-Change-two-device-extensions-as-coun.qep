From a5a4441ffc47106941de268e29ad153fb7cf1c3e Mon Sep 17 00:00:00 2001
From: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date: Thu, 20 May 2021 17:21:46 +0300
Subject: [PATCH 67/81] counter: intel-qep: Change two device extensions as
 count extensions

Change two device extensions "spike_filter_ns" and "preset_enable" as
count extensions since they are more specific to count rather than
global features.

Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
---
 drivers/counter/intel-qep.c | 41 ++++++++++++++++++-------------------
 1 file changed, 20 insertions(+), 21 deletions(-)

diff --git a/drivers/counter/intel-qep.c b/drivers/counter/intel-qep.c
index 44e83d98761b..4a3400dcf500 100644
--- a/drivers/counter/intel-qep.c
+++ b/drivers/counter/intel-qep.c
@@ -392,25 +392,8 @@ static ssize_t enable_write(struct counter_device *counter,
 	return len;
 }
 
-static const struct counter_count_ext intel_qep_count_ext[] = {
-	INTEL_QEP_COUNTER_EXT_RW(ceiling),
-	INTEL_QEP_COUNTER_EXT_RW(enable),
-};
-
-static struct counter_count intel_qep_counter_count[] = {
-	{
-		.id = 0,
-		.name = "Channel 1 Count",
-		.functions_list = intel_qep_count_functions,
-		.num_functions = ARRAY_SIZE(intel_qep_count_functions),
-		.synapses = intel_qep_count_synapses,
-		.num_synapses = ARRAY_SIZE(intel_qep_count_synapses),
-		.ext = intel_qep_count_ext,
-		.num_ext = ARRAY_SIZE(intel_qep_count_ext),
-	},
-};
-
 static ssize_t spike_filter_ns_read(struct counter_device *counter,
+				    struct counter_count *count,
 				    void *priv, char *buf)
 {
 	struct intel_qep *qep = counter->priv;
@@ -429,6 +412,7 @@ static ssize_t spike_filter_ns_read(struct counter_device *counter,
 }
 
 static ssize_t spike_filter_ns_write(struct counter_device *counter,
+				     struct counter_count *count,
 				     void *priv, const char *buf, size_t len)
 {
 	struct intel_qep *qep = counter->priv;
@@ -480,6 +464,7 @@ static ssize_t spike_filter_ns_write(struct counter_device *counter,
 }
 
 static ssize_t preset_enable_read(struct counter_device *counter,
+				  struct counter_count *count,
 				  void *priv, char *buf)
 {
 	struct intel_qep *qep = counter->priv;
@@ -492,6 +477,7 @@ static ssize_t preset_enable_read(struct counter_device *counter,
 }
 
 static ssize_t preset_enable_write(struct counter_device *counter,
+				   struct counter_count *count,
 				   void *priv, const char *buf, size_t len)
 {
 	struct intel_qep *qep = counter->priv;
@@ -526,11 +512,26 @@ static ssize_t preset_enable_write(struct counter_device *counter,
 	return ret;
 }
 
-static const struct counter_device_ext intel_qep_ext[] = {
+static const struct counter_count_ext intel_qep_count_ext[] = {
+	INTEL_QEP_COUNTER_EXT_RW(ceiling),
+	INTEL_QEP_COUNTER_EXT_RW(enable),
 	INTEL_QEP_COUNTER_EXT_RW(spike_filter_ns),
 	INTEL_QEP_COUNTER_EXT_RW(preset_enable)
 };
 
+static struct counter_count intel_qep_counter_count[] = {
+	{
+		.id = 0,
+		.name = "Channel 1 Count",
+		.functions_list = intel_qep_count_functions,
+		.num_functions = ARRAY_SIZE(intel_qep_count_functions),
+		.synapses = intel_qep_count_synapses,
+		.num_synapses = ARRAY_SIZE(intel_qep_count_synapses),
+		.ext = intel_qep_count_ext,
+		.num_ext = ARRAY_SIZE(intel_qep_count_ext),
+	},
+};
+
 static int intel_qep_probe(struct pci_dev *pci, const struct pci_device_id *id)
 {
 	struct intel_qep *qep;
@@ -570,8 +571,6 @@ static int intel_qep_probe(struct pci_dev *pci, const struct pci_device_id *id)
 	qep->counter.num_counts = ARRAY_SIZE(intel_qep_counter_count);
 	qep->counter.signals = intel_qep_signals;
 	qep->counter.num_signals = ARRAY_SIZE(intel_qep_signals);
-	qep->counter.ext = intel_qep_ext;
-	qep->counter.num_ext = ARRAY_SIZE(intel_qep_ext);
 	qep->counter.priv = qep;
 	qep->enabled = false;
 
-- 
2.27.0

