From 1e625f682ac1b26a82cd3ca9d417a5a209cb9c29 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Mon, 12 Oct 2020 09:30:36 -0700
Subject: [PATCH 55/76] x86/cpu: Enable HRESET

Enabling the HRESET instructions involves several steps. Once support for
the instruction has been identified, inspect which HRESET features are
supported in the associated CPUID leaf. Then, program the
IA32_HW_RESET_ENABLE register with the desired features. The history
features to be clobbered when calling HRESET are specified in %eax.

Enable all the supported HRESET features if the instruction is supported.
Also, clobber all history predictions when calling the instruction. For
this purpose save the supported features a global variable that can be
used in entry code.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 arch/x86/include/asm/processor.h |  2 ++
 arch/x86/kernel/cpu/common.c     | 16 +++++++++++++++-
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/arch/x86/include/asm/processor.h b/arch/x86/include/asm/processor.h
index 556b2b17c3e2..9f04926bc0dc 100644
--- a/arch/x86/include/asm/processor.h
+++ b/arch/x86/include/asm/processor.h
@@ -839,4 +839,6 @@ enum mds_mitigations {
 	MDS_MITIGATION_VMWERV,
 };
 
+extern u32 hreset_features;
+
 #endif /* _ASM_X86_PROCESSOR_H */
diff --git a/arch/x86/kernel/cpu/common.c b/arch/x86/kernel/cpu/common.c
index 8bf1049ff614..3a3f87e4f317 100644
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@ -50,6 +50,7 @@
 #include <asm/asm.h>
 #include <asm/bugs.h>
 #include <asm/cpu.h>
+#include <asm/hreset.h>
 #include <asm/mce.h>
 #include <asm/msr.h>
 #include <asm/memtype.h>
@@ -351,6 +352,18 @@ static __always_inline void setup_umip(struct cpuinfo_x86 *c)
 	cr4_clear_bits(X86_CR4_UMIP);
 }
 
+u32 hreset_features;
+
+static __always_inline void setup_hreset(struct cpuinfo_x86 *c)
+{
+	if (!cpu_has(c, X86_FEATURE_HRESET))
+		return;
+
+	hreset_features = cpuid_ebx(CPUID_HRESET_LEAF_EAX);
+	wrmsrl(MSR_IA32_HW_HRESET_ENABLE, hreset_features);
+	pr_info_once("x86/cpu: Intel History Reset (HRESET) activated\n");
+}
+
 /* These bits should not change their value after CPU init is finished. */
 static const unsigned long cr4_pinned_mask =
 	X86_CR4_SMEP | X86_CR4_SMAP | X86_CR4_UMIP | X86_CR4_FSGSBASE;
@@ -1558,10 +1571,11 @@ static void identify_cpu(struct cpuinfo_x86 *c)
 	/* Disable the PN if appropriate */
 	squash_the_stupid_serial_number(c);
 
-	/* Set up SMEP/SMAP/UMIP */
+	/* Set up SMEP/SMAP/UMIP/HRESET */
 	setup_smep(c);
 	setup_smap(c);
 	setup_umip(c);
+	setup_hreset(c);
 
 	/* Enable FSGSBASE instructions if available. */
 	if (cpu_has(c, X86_FEATURE_FSGSBASE)) {
-- 
2.27.0

