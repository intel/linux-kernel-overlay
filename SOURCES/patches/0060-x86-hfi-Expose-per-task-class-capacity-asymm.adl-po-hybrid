From 2dcc3d3ea175c7715523cc3f7acc48ed39de538f Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Sun, 1 Nov 2020 14:04:18 -0800
Subject: [PATCH 60/68] x86/hfi: Expose per-task-class capacity asymmetry

Popolate the scheduler interfaces to enable per-task-class
asymmetric capacity.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 arch/x86/include/asm/hfi.h      | 3 +++
 arch/x86/include/asm/topology.h | 1 +
 arch/x86/platform/intel/hfi.c   | 5 +++++
 3 files changed, 9 insertions(+)

diff --git a/arch/x86/include/asm/hfi.h b/arch/x86/include/asm/hfi.h
index 6b30e4c9ff0b..b57d29c146d0 100644
--- a/arch/x86/include/asm/hfi.h
+++ b/arch/x86/include/asm/hfi.h
@@ -39,12 +39,15 @@ void enable_hfi(void);
 void intel_hfi_check_event(__u64 pkg_therm_status_msr_val);
 unsigned long hfi_scale_cpu_capacity(int cpu);
 bool hfi_has_hw_sched_feedback(void);
+unsigned int hfi_capacity_max_classes(void);
 #else
 static inline void hfi_setup_cpu(struct cpuinfo_x86 *c) { }
 static inline void enable_hfi(void) { }
 static inline void intel_hfi_check_event(__u64 pkg_therm_status_msr_val) { }
 static inline bool hfi_has_hw_sched_feedback(void)
 { return false; }
+static inline unsigned int hfi_capacity_max_classes(void)
+{ return 1; }
 #endif
 
 #else /* __ASSEMBLY__ */
diff --git a/arch/x86/include/asm/topology.h b/arch/x86/include/asm/topology.h
index 8d08991e2cdd..584b6efc939f 100644
--- a/arch/x86/include/asm/topology.h
+++ b/arch/x86/include/asm/topology.h
@@ -232,6 +232,7 @@ void init_freq_invariance_cppc(void);
 #ifdef CONFIG_INTEL_HFI
 #define arch_scale_cpu_capacity hfi_scale_cpu_capacity
 #define arch_has_hw_sched_feedback hfi_has_hw_sched_feedback
+#define arch_capacity_max_classes hfi_capacity_max_classes
 #endif
 
 #endif /* _ASM_X86_TOPOLOGY_H */
diff --git a/arch/x86/platform/intel/hfi.c b/arch/x86/platform/intel/hfi.c
index 4eff69b41cb4..228f5eda312b 100644
--- a/arch/x86/platform/intel/hfi.c
+++ b/arch/x86/platform/intel/hfi.c
@@ -236,6 +236,11 @@ bool hfi_has_hw_sched_feedback(void)
 	return boot_cpu_has(X86_FEATURE_INTEL_HFI);
 }
 
+unsigned int hfi_capacity_max_classes(void)
+{
+	return hfi_params.nr_classes;
+}
+
 unsigned long hfi_scale_cpu_capacity(int cpu)
 {
 	return per_cpu(cpu_scale, cpu);
-- 
2.27.0

