From f05d0c9aaf43b0a100921f7c5edcdb4d11c255e2 Mon Sep 17 00:00:00 2001
From: hemanthk <hemanthkumar.sm@intel.com>
Date: Tue, 30 Mar 2021 14:10:38 +0530
Subject: [PATCH 220/223] xlink-secure: Error handling in
 xlink_secure_initialize

Signed-off-by: hemanthk <hemanthkumar.sm@intel.com>
---
 drivers/misc/xlink-secure/xlink-secure.c | 42 +++++++++++++++++++++---
 1 file changed, 38 insertions(+), 4 deletions(-)

diff --git a/drivers/misc/xlink-secure/xlink-secure.c b/drivers/misc/xlink-secure/xlink-secure.c
index b939c3d77085..66993552339b 100644
--- a/drivers/misc/xlink-secure/xlink-secure.c
+++ b/drivers/misc/xlink-secure/xlink-secure.c
@@ -9,6 +9,7 @@
 #include <linux/kernel.h>
 #include <linux/fs.h>
 #include <linux/cdev.h>
+#include <linux/delay.h>
 #include <linux/of_platform.h>
 #include <linux/platform_device.h>
 #include <linux/mod_devicetable.h>
@@ -884,6 +885,7 @@ enum xlink_error xlink_secure_initialize(void)
 	u32 xlink_num_devices, interface;
 	int id = 0, i = 0, j = 0, interface_found = 0;
 	enum xlink_error rc = X_LINK_SUCCESS;
+	int retry_cnt = 0;
 	struct xlnk_sec_handle *handle;
 #ifdef CONFIG_XLINK_SECURE_MULTITENANT
 	int k = 4;
@@ -892,14 +894,46 @@ enum xlink_error xlink_secure_initialize(void)
 	XLINK_SECURE_DBG("Entry\n");
 	mutex_lock(&initialize_lock);
 	if (!initialize_done) {
-		if (xlink_get_device_list(sw_device_id_list,
-					  &xlink_num_devices) > 0) {
-			XLINK_SECURE_ERR("Error could not get xlink device list\n");
+		do {
+			xlink_num_devices = 0;
+			if (xlink_get_device_list(sw_device_id_list, &xlink_num_devices)) {
+				XLINK_SECURE_ERR("Error could not get xlink device list\n");
+				rc = X_LINK_ERROR;
+				goto err;
+			}
+			if (xlink_num_devices > XLINK_MAX_DEVICE_LIST_SIZE)
+				xlink_num_devices = XLINK_MAX_DEVICE_LIST_SIZE;
+
+			for (i = 0, j = 0; i < xlink_num_devices; i++) {
+				if (GET_INTERFACE_FROM_SW_DEVICE_ID(sw_device_id_list[i]) ==
+						SW_DEVICE_ID_PCIE_INTERFACE)
+					j++;
+			}
+			retry_cnt++;
+#ifdef CONFIG_XLINK_SECURE_MULTITENANT
+			if (j == (sec_num_devices/2))
+				break;
+#else
+			if (j == sec_num_devices)
+				break;
+#endif
+			ssleep(1);
+		} while (retry_cnt <100);
+
+		pr_info("xlink-secure: num_devices=%u retry_cnt=%d\n",
+				xlink_num_devices, retry_cnt);
+
+#ifdef CONFIG_XLINK_SECURE_MULTITENANT
+		if (j != (sec_num_devices/2)) {
+#else
+		if (j != sec_num_devices) {
+#endif
+			XLINK_SECURE_ERR("xlink only listing %d pcie devices\n", j);
 			rc = X_LINK_ERROR;
 			goto err;
 		}
 
-		for (i = 0; ((i < xlink_num_devices) && (j < 4)); i++) {
+		for (i = 0, j = 0; ((i < xlink_num_devices) && (j < 4)); i++) {
 			if (GET_INTERFACE_FROM_SW_DEVICE_ID(sw_device_id_list[i])
 					== SW_DEVICE_ID_PCIE_INTERFACE) {
 				interface_found = 1;
-- 
2.27.0

