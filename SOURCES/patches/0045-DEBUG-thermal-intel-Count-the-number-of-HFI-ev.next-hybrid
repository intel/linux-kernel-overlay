From 9c6412dfa4cf8e91d9bfcef8f869ed5a9b38991b Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Wed, 30 Sep 2020 17:41:52 -0700
Subject: [PATCH 45/76] DEBUG: thermal: intel: Count the number of HFI events

Add a per-CPU variable to count the number of thermal interrupts due to
HFI updates. Also, count the number of processed HFI updates a result of
HFI interrupts.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 drivers/thermal/intel/intel_hfi.c | 20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

diff --git a/drivers/thermal/intel/intel_hfi.c b/drivers/thermal/intel/intel_hfi.c
index 4c077f4293ff..a2fb4dbfb0a4 100644
--- a/drivers/thermal/intel/intel_hfi.c
+++ b/drivers/thermal/intel/intel_hfi.c
@@ -146,6 +146,10 @@ static int __init hfi_enable_debug(char *arg)
 __setup("hfi_debug", hfi_enable_debug);
 
 #ifdef CONFIG_DEBUG_FS
+
+static DEFINE_PER_CPU(u64, hfi_interrupts);
+static u64 hfi_updates;
+
 static int cpu_capacities_show(struct seq_file *m, void *data)
 {
 	int cpu;
@@ -164,6 +168,7 @@ static int hfi_features_show(struct seq_file *s, void *unused)
 	seq_printf(s, "Capabilities:\t\t0x%lx\n", hfi_features.capabilities);
 	seq_printf(s, "Table pages:\t\t%d\n", hfi_features.nr_table_pages);
 	seq_printf(s, "CPU stride:\t\t0x%x\n", hfi_features.cpu_stride);
+	seq_printf(s, "HFI table updates:\t%llu\n", hfi_updates);
 
 	return 0;
 }
@@ -218,8 +223,7 @@ static int hfi_state_show(struct seq_file *s, void *unused)
 	seq_printf(s, "\nHFI table:\n");
 	seq_printf(s, "CPU\tIndex");
 	seq_printf(s, "\tPe  Ef");
-
-	seq_printf(s, "\n");
+	seq_printf(s, "\tHFI-interrupts\n");
 	for_each_cpu(cpu, params->cpus) {
 		s16 index = per_cpu(hfi_cpu_info, cpu).index;
 		void *data_ptr = params->data +
@@ -228,7 +232,7 @@ static int hfi_state_show(struct seq_file *s, void *unused)
 
 		seq_printf(s, "%4u\t%4d", cpu, index);
 		seq_printf(s, "\t%3u %3u", data->perf_cap, data->ee_cap);
-		seq_printf(s, "\n");
+		seq_printf(s, "\t%15llu\n", per_cpu(hfi_interrupts, cpu));
 	}
 
 	return 0;
@@ -597,6 +601,12 @@ static void hfi_update_work_fn(struct work_struct *work)
 
 	update_capabilities(params);
 
+#ifdef CONFIG_DEBUG_FS
+	mutex_lock(&hfi_lock);
+	hfi_updates++;
+	mutex_unlock(&hfi_lock);
+#endif
+
 	raw_spin_lock_irqsave(&params->hfi_event_lock, flags);
 	params->processing_update = false;
 	raw_spin_unlock_irqrestore(&params->hfi_event_lock, flags);
@@ -615,6 +625,10 @@ void intel_hfi_check_event(__u64 pkg_therm_status_msr_val)
 	if (!pkg_therm_status_msr_val)
 		return;
 
+#ifdef CONFIG_DEBUG_FS
+	per_cpu(hfi_interrupts, smp_processor_id())++;
+#endif
+
 	info = &per_cpu(hfi_cpu_info, smp_processor_id());
 	if (!info)
 		return;
-- 
2.27.0

