From 9d6fa182b09af00cc34b55ca8b093493256395b6 Mon Sep 17 00:00:00 2001
From: Gayatri Kammela <gayatri.kammela@intel.com>
Date: Mon, 29 Mar 2021 16:33:59 -0700
Subject: [PATCH 39/47] platform/x86: intel_pmc_core: Add Alderlake support to
 pmc_core driver

Add Alder Lake client and mobile support to pmc_core driver.

Cc: Srinivas Pandruvada <srinivas.pandruvada@intel.com>
Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Cc: David Box <david.e.box@intel.com>
Signed-off-by: Gayatri Kammela <gayatri.kammela@intel.com>
---
 drivers/platform/x86/intel_pmc_core.c | 54 +++++++++++++++++++++++++++
 drivers/platform/x86/intel_pmc_core.h |  4 ++
 2 files changed, 58 insertions(+)

diff --git a/drivers/platform/x86/intel_pmc_core.c b/drivers/platform/x86/intel_pmc_core.c
index 7a9896b6f53f..107f45fe591f 100644
--- a/drivers/platform/x86/intel_pmc_core.c
+++ b/drivers/platform/x86/intel_pmc_core.c
@@ -638,6 +638,58 @@ static void pmc_core_get_tgl_lpm_reqs(struct platform_device *pdev)
 	pmcdev->lpm_req_regs = lpm_req_regs;
 }
 
+static const struct pmc_bit_map adl_ltr_show_map[] = {
+       {"SOUTHPORT_A",         CNP_PMC_LTR_SPA},
+       {"SOUTHPORT_B",         CNP_PMC_LTR_SPB},
+       {"SATA",                CNP_PMC_LTR_SATA},
+       {"GIGABIT_ETHERNET",    CNP_PMC_LTR_GBE},
+       {"XHCI",                CNP_PMC_LTR_XHCI},
+       {"SOUTHPORT_F",         ADL_PMC_LTR_SPF},
+       {"ME",                  CNP_PMC_LTR_ME},
+       /* EVA is Enterprise Value Add, doesn't really exist on PCH */
+       {"SATA1",               CNP_PMC_LTR_EVA},
+       {"SOUTHPORT_C",         CNP_PMC_LTR_SPC},
+       {"HD_AUDIO",            CNP_PMC_LTR_AZ},
+       {"CNV",                 CNP_PMC_LTR_CNV},
+       {"LPSS",                CNP_PMC_LTR_LPSS},
+       {"SOUTHPORT_D",         CNP_PMC_LTR_SPD},
+       {"SOUTHPORT_E",         CNP_PMC_LTR_SPE},
+       {"SATA2",               CNP_PMC_LTR_CAM},
+       {"ESPI",                CNP_PMC_LTR_ESPI},
+       {"SCC",                 CNP_PMC_LTR_SCC},
+       {"ISH",                 CNP_PMC_LTR_ISH},
+       {"UFSX2",               CNP_PMC_LTR_UFSX2},
+       {"EMMC",                CNP_PMC_LTR_EMMC},
+       /*
+        * Check intel_pmc_core_ids[] users of cnp_reg_map for
+        * a list of core SoCs using this.
+        */
+       {"WIGIG",               ICL_PMC_LTR_WIGIG},
+       {"THC0",                TGL_PMC_LTR_THC0},
+       {"THC1",                TGL_PMC_LTR_THC1},
+       {"SOUTHPORT_G",         CNP_PMC_LTR_RESERVED},
+
+       /* Below two cannot be used for LTR_IGNORE */
+       {"CURRENT_PLATFORM",    CNP_PMC_LTR_CUR_PLT},
+       {"AGGREGATED_SYSTEM",   CNP_PMC_LTR_CUR_ASLT},
+       {}
+};
+
+static const struct pmc_reg_map adl_reg_map = {
+        .pfear_sts = ext_tgl_pfear_map,
+        .slp_s0_offset = ADL_PMC_SLP_S0_RES_COUNTER_OFFSET,
+        .slp_s0_res_counter_step = TGL_PMC_SLP_S0_RES_COUNTER_STEP,
+        .ltr_show_sts = adl_ltr_show_map,
+        .msr_sts = msr_map,
+        .ltr_ignore_offset = CNP_PMC_LTR_IGNORE_OFFSET,
+        .regmap_length = CNP_PMC_MMIO_REG_LEN,
+        .ppfear0_offset = CNP_PMC_HOST_PPFEAR0A,
+        .ppfear_buckets = ICL_PPFEAR_NUM_ENTRIES,
+        .pm_cfg_offset = CNP_PMC_PM_CFG_OFFSET,
+        .pm_read_disable_bit = CNP_PMC_READ_DISABLE_BIT,
+        .ltr_ignore_max = ADL_NUM_IP_IGN_ALLOWED,
+};
+
 static inline u32 pmc_core_reg_read(struct pmc_dev *pmcdev, int reg_offset)
 {
 	return readl(pmcdev->regbase + reg_offset);
@@ -1458,6 +1510,8 @@ static const struct x86_cpu_id intel_pmc_core_ids[] = {
 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_TREMONT,	&tgl_reg_map),
 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_TREMONT_L,	&icl_reg_map),
 	X86_MATCH_INTEL_FAM6_MODEL(ROCKETLAKE,		&tgl_reg_map),
+	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE,           &adl_reg_map),
+	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L,         &adl_reg_map),
 	{}
 };
 
diff --git a/drivers/platform/x86/intel_pmc_core.h b/drivers/platform/x86/intel_pmc_core.h
index d7f468d50b32..9a4c4e37298d 100644
--- a/drivers/platform/x86/intel_pmc_core.h
+++ b/drivers/platform/x86/intel_pmc_core.h
@@ -199,6 +199,10 @@ enum ppfear_regs {
 #define TGL_NUM_IP_IGN_ALLOWED			23
 #define TGL_PMC_LPM_RES_COUNTER_STEP_X2		61	/* 30.5us * 2 */
 
+#define ADL_PMC_LTR_SPF				0x1C00
+#define ADL_NUM_IP_IGN_ALLOWED			23
+#define ADL_PMC_SLP_S0_RES_COUNTER_OFFSET	0x1098
+
 /*
  * Tigerlake Power Management Controller register offsets
  */
-- 
2.27.0

