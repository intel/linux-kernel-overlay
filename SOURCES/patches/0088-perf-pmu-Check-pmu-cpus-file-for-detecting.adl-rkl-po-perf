From 7f6337ccf27b4c8b98640353b5fbbc33333c0943 Mon Sep 17 00:00:00 2001
From: Jin Yao <yao.jin@linux.intel.com>
Date: Thu, 1 Apr 2021 08:26:13 -0700
Subject: [PATCH 88/88] perf pmu: Check pmu 'cpus' file for detecting offline
 cpus
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

When atom cpu is offlined, the kernel doesnâ€™t delete the
unavailable pmu (e.g. doesn't delete cpu_atom), so perf tool
needs to check the content of 'cpus' file.

If the 'cpus' file doesn't contain valid information, that
means the pmu is not valid. It would not be linked to the
global list 'perf_pmu__hybrid_pmus'.

Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
---
 tools/perf/util/pmu-hybrid.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/tools/perf/util/pmu-hybrid.c b/tools/perf/util/pmu-hybrid.c
index 86ba84d9469c..f51ccaac60ee 100644
--- a/tools/perf/util/pmu-hybrid.c
+++ b/tools/perf/util/pmu-hybrid.c
@@ -22,6 +22,8 @@ bool perf_pmu__hybrid_mounted(const char *name)
 {
 	char path[PATH_MAX];
 	const char *sysfs;
+	FILE *file;
+	int n, cpu;
 
 	if (strncmp(name, "cpu_", 4))
 		return false;
@@ -31,7 +33,19 @@ bool perf_pmu__hybrid_mounted(const char *name)
 		return false;
 
 	snprintf(path, PATH_MAX, CPUS_TEMPLATE_CPU, sysfs, name);
-	return file_available(path);
+	if (!file_available(path))
+		return false;
+
+	file = fopen(path, "r");
+	if (!file)
+		return false;
+
+	n = fscanf(file, "%u", &cpu);
+	fclose(file);
+	if (n <= 0)
+		return false;
+
+	return true;
 }
 
 struct perf_pmu *perf_pmu__find_hybrid_pmu(const char *name)
-- 
2.27.0

