From c76916f44a123fe78d53d52a11d3f859f3d702c8 Mon Sep 17 00:00:00 2001
From: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date: Thu, 18 Mar 2021 10:48:23 +0200
Subject: [PATCH 50/81] counter: intel-qep: Don't call intel_qep_init() from
 resume

Resume is broken anyway and going to be reworked so remove
intel_qep_init() call from intel_qep_resume() and let the
intel_qep_init() do basic initialization undonditionally.

Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
---
 drivers/counter/intel-qep.c | 16 +++++-----------
 1 file changed, 5 insertions(+), 11 deletions(-)

diff --git a/drivers/counter/intel-qep.c b/drivers/counter/intel-qep.c
index eda3ad9f6e86..274df0aa39d1 100644
--- a/drivers/counter/intel-qep.c
+++ b/drivers/counter/intel-qep.c
@@ -89,11 +89,10 @@ static inline void intel_qep_writel(struct intel_qep *qep,
 	writel(value, qep->regs + offset);
 }
 
-static void intel_qep_init(struct intel_qep *qep, bool reset)
+static void intel_qep_init(struct intel_qep *qep)
 {
 	u32 reg;
 
-	mutex_lock(&qep->lock);
 	reg = intel_qep_readl(qep, INTEL_QEPCON);
 	reg &= ~INTEL_QEPCON_EN;
 	intel_qep_writel(qep, INTEL_QEPCON, reg);
@@ -102,16 +101,13 @@ static void intel_qep_init(struct intel_qep *qep, bool reset)
 	/* make sure peripheral is disabled by reading one more time */
 	reg = intel_qep_readl(qep, INTEL_QEPCON);
 
-	if (reset) {
-		reg &= ~(INTEL_QEPCON_OP_MODE | INTEL_QEPCON_FLT_EN);
-		reg |= INTEL_QEPCON_EDGE_A | INTEL_QEPCON_EDGE_B |
-			INTEL_QEPCON_EDGE_INDX | INTEL_QEPCON_COUNT_RST_MODE;
-	}
+	reg &= ~(INTEL_QEPCON_OP_MODE | INTEL_QEPCON_FLT_EN);
+	reg |= INTEL_QEPCON_EDGE_A | INTEL_QEPCON_EDGE_B |
+	       INTEL_QEPCON_EDGE_INDX | INTEL_QEPCON_COUNT_RST_MODE;
 
 	intel_qep_writel(qep, INTEL_QEPCON, reg);
 
 	intel_qep_writel(qep, INTEL_QEPINT_MASK, INTEL_QEPINT_MASK_ALL);
-	mutex_unlock(&qep->lock);
 }
 
 enum intel_qep_synapse_action {
@@ -509,7 +505,7 @@ static int intel_qep_probe(struct pci_dev *pci, const struct pci_device_id *id)
 	qep->regs = regs;
 	mutex_init(&qep->lock);
 
-	intel_qep_init(qep, true);
+	intel_qep_init(qep);
 	pci_set_drvdata(pci, qep);
 
 	qep->counter.name = pci_name(pci);
@@ -547,8 +543,6 @@ static int intel_qep_resume(struct device *dev)
 	struct pci_dev *pdev = container_of(dev, struct pci_dev, dev);
 	struct intel_qep *qep = pci_get_drvdata(pdev);
 
-	intel_qep_init(qep, false);
-
 	return 0;
 }
 #endif
-- 
2.27.0

