From b375315b97587c08515baa5a14ee0fbe193557b5 Mon Sep 17 00:00:00 2001
From: ssanil <shruthi.sanil@intel.com>
Date: Tue, 24 Mar 2020 17:16:19 +0530
Subject: [PATCH 028/223] Set the pre-timeout value to zero in the pre-timeout
 interrupt context. Else the pre-timeout interrupt will be invoked for every
 tick until the timeout.

---
 drivers/watchdog/thunderbay_wdt.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/watchdog/thunderbay_wdt.c b/drivers/watchdog/thunderbay_wdt.c
index cccb6e4e60de..9f2deda5fda3 100644
--- a/drivers/watchdog/thunderbay_wdt.c
+++ b/drivers/watchdog/thunderbay_wdt.c
@@ -191,12 +191,15 @@ static irqreturn_t thunderbay_wdt_th_isr(int irq, void *dev_id)
 	struct thunderbay_wdt *wdt = (struct thunderbay_wdt *)dev_id;
 	struct arm_smccc_res res;
 
-	u32 th_val = 0;
+	//u32 th_val = 0;
 
 	// write a new TIM_WATCHDOG value greater than TIM_WATCHDOG_INT_THRES
-	if (wdt->wdd.pretimeout != 0)
-		th_val = wdt->wdd.timeout - wdt->wdd.pretimeout;
-	thunderbay_wdt_writel(wdt, TIM_WATCHDOG, th_val * wdt->rate + 10);
+	//if (wdt->wdd.pretimeout != 0)
+	//	th_val = wdt->wdd.timeout - wdt->wdd.pretimeout;
+	//thunderbay_wdt_writel(wdt, TIM_WATCHDOG, th_val * wdt->rate + 1);
+
+	//Set Pre-Timeout to Zero to avoid interrupt getting trigerred for every tick until timeout
+	thunderbay_wdt_set_pretimeout(&wdt->wdd, 0);
 
 	// clear bit 8 (WDOG_TH_INT_CLR)
 	if (IS_ENABLED(CONFIG_HAVE_ARM_SMCCC))
@@ -326,7 +329,7 @@ static int __maybe_unused thunderbay_wdt_resume(struct device *dev)
 {
 	struct thunderbay_wdt *wdt = dev_get_drvdata(dev);
 
-	if (watchdog_active(&wdt->wdd))
+	if (!watchdog_active(&wdt->wdd))
 		return thunderbay_wdt_start(&wdt->wdd);
 
 	return 0;
-- 
2.27.0

