From ae1d38def74a337b404bb5d83d93444f2b91fcbe Mon Sep 17 00:00:00 2001
From: "Li, Tingqian" <tingqian.li@intel.com>
Date: Fri, 18 Dec 2020 14:39:56 +0800
Subject: [PATCH 138/223] misc: vpumgr: reset VPU before reboot

* reset vpu before re-boot, otherwise on TBH re-boot would fail
* remove false warning on xlink read data due to closing channel

Signed-off-by: Li, Tingqian <tingqian.li@intel.com>
---
 drivers/misc/vpumgr/vpu_vcm.c | 17 +++++++++++++----
 drivers/misc/vpumgr/vpu_vcm.h |  2 ++
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/drivers/misc/vpumgr/vpu_vcm.c b/drivers/misc/vpumgr/vpu_vcm.c
index 25adc37009d9..a19e5ce81163 100644
--- a/drivers/misc/vpumgr/vpu_vcm.c
+++ b/drivers/misc/vpumgr/vpu_vcm.c
@@ -111,8 +111,10 @@ static int vcm_recv(struct xlink_handle *xlnk_handle, struct vcm_msg *rep)
 		 */
 		rc = xlink_read_data_to_buffer(xlnk_handle, VCM_XLINK_CHANNEL, ptr, (u32 *)&size);
 		if (rc != X_LINK_SUCCESS) {
-			dev_warn(vdev->dev, "%s: xlink_read_data_to_buffer failed, rc:%d\n",
-				 __func__, rc);
+			if (!vdev->vcm.xlink_closing)
+				dev_warn(vdev->dev,
+					 "%s: xlink_read_data_to_buffer failed, rc:%d\n",
+					 __func__, rc);
 			return -EPIPE;
 		}
 
@@ -468,6 +470,10 @@ static int vpu_connection_up(struct vpumgr_device *vdev)
 	if (pvcm->fwuser_cnt == 0) {
 		/* boot-up firmware under protection of fwboot_mutex */
 		if (vdev->fwname[0] != '\0') {
+
+			/* ensure VPU state is reset/stopped before re-boot */
+			xlink_reset_device(&pvcm->ipc_xlink_handle);
+
 			xlink_err = xlink_boot_device(&pvcm->ipc_xlink_handle, vdev->fwname);
 			if (xlink_err != X_LINK_SUCCESS) {
 				dev_err(dev, "%s: failed to boot-up VPU with firmware %s, rc %d\n",
@@ -477,6 +483,8 @@ static int vpu_connection_up(struct vpumgr_device *vdev)
 			}
 		}
 
+		pvcm->xlink_closing = false;
+
 		/* try to (re)open xlink channel after firmware boot-up */
 		xlink_err = xlink_open_channel(&pvcm->ipc_xlink_handle, VCM_XLINK_CHANNEL,
 					       RXB_TXB, VCM_XLINK_CHAN_SIZE, XLINK_IPC_TIMEOUT);
@@ -495,7 +503,7 @@ static int vpu_connection_up(struct vpumgr_device *vdev)
 
 		pvcm->rxthread = get_task_struct(rxthread);
 
-		dev_info(dev, "%s: success\n", __func__);
+		dev_dbg(dev, "%s: success\n", __func__);
 	}
 	pvcm->fwuser_cnt++;
 	mutex_unlock(&pvcm->fwboot_mutex);
@@ -516,12 +524,13 @@ static void vpu_connection_down(struct vpumgr_device *vdev)
 	mutex_lock(&pvcm->fwboot_mutex);
 	pvcm->fwuser_cnt--;
 	if (pvcm->fwuser_cnt == 0) {
+		pvcm->xlink_closing = true;
 		xlink_close_channel(&pvcm->ipc_xlink_handle, VCM_XLINK_CHANNEL);
 		kthread_stop(pvcm->rxthread);
 		put_task_struct(pvcm->rxthread);
 		pvcm->rxthread = NULL;
 
-		dev_info(dev, "%s: success\n", __func__);
+		dev_dbg(dev, "%s: success\n", __func__);
 	}
 	mutex_unlock(&pvcm->fwboot_mutex);
 }
diff --git a/drivers/misc/vpumgr/vpu_vcm.h b/drivers/misc/vpumgr/vpu_vcm.h
index 90a797a648f8..152f154f1256 100644
--- a/drivers/misc/vpumgr/vpu_vcm.h
+++ b/drivers/misc/vpumgr/vpu_vcm.h
@@ -64,6 +64,8 @@ struct vcm_dev {
 
 	struct mutex fwboot_mutex; /* protect firmware boot-up */
 	int fwuser_cnt;
+
+	bool xlink_closing;
 };
 
 struct vpumgr_ctx {
-- 
2.27.0

