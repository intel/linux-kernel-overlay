From fe9bb1fc5be7307ed1ddf5d026c06b17f91a4032 Mon Sep 17 00:00:00 2001
From: Daniele Alessandrelli <daniele.alessandrelli@intel.com>
Date: Tue, 10 Dec 2019 13:16:41 +0000
Subject: [PATCH 088/223] keembay-ipc: Remove workaround for broken dma-ranges

The behavior for dma_alloc_*() functions when used with dma-ranges was
broken in v5.4, therefore a workaround was implemented in the Keem Bay
VPU/IPC drivers.

Since the issue is fixed in v5.5-rc1, this patches remove the
workaround.

Signed-off-by: Daniele Alessandrelli <daniele.alessandrelli@intel.com>
---
 drivers/firmware/keembay-vpu-ipc.c     | 14 --------------
 drivers/misc/keembay-ipc/keembay-ipc.c | 14 --------------
 2 files changed, 28 deletions(-)

diff --git a/drivers/firmware/keembay-vpu-ipc.c b/drivers/firmware/keembay-vpu-ipc.c
index 5caeecdbad89..fa5c2e4254cd 100644
--- a/drivers/firmware/keembay-vpu-ipc.c
+++ b/drivers/firmware/keembay-vpu-ipc.c
@@ -407,20 +407,6 @@ static int setup_vpu_fw_region(struct vpu_ipc_dev *vpu_dev)
 
 	rsvd_mem->vaddr = dmam_alloc_coherent(dev, rsvd_mem->size,
 					      &rsvd_mem->vpu_addr, GFP_KERNEL);
-	/*
-	 * Fix up DMA handle value.
-	 *
-	 * dma_alloc_coherent() does not take into account the address
-	 * translation described by the dma-ranges properties in the device
-	 * tree; this seems to be a bug of the Linux kernel:
-	 * https://lists.linuxfoundation.org/pipermail/iommu/2019-October/039417.html
-	 *
-	 * As a workaround, we fix the DMA handle manually, by subtracting the
-	 * device DMA offset.
-	 *
-	 * TODO: remove this once/if the DMA kernel code is fixed.
-	 */
-	rsvd_mem->vpu_addr -= dev->dma_pfn_offset << PAGE_SHIFT;
 	/* Get the physical address of the reserved memory region. */
 	rsvd_mem->paddr = dma_to_phys(dev, vpu_dev->reserved_mem.vpu_addr);
 
diff --git a/drivers/misc/keembay-ipc/keembay-ipc.c b/drivers/misc/keembay-ipc/keembay-ipc.c
index d36dd75a8d54..c0ba4aae4eb7 100644
--- a/drivers/misc/keembay-ipc/keembay-ipc.c
+++ b/drivers/misc/keembay-ipc/keembay-ipc.c
@@ -294,20 +294,6 @@ static int init_ipc_rsvd_mem(struct device *dev, struct ipc_buf_mem *mem,
 		rc = -ENOMEM;
 		goto err;
 	}
-	/*
-	 * Fix up DMA handle value.
-	 *
-	 * dma_alloc_coherent() does not take into account the address
-	 * translation described by the dma-ranges properties in the device
-	 * tree; this seems to be a bug of the Linux kernel:
-	 * https://lists.linuxfoundation.org/pipermail/iommu/2019-October/039417.html
-	 *
-	 * As a workaround, we fix the DMA handle manually, by subtracting the
-	 * device DMA offset.
-	 *
-	 * TODO: remove this once/if the DMA kernel code is fixed.
-	 */
-	dma_handle -= dev->dma_pfn_offset << PAGE_SHIFT;
 
 	mem->dev = mem_dev;
 	mem->vaddr = vaddr;
-- 
2.27.0

