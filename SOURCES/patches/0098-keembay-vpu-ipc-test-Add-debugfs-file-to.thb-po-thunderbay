From da6958377c8e94b9ea7c57e8669a6b1061e776b5 Mon Sep 17 00:00:00 2001
From: Daniele Alessandrelli <daniele.alessandrelli@intel.com>
Date: Tue, 11 Feb 2020 18:08:01 +0000
Subject: [PATCH 098/223] keembay-vpu-ipc-test: Add debugfs file to change FW
 name

Add a debugfs file allowing users to modify the firmware name to be used
for the test.

Signed-off-by: Daniele Alessandrelli <daniele.alessandrelli@intel.com>
---
 drivers/firmware/keembay-vpu-ipc-test.c | 64 ++++++++++++++++++++++++-
 1 file changed, 63 insertions(+), 1 deletion(-)

diff --git a/drivers/firmware/keembay-vpu-ipc-test.c b/drivers/firmware/keembay-vpu-ipc-test.c
index 9c7763c69586..44eaad05a6b0 100644
--- a/drivers/firmware/keembay-vpu-ipc-test.c
+++ b/drivers/firmware/keembay-vpu-ipc-test.c
@@ -14,6 +14,7 @@
 #include <linux/module.h>
 #include <linux/platform_device.h>
 #include <linux/slab.h>
+#include <linux/uaccess.h>
 
 #define TEST_READY_WAIT_TIME_MS (31000)
 
@@ -34,10 +35,17 @@ struct test_params {
 	unsigned long chan_id;
 };
 
+/* Forward declaration of the open function for the 'test_fw_name' file. */
+static int test_fw_name_open(struct inode *inode, struct file *file);
+/* Forward declaration of the write function for the 'test_fw_name' file. */
+static ssize_t test_fw_name_wr(struct file *, const char __user *, size_t,
+				loff_t *);
 /* Forward declaration of the write function for the 'test_vpu' file. */
 static ssize_t test_vpu_wr(struct file *, const char __user *, size_t,
 			   loff_t *);
 
+/* The name of the test firmware to load. */
+static char test_fw_name[NAME_MAX] = "vpu-ipc.bin";
 /* List of VPU/IPC devices under test. */
 static LIST_HEAD(dut_list);
 
@@ -53,6 +61,14 @@ static const struct file_operations test_vpu_fops = {
 	.write	= test_vpu_wr,
 };
 
+static const struct file_operations test_fw_name_fops = {
+	.open			= test_fw_name_open,
+	.write			= test_fw_name_wr,
+	.read			= seq_read,
+	.llseek			= seq_lseek,
+	.release		= single_release,
+};
+
 static int __init intel_keembay_vpu_ipc_test_send_data(struct device *dev)
 {
 	int ret;
@@ -106,7 +122,7 @@ static int run_vpu_test(struct device *dev)
 	}
 
 	/* Boot VPU */
-	ret = intel_keembay_vpu_startup(dev, "vpu.bin");
+	ret = intel_keembay_vpu_startup(dev, test_fw_name);
 	if (ret) {
 		pr_err("Failed to start VPU: %d\n", ret);
 		return ret;
@@ -245,6 +261,46 @@ static int add_dev_to_dbgfs_tree(struct device *dev, struct dentry *base_dir)
 	return 0;
 }
 
+static int test_fw_name_show(struct seq_file *s, void *unused)
+{
+	seq_printf(s, "%s\n", test_fw_name);
+	return 0;
+}
+
+static int test_fw_name_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, test_fw_name_show, inode->i_private);
+}
+
+static ssize_t test_fw_name_wr(struct file *file, const char __user *ubuf,
+			       size_t count, loff_t *ppos)
+{
+	char buf[NAME_MAX];
+	size_t len;
+	char *end;
+	int rc;
+
+	if (count >= sizeof(buf))
+		return -EINVAL;
+	len = count;
+	rc = copy_from_user(&buf, ubuf, len);
+	if (rc)
+		return -EFAULT;
+	buf[len] = '\0';
+	/* Find new line, if present, and replace it with string terminator. */
+	end = strchr(buf, '\n');
+	if (end) {
+		*end = '\0';
+		len = end - buf;
+	}
+	/* Ensure that final string length < test_fw_name size. */
+	if (len >= sizeof(test_fw_name))
+		return -EINVAL;
+	strcpy(test_fw_name, buf);
+
+	return count;
+}
+
 /* Remove the DebugFS tree. */
 static void remove_vpu_test_dbgfs_tree(void)
 {
@@ -268,6 +324,12 @@ static int create_vpu_test_dbgfs_tree(struct list_head *list)
 	if (!test_dir)
 		return -ENOMEM;
 	pr_info("TEST_MOD: kmb_vpu_ipc_test dir created\n");
+	/*
+	 * Create debugfs file to configure firmware name (shared among all the
+	 * devices).
+	 */
+	debugfs_create_file("test_fw_name", 0660, test_dir, test_fw_name,
+				    &test_fw_name_fops);
 
 	list_for_each(pos, list) {
 		dut = list_entry(pos, struct dut, list);
-- 
2.27.0

