From 1d4608eb124ebb94a3c51ef414895523e92c9d8e Mon Sep 17 00:00:00 2001
From: Paul Murphy <paul.j.murphy@intel.com>
Date: Fri, 1 May 2020 18:09:10 +0100
Subject: [PATCH 106/223] keembay-vpu-ipc: Add sysfs files as specified

Note: nodes are common to the driver, not the device.

Signed-off-by: Paul Murphy <paul.j.murphy@intel.com>
---
 drivers/firmware/keembay-vpu-ipc.c | 68 +++++++++++++++++++++++++++++-
 1 file changed, 67 insertions(+), 1 deletion(-)

diff --git a/drivers/firmware/keembay-vpu-ipc.c b/drivers/firmware/keembay-vpu-ipc.c
index b2afbc27139b..068bdbdb99b0 100644
--- a/drivers/firmware/keembay-vpu-ipc.c
+++ b/drivers/firmware/keembay-vpu-ipc.c
@@ -159,7 +159,6 @@ struct firmware_header {
 	uint64_t configuration_data_load_address;
 } __packed;
 
-
 /**
  * struct vpu_mem - Information about reserved memory shared with VPU.
  * @vaddr:	The virtual address of the memory region.
@@ -229,6 +228,8 @@ enum keembay_vpu_event {
 
 static struct vpu_ipc_dev *to_vpu_dev(struct device *dev);
 
+static struct kobject *vpu_ipc_kobj;
+
 /**
  * vpu_ipc_handle_event() - Handle events and optionally update state
  *
@@ -1470,6 +1471,42 @@ int intel_keembay_vpu_wait_for_ready(struct device *dev, u32 timeout)
 }
 EXPORT_SYMBOL(intel_keembay_vpu_wait_for_ready);
 
+static ssize_t device_id_show(struct device *dev,
+		struct device_attribute *attr,
+		char *buf)
+{
+	return 0;
+}
+
+static ssize_t device_id_store(struct device *dev,
+		struct device_attribute *attr,
+		const char *buf, size_t n)
+{
+	return 0;
+}
+static DEVICE_ATTR_RW(device_id);
+
+static ssize_t feature_exclusion_show(struct device *dev,
+		struct device_attribute *attr,
+		char *buf)
+{
+	return 0;
+}
+
+static ssize_t feature_exclusion_store(struct device *dev,
+		struct device_attribute *attr,
+		const char *buf, size_t n)
+{
+	return 0;
+}
+static DEVICE_ATTR_RW(feature_exclusion);
+
+static const struct attribute *vpu_ipc_attrs[] = {
+	&dev_attr_device_id.attr,
+	&dev_attr_feature_exclusion.attr,
+	NULL
+};
+
 static int keembay_vpu_ipc_probe(struct platform_device *pdev)
 {
 	int rc;
@@ -1597,6 +1634,35 @@ static struct vpu_ipc_dev *to_vpu_dev(struct device *dev)
 	return platform_get_drvdata(pdev);
 }
 
+static int __init vpu_ipc_sysfs_init(void)
+{
+	int rc;
+
+	vpu_ipc_kobj = kobject_create_and_add("keembay-vpu-ipc", firmware_kobj);
+	if (!vpu_ipc_kobj)
+		return -ENOMEM;
+
+	rc = sysfs_create_files(vpu_ipc_kobj, vpu_ipc_attrs);
+	if (rc < 0)
+		goto cleanup_kobj;
+
+	return 0;
+
+cleanup_kobj:
+	kobject_put(vpu_ipc_kobj);
+
+	return rc;
+}
+
+static void __exit vpu_ipc_sysfs_exit(void)
+{
+	sysfs_remove_files(vpu_ipc_kobj, vpu_ipc_attrs);
+	kobject_put(vpu_ipc_kobj);
+}
+
+module_init(vpu_ipc_sysfs_init);
+module_exit(vpu_ipc_sysfs_exit);
+
 MODULE_DESCRIPTION("Keem Bay VPU IPC Driver");
 MODULE_AUTHOR("Paul Murphy <paul.j.murphy@intel.com>");
 MODULE_AUTHOR("Daniele Alessandrelli <daniele.alessandrelli@intel.com>");
-- 
2.27.0

