From ba0a85c0a24b710b64a9d766caff697a5ed9ec15 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date: Mon, 15 Jun 2020 10:36:48 -0700
Subject: [PATCH 26/76] sched/topology: Introduce arch_has_hw_sched_feedback()

Some platforms have hardware that provides to the kernel dynamic feedback
about the performance and energy efficiency of CPUs in the system. Also,
these platforms have hardware-controlled performance states that update
the operation point of CPUs given their utilizations. These features
provide the same functionality as the schedutil frequency governor. Hence,
we use it as an alternative to it.

Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 include/linux/sched/topology.h |  8 ++++++++
 kernel/sched/topology.c        | 26 ++++++++++++++++----------
 2 files changed, 24 insertions(+), 10 deletions(-)

diff --git a/include/linux/sched/topology.h b/include/linux/sched/topology.h
index 43bdb8b1e1df..c31ba803a278 100644
--- a/include/linux/sched/topology.h
+++ b/include/linux/sched/topology.h
@@ -267,6 +267,14 @@ void arch_set_thermal_pressure(const struct cpumask *cpus,
 { }
 #endif
 
+#ifndef arch_has_hw_sched_feedback
+static __always_inline
+bool arch_has_hw_sched_feedback(void)
+{
+	return false;
+}
+#endif
+
 static inline int task_node(const struct task_struct *p)
 {
 	return cpu_to_node(task_cpu(p));
diff --git a/kernel/sched/topology.c b/kernel/sched/topology.c
index 40bcb591e4fb..831c2df09009 100644
--- a/kernel/sched/topology.c
+++ b/kernel/sched/topology.c
@@ -382,17 +382,23 @@ static bool build_perf_domains(const struct cpumask *cpu_map)
 		if (find_pd(pd, i))
 			continue;
 
-		/* Do not attempt EAS if schedutil is not being used. */
-		policy = cpufreq_cpu_get(i);
-		if (!policy)
-			goto free;
-		gov = policy->governor;
-		cpufreq_cpu_put(policy);
-		if (gov != &schedutil_gov) {
-			if (rd->pd)
-				pr_warn("rd %*pbl: Disabling EAS, schedutil is mandatory\n",
+		/*
+		 * Hardware-based performance states can be used instead
+		 * of schedutil.
+		 */
+		if (!arch_has_hw_sched_feedback()) {
+			/* Do not attempt EAS if schedutil is not being used. */
+			policy = cpufreq_cpu_get(i);
+			if (!policy)
+				goto free;
+			gov = policy->governor;
+			cpufreq_cpu_put(policy);
+			if (gov != &schedutil_gov) {
+				if (rd->pd)
+					pr_warn("rd %*pbl: Disabling EAS, schedutil is mandatory\n",
 						cpumask_pr_args(cpu_map));
-			goto free;
+				goto free;
+			}
 		}
 
 		/* Create the new pd and add it to the local list. */
-- 
2.27.0

