From 23e570755c95eda7a32aedd6ba50635dd59288cf Mon Sep 17 00:00:00 2001
From: Shashank A P <shashankx.ap@intel.com>
Date: Tue, 23 Mar 2021 11:47:35 +0530
Subject: [PATCH 195/223] xlink-core: xlink compilation fix

adding undefined trace events and kernel version check

Signed-off-by: Shashank A P <shashankx.ap@intel.com>
---
 drivers/misc/xlink-core/Makefile            |  1 +
 drivers/misc/xlink-core/xlink-core.c        |  4 +-
 drivers/misc/xlink-core/xlink-multiplexer.c | 12 +++-
 drivers/misc/xlink-core/xlink-trace.h       | 70 ++++++++++++++++++++-
 4 files changed, 81 insertions(+), 6 deletions(-)

diff --git a/drivers/misc/xlink-core/Makefile b/drivers/misc/xlink-core/Makefile
index bae4958a429d..92beccd0a13a 100644
--- a/drivers/misc/xlink-core/Makefile
+++ b/drivers/misc/xlink-core/Makefile
@@ -1,5 +1,6 @@
 #
 # Makefile for xlink Linux driver
 #
+#CFLAGS_xlink-trace.o = -I$(src)
 obj-$(CONFIG_XLINK_CORE) += xlink.o
 xlink-objs += xlink-core.o xlink-multiplexer.o xlink-dispatcher.o xlink-platform.o xlink-ioctl.o xlink-trace.o
diff --git a/drivers/misc/xlink-core/xlink-core.c b/drivers/misc/xlink-core/xlink-core.c
index 98c9e8db451b..d32189a95ff9 100644
--- a/drivers/misc/xlink-core/xlink-core.c
+++ b/drivers/misc/xlink-core/xlink-core.c
@@ -8,6 +8,8 @@
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/fs.h>
+#include <linux/sysfs.h>
+#include <linux/version.h>
 #include <linux/cdev.h>
 #include <linux/platform_device.h>
 #include <linux/mod_devicetable.h>
@@ -97,7 +99,7 @@ static ssize_t eventx_show(struct device *dev, struct device_attribute *attr,
 	struct keembay_xlink_dev *xlink_dev = dev_get_drvdata(dev);
 	struct xlink_attr *a = &xlink_dev->eventx[index];
 
-	return sysfs_emit(buf, "0x%x 0x%lx\n", a->sw_dev_id, a->value);
+	return scnprintf(buf, PAGE_SIZE, "0x%x 0x%lx\n", a->sw_dev_id, a->value);
 }
 
 static ssize_t event0_show(struct device *dev, struct device_attribute *attr, char *buf)
diff --git a/drivers/misc/xlink-core/xlink-multiplexer.c b/drivers/misc/xlink-core/xlink-multiplexer.c
index 4833ba3942df..4b7cc65ec3b1 100644
--- a/drivers/misc/xlink-core/xlink-multiplexer.c
+++ b/drivers/misc/xlink-core/xlink-multiplexer.c
@@ -119,13 +119,21 @@ static enum xlink_error run_callback(struct open_channel *opchan,
 				     void *callback, struct task_struct *pid)
 {
 	enum xlink_error rc = X_LINK_SUCCESS;
-	struct kernel_siginfo info;
 	void (*func)(int chan);
 	int ret;
 
+#if KERNEL_VERSION(4, 20, 0) > LINUX_VERSION_CODE
+	struct siginfo info;
+
+	memset(&info, 0, sizeof(struct siginfo));
+#else
+	struct kernel_siginfo info;
+
+	memset(&info, 0, sizeof(struct kernel_siginfo));
+#endif
+
 	if (opchan->callback_origin == 'U') { // user-space origin
 		if (pid) {
-			memset(&info, 0, sizeof(struct kernel_siginfo));
 			info.si_signo = SIGXLNK;
 			info.si_code = SI_QUEUE;
 			info.si_errno = opchan->id;
diff --git a/drivers/misc/xlink-core/xlink-trace.h b/drivers/misc/xlink-core/xlink-trace.h
index 0284bc54c955..f939695c1d5c 100644
--- a/drivers/misc/xlink-core/xlink-trace.h
+++ b/drivers/misc/xlink-core/xlink-trace.h
@@ -411,14 +411,78 @@ TRACE_EVENT(xlink_event_receive,
 		),
 		TP_printk("swid=%d chan=%d size=%d id=%d", __entry->swid, __entry->chan, __entry->size, __entry->id)
 );
+TRACE_EVENT(xlink_rx_read_pkt_data_arrived_event,
+	    TP_PROTO(u32 swid, uint16_t chan,
+		     u32 id, u32 size),
+		     TP_ARGS(swid, chan, id, size),
+		     TP_STRUCT__entry(__field(uint32_t, swid)
+			      __field(uint16_t, chan)
+			      __field(uint32_t, id)
+			      __field(uint32_t, size)
+		     ),
+		     TP_fast_assign(__entry->swid = swid;
+			    __entry->chan = chan;
+			    __entry->size = id;
+			    __entry->size = size;
+		     ),
+		     TP_printk("swid=%d chan=%d size=%d id=%d",
+			       __entry->swid, __entry->chan,
+			       __entry->size, __entry->id)
+);
+
+TRACE_EVENT(xlink_rx_read_pkt_control_arrived_event,
+	    TP_PROTO(u32 swid, uint16_t chan,
+		     u32 id, u32 size),
+		TP_ARGS(swid, chan, id, size),
+		TP_STRUCT__entry(__field(uint32_t, swid)
+			__field(uint16_t, chan)
+			__field(uint32_t, id)
+			__field(uint32_t, size)
+		),
+		TP_fast_assign(__entry->swid = swid;
+			__entry->chan = chan;
+			__entry->size = id;
+			__entry->size = size;
+		),
+		TP_printk("swid=%d chan=%d size=%d id=%d",
+			  __entry->swid, __entry->chan,
+			  __entry->size, __entry->id)
+);
+
+TRACE_EVENT(xlink_rx_read_consumed_arrived_event,
+	    TP_PROTO(u32 swid, uint16_t chan,
+		     u32 id, u32 size),
+		TP_ARGS(swid, chan, id, size),
+		TP_STRUCT__entry(__field(uint32_t, swid)
+			__field(uint16_t, chan)
+			__field(uint32_t, id)
+			__field(uint32_t, size)
+		),
+		TP_fast_assign(__entry->swid = swid;
+			__entry->chan = chan;
+			__entry->size = id;
+			__entry->size = size;
+		),
+		TP_printk("swid=%d chan=%d size=%d id=%d",
+			  __entry->swid, __entry->chan,
+			  __entry->size, __entry->id)
+);
 #endif /* _XLINK_TRACE_H */
 
 /* This part must be outside protection */
+/*
+ *#undef TRACE_INCLUDE_PATH
+ *#define TRACE_INCLUDE_PATH	../../drivers/misc/xlink-core
+ *#undef TRACE_INCLUDE_FILE
+ *#define TRACE_INCLUDE_FILE xlink-trace
+ *#include <trace/define_trace.h>
+*/
+
 #undef TRACE_INCLUDE_PATH
-#ifdef CONFIG_XLINK_LOCAL_HOST
-#define TRACE_INCLUDE_PATH	../../drivers/misc/xlink-core
-#else
+#ifndef CONFIG_XLINK_LOCAL_HOST
 #define TRACE_INCLUDE_PATH	.
+#else
+#define TRACE_INCLUDE_PATH	../../drivers/misc/xlink-core
 #endif
 #define TRACE_INCLUDE_FILE xlink-trace
 #include <trace/define_trace.h>
-- 
2.27.0

