From b1f9ae2d3561852feee3e780dc09fa13dfae8a6a Mon Sep 17 00:00:00 2001
From: Gayatri Kammela <gayatri.kammela@intel.com>
Date: Tue, 25 May 2021 15:35:03 -0700
Subject: [PATCH 14/14] platform/x86: intel_pmc_core: Add a check before saving
 low power modes

Signed-off-by: Gayatri Kammela <gayatri.kammela@intel.com>
---
 drivers/platform/x86/intel_pmc_core.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/platform/x86/intel_pmc_core.c b/drivers/platform/x86/intel_pmc_core.c
index b4b5b11d8cc0..bdd2311e5894 100644
--- a/drivers/platform/x86/intel_pmc_core.c
+++ b/drivers/platform/x86/intel_pmc_core.c
@@ -1846,7 +1846,8 @@ static int pmc_core_pkgc_show(struct seq_file *s, void *unused)
 }
 DEFINE_SHOW_ATTRIBUTE(pmc_core_pkgc);
 
-static void pmc_core_get_low_power_modes(struct pmc_dev *pmcdev)
+static void pmc_core_get_low_power_modes(struct pmc_dev *pmcdev,
+					 struct platform_device *pdev)
 {
 	u8 lpm_priority[LPM_MAX_NUM_MODES];
 	u32 lpm_en;
@@ -1866,9 +1867,12 @@ static void pmc_core_get_low_power_modes(struct pmc_dev *pmcdev)
 		int pri0 = GENMASK(3, 0) & priority;
 		int pri1 = (GENMASK(7, 4) & priority) >> 4;
 
-		lpm_priority[pri0] = mode;
-		if (mode + 1 <= LPM_MAX_NUM_MODES)
+		dev_info(&pdev->dev, "the value of pri0 is %d\n", pri0);
+		dev_info(&pdev->dev, "the value of pri1 is %d\n", pri1);
+		if (pri0 < LPM_MAX_NUM_MODES && pri1 < LPM_MAX_NUM_MODES) {
+			lpm_priority[pri0] = mode;
 			lpm_priority[pri1] = mode + 1;
+		}
 	}
 
 	/*
@@ -2075,7 +2079,7 @@ static int pmc_core_probe(struct platform_device *pdev)
 	mutex_init(&pmcdev->lock);
 
 	pmcdev->pmc_xram_read_bit = pmc_core_check_read_lock_bit(pmcdev);
-	pmc_core_get_low_power_modes(pmcdev);
+	pmc_core_get_low_power_modes(pmcdev, pdev);
 	pmc_core_do_dmi_quirks(pmcdev);
 
 	if (pmcdev->map == &tgl_reg_map)
-- 
2.27.0

