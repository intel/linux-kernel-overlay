From fb6178cc5d61f1956b9396c51ba9a06f5f962b2b Mon Sep 17 00:00:00 2001
From: Daniele Alessandrelli <daniele.alessandrelli@intel.com>
Date: Wed, 1 Apr 2020 11:16:29 +0100
Subject: [PATCH 101/223] keembay-vpu-ipc: Remove old workaround for xLink

Remove old workaround for xLink

Signed-off-by: Daniele Alessandrelli <daniele.alessandrelli@intel.com>
---
 drivers/firmware/keembay-vpu-ipc.c | 33 ++----------------------------
 1 file changed, 2 insertions(+), 31 deletions(-)

diff --git a/drivers/firmware/keembay-vpu-ipc.c b/drivers/firmware/keembay-vpu-ipc.c
index 9e6dfb0479fa..2f1c8b80fbbd 100644
--- a/drivers/firmware/keembay-vpu-ipc.c
+++ b/drivers/firmware/keembay-vpu-ipc.c
@@ -231,8 +231,6 @@ enum keembay_vpu_event {
 
 static struct vpu_ipc_dev *to_vpu_dev(struct device *dev);
 
-static struct vpu_ipc_dev *vpu0_dev;
-
 /**
  * vpu_ipc_handle_event() - Handle events and optionally update state
  *
@@ -1543,29 +1541,13 @@ static int keembay_vpu_ipc_probe(struct platform_device *pdev)
 				  &vpu_dev->vpu_id);
 	if (rc) {
 		/* Only warn for now; we will enforce this in the future. */
-		dev_warn(dev,
-			 "VPU ID not defined in Device Tree, using 0 as default.\n");
-		dev_warn(dev,
-			 "WARNING: This may cause additional VPU devices to fail probing.\n");
-		vpu_dev->vpu_id = 0;
+		dev_err(dev, "VPU ID not defined in Device Tree\n");
+		goto probe_fail_post_resmem_setup;
 	}
 
 	/* Set platform data reference. */
 	platform_set_drvdata(pdev, vpu_dev);
 
-	/*
-	 * To avoid xLink without multi-slice support to fail, we keep track of
-	 * VPU with ID 0 for now.
-	 * TODO: remove this once xLink is supported.
-	 */
-	if (vpu_dev->vpu_id == 0) {
-		if (vpu0_dev) {
-			dev_err(dev, "VPU device with ID 0 already probed\n");
-			goto probe_fail_post_resmem_setup;
-		}
-		vpu0_dev = vpu_dev;
-	}
-
 	dev_info(dev, "Keem Bay VPU IPC probed.\n");
 
 	return 0;
@@ -1581,9 +1563,6 @@ static int keembay_vpu_ipc_remove(struct platform_device *pdev)
 	struct vpu_ipc_dev *vpu_dev = platform_get_drvdata(pdev);
 	struct device *dev = &pdev->dev;
 
-	if (vpu_dev->vpu_id == 0)
-		vpu0_dev = NULL;
-
 	if (vpu_dev->ready_message_task) {
 		kthread_stop(vpu_dev->ready_message_task);
 		vpu_dev->ready_message_task = NULL;
@@ -1622,14 +1601,6 @@ static struct vpu_ipc_dev *to_vpu_dev(struct device *dev)
 {
 	struct platform_device *pdev;
 
-	/*
-	 * For temporary compatibility with xLink, if dev is NULL, we return
-	 * the VPU with ID 0.
-	 * TODO: remove this once xLink is updated.
-	 */
-	if (!dev && vpu0_dev)
-		return vpu0_dev;
-
 	if (!dev || dev->driver != &keem_bay_vpu_ipc_driver.driver)
 		return ERR_PTR(-EINVAL);
 	pdev = to_platform_device(dev);
-- 
2.27.0

